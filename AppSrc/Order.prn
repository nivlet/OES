Compiling Program: C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\Order.src
Memory Available: 2147483647
1>Use DFAllEnt.pkg
Using pre-compiled package DFALLENT.PKG
Including file: dfallent.pkd    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\dfallent.pkd)
69416>Use cCJStandardCommandBarSystem.pkg
Including file: cCJStandardCommandBarSystem.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\cCJStandardCommandBarSystem.pkg)
69416>>>// these are all the packages used in a standard MDI menubar/toolbar system
69416>>>
69416>>>Use cCJCommandBarSystem.pkg
69416>>>Use cCJStandardMenuItemClasses.pkg
Including file: cCJStandardMenuItemClasses.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\cCJStandardMenuItemClasses.pkg)
69416>>>>>Use Dfpanel.pkg
69416>>>>>Use cCJCommandBarSystem.pkg
69416>>>>>Use LanguageText.pkg
69416>>>>>
69416>>>>>
69416>>>>>Class cCJUndoMenuItem is a cCJMenuItem
69417>>>>>    
69417>>>>>    Procedure Construct_Object
69419>>>>>        Forward Send Construct_Object
69421>>>>>        Set psCaption   to C_$CaptionUndo
69422>>>>>        Set psToolTip to C_$ToolTipUndo
69423>>>>>        Set psDescription to C_$DescUndo
69424>>>>>        Set psImage to "ActionUndo.ico"
69425>>>>>        Set pbActiveUpdate to True
69426>>>>>        Set psCategory to C_$CategoryEdit
69427>>>>>        Set psShortcut to C_$Key_Ctrl_Z
69428>>>>>    End_Procedure
69429>>>>>
69429>>>>>    Procedure OnExecute Variant vCommandBarControl
69431>>>>>        Send Undo of (focus(Self))
69432>>>>>    End_Procedure
69433>>>>>    
69433>>>>>    Function IsEnabled Returns Boolean
69435>>>>>        Boolean bEnabled
69435>>>>>        Get CanUndo of (Focus(Self)) to bEnabled
69436>>>>>        Function_Return bEnabled
69437>>>>>    End_Function
69438>>>>>         
69438>>>>>End_Class
69439>>>>>
69439>>>>>
69439>>>>>Class cCJDeleteEditMenuItem is a cCJMenuItem
69440>>>>>    
69440>>>>>    Procedure Construct_Object
69442>>>>>        Forward Send Construct_Object
69444>>>>>        Set psCaption   to C_$CaptionDelete
69445>>>>>        Set psToolTip to C_$ToolTipDelete
69446>>>>>        Set psDescription to C_$DescDelete
69447>>>>>        Set psImage to "actionDelete.ico"
69448>>>>>        Set psShortcut to C_$Key_Delete
69449>>>>>        Set pbActiveUpdate to True
69450>>>>>        Set psCategory to C_$CategoryEdit
69451>>>>>    End_Procedure
69452>>>>>
69452>>>>>
69452>>>>>    Procedure OnExecute Variant vCommandBarControl
69454>>>>>        Send Delete of (focus(Self))
69455>>>>>    End_Procedure
69456>>>>>    
69456>>>>>    Function IsEnabled Returns Boolean
69458>>>>>        Boolean bEnabled
69458>>>>>        Get CanDelete of (Focus(Self)) to bEnabled
69459>>>>>        Function_Return bEnabled
69460>>>>>    End_Function
69461>>>>>         
69461>>>>>End_Class
69462>>>>>
69462>>>>>
69462>>>>>Class cCJCutMenuItem is a cCJMenuItem
69463>>>>>    
69463>>>>>    Procedure Construct_Object
69465>>>>>        Forward Send Construct_Object
69467>>>>>        Set psCaption   to C_$CaptionCut
69468>>>>>        Set psToolTip to C_$TooltipCut
69469>>>>>        Set psDescription to C_$DescCut
69470>>>>>        Set psImage to "actionCut.ico"
69471>>>>>        Set psShortcut to C_$Key_Ctrl_X
69472>>>>>        Set pbActiveUpdate to True
69473>>>>>        Set psCategory to C_$CategoryEdit
69474>>>>>    End_Procedure
69475>>>>>
69475>>>>>
69475>>>>>    Procedure OnExecute Variant vCommandBarControl
69477>>>>>        Send Cut of (focus(Self))
69478>>>>>    End_Procedure
69479>>>>>    
69479>>>>>    Function IsEnabled Returns Boolean
69481>>>>>        Boolean bEnabled
69481>>>>>        Get CanCut of (Focus(Self)) to bEnabled
69482>>>>>        Function_Return bEnabled
69483>>>>>    End_Function
69484>>>>>         
69484>>>>>End_Class
69485>>>>>
69485>>>>>
69485>>>>>Class cCJCopyMenuItem is a cCJMenuItem
69486>>>>>    
69486>>>>>    Procedure Construct_Object
69488>>>>>        Forward Send Construct_Object
69490>>>>>        Set psCaption   to C_$CaptionCopy
69491>>>>>        Set psToolTip to C_$ToolTipCopy
69492>>>>>        Set psDescription to C_$DescCopy
69493>>>>>        Set psImage to "actionCopy.ico"
69494>>>>>        Set psShortcut to C_$Key_Ctrl_C
69495>>>>>        Set pbActiveUpdate to True
69496>>>>>        Set psCategory to C_$CategoryEdit
69497>>>>>    End_Procedure
69498>>>>>
69498>>>>>
69498>>>>>    Procedure OnExecute Variant vCommandBarControl
69500>>>>>        Send Copy of (focus(Self))
69501>>>>>    End_Procedure
69502>>>>>    
69502>>>>>    Function IsEnabled Returns Boolean
69504>>>>>        Boolean bEnabled
69504>>>>>        Get CanCopy of (Focus(Self)) to bEnabled
69505>>>>>        Function_Return bEnabled
69506>>>>>    End_Function
69507>>>>>         
69507>>>>>End_Class
69508>>>>>
69508>>>>>
69508>>>>>Class cCJPasteMenuItem is a cCJMenuItem
69509>>>>>    
69509>>>>>    Procedure Construct_Object
69511>>>>>        Forward Send Construct_Object
69513>>>>>        Set psCaption   to C_$CaptionPaste
69514>>>>>        Set psToolTip to C_$ToolTipPaste
69515>>>>>        Set psDescription to C_$DescPaste
69516>>>>>        Set psImage to "actionPaste.ico"
69517>>>>>        Set pbActiveUpdate to True
69518>>>>>        Set psShortcut to C_$Key_Ctrl_V
69519>>>>>        Set psCategory to C_$CategoryEdit
69520>>>>>    End_Procedure
69521>>>>>
69521>>>>>
69521>>>>>    Procedure OnExecute Variant vCommandBarControl
69523>>>>>        Send Paste of (focus(Self))
69524>>>>>    End_Procedure
69525>>>>>    
69525>>>>>    Function IsEnabled Returns Boolean
69527>>>>>        Boolean bEnabled
69527>>>>>        Get CanPaste of (Focus(Self)) to bEnabled
69528>>>>>        Function_Return bEnabled
69529>>>>>    End_Function
69530>>>>>         
69530>>>>>End_Class
69531>>>>>
69531>>>>>Class cCJSelectAllMenuItem is a cCJMenuItem
69532>>>>>    
69532>>>>>    Procedure Construct_Object
69534>>>>>        Forward Send Construct_Object
69536>>>>>        Set psCaption   to C_$CaptionSelectAll
69537>>>>>        Set psToolTip to C_$ToolTipSelectAll
69538>>>>>        Set psDescription to C_$DescSelectAll
69539>>>>>        Set pbActiveUpdate to True
69540>>>>>        Set psShortcut to C_$Key_Ctrl_A
69541>>>>>        Set psCategory to C_$CategoryEdit
69542>>>>>    End_Procedure
69543>>>>>
69543>>>>>
69543>>>>>    Procedure OnExecute Variant vCommandBarControl
69545>>>>>        Send Select_All of (focus(Self))
69546>>>>>    End_Procedure
69547>>>>>    
69547>>>>>    Function IsEnabled Returns Boolean
69549>>>>>        Boolean bEnabled
69549>>>>>        Get CanSelect of (Focus(Self)) to bEnabled
69550>>>>>        Function_Return bEnabled
69551>>>>>    End_Function
69552>>>>>         
69552>>>>>End_Class
69553>>>>>
69553>>>>> 
69553>>>>>Class cCJExitMenuItem is a cCJMenuItem
69554>>>>>
69554>>>>>    Procedure Construct_Object
69556>>>>>        Forward Send Construct_Object
69558>>>>>        Set psCaption to C_$CaptionExit
69559>>>>>        Set psToolTip to C_$ToolTipExit
69560>>>>>        Set psDescription to C_$ToolTipExit
69561>>>>>        Set psShortcut to C_$Key_Alt_F4
69562>>>>>        Set psCategory to C_$CategoryFile
69563>>>>>    End_Procedure
69564>>>>>
69564>>>>>    Procedure OnExecute Variant vCommandBarControl
69566>>>>>        Send Exit_Application of Desktop
69567>>>>>    End_Procedure
69568>>>>>
69568>>>>>End_Class           
69569>>>>>
69569>>>>>Class cCJHelpMenuItem is a cCJMenuItem    
69570>>>>>
69570>>>>>    Procedure Construct_Object
69572>>>>>        Forward Send Construct_Object
69574>>>>>        Set psCaption to C_$CaptionHelp
69575>>>>>        Set psDescription to C_$ToolTipHelp
69576>>>>>        Set psToolTip to C_$DescHelp
69577>>>>>        Set psImage to "ActionHelp.ico"
69578>>>>>        Set psShortcut to "F1"
69579>>>>>        Set psCategory to C_$CategoryHelp
69580>>>>>    End_Procedure
69581>>>>>    
69581>>>>>    Procedure OnExecute Variant vCommandBarControl
69583>>>>>        Send Help of (Focus(Self))
69584>>>>>    End_Procedure
69585>>>>>
69585>>>>>End_Class
69586>>>>>
69586>>>>>Class cCJStatusbarMenuItem is a cCJMenuItem
69587>>>>>
69587>>>>>    Procedure Construct_Object
69589>>>>>        Forward Send Construct_Object
69591>>>>>        Set psCaption to C_$CaptionAddStatusbar
69592>>>>>        Set psToolTip to C_$ToolTipAddStatusbar
69593>>>>>        Set psDescription to  C_$DescAddStatusbar
69594>>>>>        Set psCategory to C_$CategoryWindow
69595>>>>>    End_Procedure
69596>>>>>
69596>>>>>    Procedure OnExecute Variant vCommandBarControl
69598>>>>>        Handle hoCommandBars hoClientArea
69598>>>>>        Get CommandBarSystemObject to hoCommandBars
69599>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69600>>>>>        If hoClientArea Begin
69602>>>>>            // the clientarea's parent panel has message
69602>>>>>            Send Toggle_StatusBar of (Parent(hoClientArea))
69603>>>>>        End
69603>>>>>>
69603>>>>>    End_Procedure
69604>>>>>
69604>>>>>     Function IsChecked Returns Boolean
69606>>>>>        Boolean bOn
69606>>>>>        Handle hoCommandBars hoClientArea
69606>>>>>        Get CommandBarSystemObject to hoCommandBars
69607>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69608>>>>>        If hoClientArea Begin
69610>>>>>            // the clientarea's parent panel has message
69610>>>>>            Get StatusBar_State of (Parent(hoClientArea)) to bOn
69611>>>>>        End
69611>>>>>>
69611>>>>>        Function_Return bOn
69612>>>>>     End_Function
69613>>>>>End_Class
69614>>>>>
69614>>>>>Class cCJAutoArrangeIconsMenuItem is a cCJMenuItem
69615>>>>>
69615>>>>>    Procedure Construct_Object
69617>>>>>        Forward Send Construct_Object
69619>>>>>        Set psCaption to C_$CaptionAutoArrangeIcons
69620>>>>>        Set psToolTip to C_$ToolTipAutoArrangeIcons
69621>>>>>        Set psDescription to C_$DescAutoArrangeIcons
69622>>>>>        Set psCategory to C_$CategoryWindow
69623>>>>>    End_Procedure
69624>>>>>
69624>>>>>    Procedure OnExecute Variant vCommandBarControl
69626>>>>>        Handle hoCommandBars hoClientArea
69626>>>>>        Get CommandBarSystemObject to hoCommandBars
69627>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69628>>>>>        If hoClientArea Begin
69630>>>>>            // the clientarea's parent panel has message
69630>>>>>            Send Toggle_Auto_Arrange_Icons of (Parent(hoClientArea))
69631>>>>>        End
69631>>>>>>
69631>>>>>    End_Procedure
69632>>>>>    
69632>>>>>     Function IsChecked Returns Boolean
69634>>>>>        Boolean bOn
69634>>>>>        Handle hoCommandBars hoClientArea
69634>>>>>        Get CommandBarSystemObject to hoCommandBars
69635>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69636>>>>>        If hoClientArea Begin
69638>>>>>            // the clientarea's parent panel has message
69638>>>>>            Get Auto_Arrange_Icons_State of (Parent(hoClientArea)) to bOn
69639>>>>>        End
69639>>>>>>
69639>>>>>        Function_Return bOn
69640>>>>>     End_Function
69641>>>>>End_Class
69642>>>>>
69642>>>>>Class cCJRestoreMenusMenuItem is a cCJMenuItem
69643>>>>>
69643>>>>>    Procedure Construct_Object
69645>>>>>        Forward Send Construct_Object
69647>>>>>        Set psCaption to C_$CaptionRestoreMenus
69648>>>>>        Set psToolTip to C_$ToolTipRestoreMenus
69649>>>>>        Set psDescription to C_$DescRestoreMenus
69650>>>>>        Set psCategory to C_$CategoryWindow
69651>>>>>    End_Procedure
69652>>>>>
69652>>>>>    Procedure OnExecute Variant vCommandBarControl
69654>>>>>        Handle hoCommandBars
69654>>>>>        Get CommandBarSystemObject to hoCommandBars
69655>>>>>        Send RestoreLayout of hoCommandBars
69656>>>>>    End_Procedure
69657>>>>>    
69657>>>>>End_Class
69658>>>>>
69658>>>>>Class cCJCascadeMenuItem is a cCJMenuItem
69659>>>>>
69659>>>>>    Procedure Construct_Object
69661>>>>>        Forward Send Construct_Object
69663>>>>>        Set psCaption to C_$CaptionCascade
69664>>>>>        Set psToolTip to C_$ToolTipCascade
69665>>>>>        Set psDescription to  C_$DescCascade
69666>>>>>        Set psImage to "ActionCascade.ico"
69667>>>>>        Set psCategory to C_$CategoryWindow
69668>>>>>    End_Procedure
69669>>>>>    
69669>>>>>    Procedure OnExecute Variant vCommandBarControl
69671>>>>>        Handle hoCommandBars hoClientArea
69671>>>>>        Get CommandBarSystemObject to hoCommandBars
69672>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69673>>>>>        If hoClientArea Begin
69675>>>>>            Send Cascade_Windows of hoClientArea
69676>>>>>        End
69676>>>>>>
69676>>>>>    End_Procedure
69677>>>>>End_Class
69678>>>>>
69678>>>>>Class cCJTileHorizontally is a cCJMenuItem
69679>>>>>
69679>>>>>    Procedure Construct_Object
69681>>>>>        Forward Send Construct_Object
69683>>>>>        Set psCaption to C_$CaptionTileHorizontally 
69684>>>>>        Set psToolTip to C_$ToolTipTileHorizontally  
69685>>>>>        Set psDescription to  C_$DescTileHorizontally
69686>>>>>        Set psImage to "ActionTileHorizontally.ico"
69687>>>>>        Set psCategory to C_$CategoryWindow
69688>>>>>    End_Procedure
69689>>>>>
69689>>>>>    Procedure OnExecute Variant vCommandBarControl
69691>>>>>        Handle hoCommandBars hoClientArea
69691>>>>>        Get CommandBarSystemObject to hoCommandBars
69692>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69693>>>>>        If hoClientArea Begin
69695>>>>>            Send Tile_Windows_Horizontal of hoClientArea
69696>>>>>        End
69696>>>>>>
69696>>>>>    End_Procedure
69697>>>>>End_Class
69698>>>>>
69698>>>>>Class cCJTileVertically is a cCJMenuItem
69699>>>>>
69699>>>>>    Procedure Construct_Object
69701>>>>>        Forward Send Construct_Object
69703>>>>>        Set psCaption to C_$CaptionTileVertically  
69704>>>>>        Set psToolTip to C_$ToolTipTileVertically
69705>>>>>        Set psDescription to  C_$DescTileVertically
69706>>>>>        Set psImage to "ActionTileVertically.ico"
69707>>>>>        Set psCategory to C_$CategoryWindow
69708>>>>>    End_Procedure
69709>>>>>
69709>>>>>    Procedure OnExecute Variant vCommandBarControl
69711>>>>>        Handle hoCommandBars hoClientArea
69711>>>>>        Get CommandBarSystemObject to hoCommandBars
69712>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69713>>>>>        If hoClientArea Begin
69715>>>>>            Send Tile_Windows_Vertical of hoClientArea
69716>>>>>        End
69716>>>>>>
69716>>>>>    End_Procedure
69717>>>>>End_Class
69718>>>>>
69718>>>>>Class cCJMinimizeWindowsMenuItem is a cCJMenuItem
69719>>>>>
69719>>>>>    Procedure Construct_Object
69721>>>>>        Forward Send Construct_Object
69723>>>>>        Set psCaption to C_$CaptionMinimizeWindows 
69724>>>>>        Set psToolTip to C_$ToolTipMinimizeWindows
69725>>>>>        Set psDescription to  C_$DescMinimizeWindows
69726>>>>>        Set psCategory to C_$CategoryWindow
69727>>>>>    End_Procedure
69728>>>>>
69728>>>>>    Procedure OnExecute Variant vCommandBarControl
69730>>>>>        Handle hoCommandBars hoClientArea
69730>>>>>        Get CommandBarSystemObject to hoCommandBars
69731>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69732>>>>>        If hoClientArea Begin
69734>>>>>            // the clientarea's parent panel has message
69734>>>>>            Send Minimize_all_Windows of (Parent(hoClientArea))
69735>>>>>        End
69735>>>>>>
69735>>>>>    End_Procedure
69736>>>>>End_Class
69737>>>>>
69737>>>>>
69737>>>>>Class cCJRestoreWindowsMenuItem is a cCJMenuItem
69738>>>>>
69738>>>>>    Procedure Construct_Object
69740>>>>>        Forward Send Construct_Object
69742>>>>>        Set psCaption to C_$CaptionRestoreWindows
69743>>>>>        Set psToolTip to C_$ToolTipRestoreWindows
69744>>>>>        Set psDescription to  C_$DescRestoreWindows
69745>>>>>        Set psCategory to C_$CategoryWindow
69746>>>>>    End_Procedure
69747>>>>>
69747>>>>>    Procedure OnExecute Variant vCommandBarControl
69749>>>>>        Handle hoCommandBars hoClientArea
69749>>>>>        Get CommandBarSystemObject to hoCommandBars
69750>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69751>>>>>        If hoClientArea Begin
69753>>>>>            // the clientarea's parent panel has message
69753>>>>>            Send Restore_all_Windows of (Parent(hoClientArea))
69754>>>>>        End
69754>>>>>>
69754>>>>>    End_Procedure
69755>>>>>End_Class
69756>>>>>
69756>>>>>Class cCJArrangeIconsMenuItem is a cCJMenuItem
69757>>>>>
69757>>>>>    Procedure Construct_Object
69759>>>>>        Forward Send Construct_Object
69761>>>>>        Set psCaption to C_$CaptionArrangeIcons  
69762>>>>>        Set psToolTip to C_$ToolTipArrangeIcons
69763>>>>>        Set psDescription to  C_$DescArrangeIcons
69764>>>>>        Set psCategory to C_$CategoryWindow
69765>>>>>    End_Procedure
69766>>>>>
69766>>>>>    Procedure OnExecute Variant vCommandBarControl
69768>>>>>        Handle hoCommandBars hoClientArea
69768>>>>>        Get CommandBarSystemObject to hoCommandBars
69769>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69770>>>>>        If hoClientArea Begin
69772>>>>>            Send Arrange_Icons of hoClientArea
69773>>>>>        End
69773>>>>>>
69773>>>>>    End_Procedure
69774>>>>>
69774>>>>>End_Class
69775>>>>>    
69775>>>Use cCJAboutMenuItem.pkg
Including file: cCJAboutMenuItem.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\cCJAboutMenuItem.pkg)
69775>>>>>Use cCJCommandBarSystem.pkg
69775>>>>>Use LanguageText.pkg
69775>>>>>
69775>>>>>// It is expected that if you use this class that you provide an about object that is
69775>>>>>// activated via activate_about such as DfAbout.pkg. We don't use this for you automatically
69775>>>>>// because you may wish to create your own custom about package.
69775>>>>>
69775>>>>>Class cCJAboutMenuItem is a cCJMenuItem    
69776>>>>>
69776>>>>>    Procedure Construct_Object
69778>>>>>        Forward Send Construct_Object
69780>>>>>        Set psCaption to C_$CaptionAbout
69781>>>>>        Set psDescription to C_$ToolTipAbout
69782>>>>>        Set psToolTip to C_$DescAbout
69783>>>>>        Set psImage to "ActionAbout.ico"
69784>>>>>        Set psCategory to C_$CategoryHelp
69785>>>>>    End_Procedure
69786>>>>>    
69786>>>>>    Procedure OnExecute Variant vCommandBarControl
69788>>>>>        Handle hoCommandBars hoClientArea
69788>>>>>        Get CommandBarSystemObject to hoCommandBars
69789>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
69790>>>>>        If hoClientArea Begin
69792>>>>>            Send Activate_About of hoClientArea
69793>>>>>        End
69793>>>>>>
69793>>>>>    End_Procedure
69794>>>>>
69794>>>>>End_Class
69795>>>>>
69795>>>>>
69795>>>Use cCJDeoMenuItemClasses.pkg
69795>>>Use cCJMDIWindowsMenuItem.pkg
Including file: cCJMDIWindowsMenuItem.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\cCJMDIWindowsMenuItem.pkg)
69795>>>>>Use cCJCommandBarSystem.pkg
69795>>>>>
69795>>>>>Register_Function Client_ID Returns Integer
69795>>>>>
69795>>>>>// only used by cCJMDIWIndowsMenuItem
69795>>>>>Class cCJMDIWindowItem is a cCJMenuItem
69796>>>>>
69796>>>>>    Procedure Construct_Object
69798>>>>>        Forward Send Construct_Object
69800>>>>>        Property Handle phWindow 0 // object id of view
69801>>>>>        Set pbControlFlagNoMovable to True
69802>>>>>        Set pbActiveUpdate to True
69803>>>>>    End_Procedure
69804>>>>>    
69804>>>>>    Procedure OnExecute Variant vCommandBarControl
69806>>>>>        Handle hWindow
69806>>>>>        Get phWindow to hWindow
69807>>>>>        Send Activate_View of hWindow
69808>>>>>    End_Procedure
69809>>>>>    
69809>>>>>End_Class                
69810>>>>>
69810>>>>>
69810>>>>>Class cCJMDIWindowsMenuItem is a cCJMenuItem
69811>>>>>    
69811>>>>>    Procedure Construct_Object
69813>>>>>        Forward Send Construct_Object
69815>>>>>        Property Handle[] phArrayOfWindows
69816>>>>>        Set peControlType to xtpControlPopup
69817>>>>>        Set psCategory to C_$CategoryWindow
69818>>>>>    End_Procedure
69819>>>>>    
69819>>>>>     // This adds MDI windows to the existing menu items.
69819>>>>>     // This removes any existing windows menus and always adds a new set to the end
69819>>>>>
69819>>>>>     Procedure OnPopupInit Variant vCommandBarControl Handle hCommandBarControls
69821>>>>>        Handle  hClientArea hView
69821>>>>>        String  sLabel
69821>>>>>        Integer i iWindows
69821>>>>>        Handle[] hArrayOfWindows
69822>>>>>        Variant vItem
69822>>>>>        
69822>>>>>        // delete all windows actions and menu items. Assume we have an array of DF action objects for the windows
69822>>>>>        // also assume that destroying an action removes all menu instances of that action
69822>>>>>        Get phArrayOfWindows to hArrayOfWindows
69823>>>>>        Move (SizeOfArray(hArrayOfWindows)) to iWindows
69824>>>>>        For i from 0 to (iWindows-1)
69830>>>>>>
69830>>>>>            Send Destroy of hArrayOfWindows[i] // assume this removes all menu items of this action
69831>>>>>        Loop
69832>>>>>>
69832>>>>>        Move (ResizeArray(hArrayOfWindows,0)) to hArrayOfWindows
69833>>>>>
69833>>>>>        // Add all views to this menu. Create the action and add the item
69833>>>>>        Move 0 to i
69834>>>>>        Get Client_Id to hClientArea // object id of client area
69835>>>>>        If (hClientArea > 0) Begin
69837>>>>>            Get Next_Mdi_Dialog of hClientArea True to hView // find first view
69838>>>>>            While (hView <> 0)
69842>>>>>                If (Active_State(hView)) Begin
69844>>>>>                    // create the action
69844>>>>>                    Get Create U_cCJMDIWindowItem to hArrayOfWindows[i]
69845>>>>>                    Get Label of hView to sLabel // caption bar (name) of view
69846>>>>>                    Set psCaption of hArrayOfWindows[i] to sLabel
69847>>>>>                    Set psDescription of hArrayOfWindows[i] to ("Make this view (" - trim(sLabel) - ") the active window.")
69848>>>>>                    If (current_scope(desktop)=hView and View_mode(hView)<>VIEWMODE_ICONIZE) Begin
69850>>>>>                        Set pbChecked of hArrayOfWindows[i] to True
69851>>>>>                    End
69851>>>>>>
69851>>>>>                    Set phWindow of hArrayOfWindows[i] to hView // used by custom OnExecute
69852>>>>>                    If (i=0) Begin
69854>>>>>                        Set pbControlBeginGroup of hArrayOfWindows[i] to True
69855>>>>>                    End
69855>>>>>>
69855>>>>>                    // Create a menu item for this action
69855>>>>>                    Get AddDynamicControl of hArrayOfWindows[i] hCommandBarControls to vItem
69856>>>>>                    Increment i
69857>>>>>                End
69857>>>>>>
69857>>>>>                Get Next_Mdi_Dialog of hClientArea False to hView // find next
69858>>>>>            Loop
69859>>>>>>
69859>>>>>        End
69859>>>>>>
69859>>>>>
69859>>>>>        Set phArrayOfWindows to hArrayOfWindows
69860>>>>>
69860>>>>>     End_Procedure
69861>>>>>     
69861>>>>>End_Class
69862>>>>>
69862>
69862>Object oHtmlHelp is a cHtmlHelp
69864>End_Object
69865>
69865>Object oApplication is a cApplication
69867>    Set peHelpType to htHtmlHelp
69868>End_Object
69869>
69869>Object oToolTipController is a cToolTipController
69871>    Move Self to ghoToolTipController
69872>End_Object
69873>
69873>Use oEditContextMenu.pkg
Including file: oEditContextMenu.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\oEditContextMenu.pkg)
69873>>>Use cCJStandardMenuItemClasses.pkg
69873>>>
69873>>>Object oEditContextMenu is a cCJContextMenu
69875>>>    
69875>>>    Move Self to Default_Form_Floating_Menu_ID
69876>>>    
69876>>>    Object oUndoMenuItem is a cCJUndoMenuItem
69878>>>    End_Object
69879>>>    
69879>>>    Object oCutMenuItem is a cCJCutMenuItem
69881>>>        Set pbControlBeginGroup to True
69882>>>    End_Object
69883>>>    
69883>>>    Object oCopyMenuItem is a cCJCopyMenuItem
69885>>>    End_Object
69886>>>
69886>>>    Object oPasteMenuItem is a cCJPasteMenuItem
69888>>>    End_Object
69889>>>
69889>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
69891>>>    End_Object
69892>>>
69892>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
69894>>>        Set pbControlBeginGroup to True
69895>>>    End_Object
69896>>>
69896>>>End_Object
69897>>>
69897>Use oDEOEditContextMenu.pkg
Including file: oDEOEditContextMenu.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\oDEOEditContextMenu.pkg)
69897>>>Use Windows.pkg
69897>>>Use cCJStandardMenuItemClasses.pkg
69897>>>Use cCJDeoMenuItemClasses.pkg
69897>>>
69897>>>
69897>>>Object oDEOEditContextMenu is a cCJContextMenu
69899>>>    
69899>>>    Move Self to Default_dbFloating_Menu_ID
69900>>>    
69900>>>    Object oUndoMenuItem is a cCJUndoMenuItem
69902>>>    End_Object
69903>>>    
69903>>>    Object oCutMenuItem is a cCJCutMenuItem
69905>>>        Set pbControlBeginGroup to True
69906>>>    End_Object
69907>>>    
69907>>>    Object oCopyMenuItem is a cCJCopyMenuItem
69909>>>    End_Object
69910>>>
69910>>>    Object oPasteMenuItem is a cCJPasteMenuItem
69912>>>    End_Object
69913>>>
69913>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
69915>>>    End_Object
69916>>>
69916>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
69918>>>        Set pbControlBeginGroup to True
69919>>>    End_Object
69920>>>
69920>>>    Object oPromptMenuItem is a cCJPromptMenuItem
69922>>>        Set pbControlBeginGroup to True
69923>>>    End_Object
69924>>>
69924>>>    Object oFindNextMenu is a cCJFindNextMenuItem
69926>>>        Set pbControlBeginGroup to True
69927>>>    End_Object
69928>>>
69928>>>    Object oFindPreviousMenu is a cCJFindPreviousMenuItem
69930>>>    End_Object
69931>>>
69931>>>    Object oClearMenuItem is a cCJClearMenuItem
69933>>>        Set pbControlBeginGroup to True
69934>>>    End_Object
69935>>>
69935>>>    Object oClearAllMenu is a cCJClearAllMenuItem
69937>>>    End_Object
69938>>>
69938>>>    Object oSaveMenu is a cCJSaveMenuItem
69940>>>    End_Object
69941>>>    
69941>>>    Object oDeleteMenu is a cCJDeleteMenuItem
69943>>>    End_Object
69944>>>
69944>>>
69944>>>End_Object
69945>
69945>Object oMain is a Panel
69947>    Set Label To "My Project"
69948>    Set Location to 4 3
69949>    Set Size to 300 450
69950>
69950>    Object oCommandBarSystem is a cCJCommandBarSystem
69952>        Set pbTimerUpdate to True
69953>
69953>        Procedure OnCreateCommandBars
69956>            Handle hoOptions
69956>            Get OptionsObject to hoOptions
69957>            Forward Send OnCreateCommandBars
69959>        End_Procedure
69960>
69960>        Object oMenuBar is a cCJMenuBar
69962>
69962>            Object oFileMenu is a cCJMenuItem
69964>                Set peControlType to xtpControlPopup          
69965>                Set psCaption   to "&File"
69966>                Set psDescription to "Find, Save, Delete, Clear information or quit this application."
69967>                Set psCategory to "Menus"
69968>
69968>                Object oClearMenuItem is a cCJClearMenuItem
69970>                    Set pbAddToDesignerMenu to True
69971>                End_Object
69972>
69972>                Object oClearAllMenu is a cCJClearAllMenuItem
69974>                    Set pbAddToDesignerMenu to True
69975>                End_Object
69976>
69976>                Object oPromptMenuItem is a cCJPromptMenuItem
69978>                    Set pbAddToDesignerMenu to True
69979>                    Set pbControlBeginGroup to True
69980>                End_Object
69981>
69981>                Object oFindMenuItem is a cCJFindMenuItem
69983>                    Set pbAddToDesignerMenu to True
69984>                    Set pbControlBeginGroup to True
69985>                End_Object
69986>
69986>                Object oFindNextMenu is a cCJFindNextMenuItem
69988>                    Set pbAddToDesignerMenu to True
69989>                End_Object
69990>
69990>                Object oFindPreviousMenu is a cCJFindPreviousMenuItem
69992>                    Set pbAddToDesignerMenu to True
69993>                End_Object
69994>
69994>                Object oFindFirstMenu is a cCJFindFirstMenuItem
69996>                    Set pbAddToDesignerMenu to True
69997>                End_Object
69998>
69998>                Object oFindLastMenu is a cCJFindLastMenuItem
70000>                    Set pbAddToDesignerMenu to True
70001>                End_Object
70002>
70002>                Object oSaveMenuItem is a cCJSaveMenuItem
70004>                    Set pbAddToDesignerMenu to True
70005>                    Set pbControlBeginGroup to True
70006>                End_Object
70007>
70007>                Object oDeleteMenuItem is a cCJDeleteMenuItem
70009>                    Set pbAddToDesignerMenu to True
70010>                End_Object
70011>
70011>                Object oExitMenu is a cCJExitMenuItem
70013>                    Set pbControlBeginGroup to True
70014>                End_Object
70015>
70015>            End_Object
70016>
70016>            Object oViewMenu is a cCJMenuItem
70018>                Set peControlType to xtpControlPopup
70019>                Set psCaption to "&View"
70020>                Set psToolTip to "View"
70021>                Set psDescription to "Available Views"
70022>
70022>                Object ooCustomerViewMenuItem is a cCJMenuItem
70024>                    Set psCaption to "oCustomerView"
70025>                    Set psTooltip to "oCustomerView"
70026>                
70026>                    Procedure OnExecute Variant vCommandBarControl
70029>                        Handle hoClient
70029>                        Get Client_Id to hoClient
70030>                        Send Activate_oCustomerView of hoClient
70031>                    End_Procedure
70032>                End_Object
70033>
70033>                Object oSalesPersonEntryViewMenuItem is a cCJMenuItem
70035>                    Set psCaption to "Sales Person Entry View"
70036>                    Set psTooltip to "Sales Person Entry View"
70037>                
70037>                    Procedure OnExecute Variant vCommandBarControl
70040>                        Handle hoClient
70040>                        Get Client_Id to hoClient
70041>                        Send Activate_oSalesPersonView of hoClient
70042>                    End_Procedure
70043>                End_Object
70044>
70044>                Object oVendorEntryViewMenuItem is a cCJMenuItem
70046>                    Set psCaption to "Vendor Entry View"
70047>                    Set psTooltip to "Vendor Entry View"
70048>                
70048>                    Procedure OnExecute Variant vCommandBarControl
70051>                        Handle hoClient
70051>                        Get Client_Id to hoClient
70052>                        Send Activate_oVendorView of hoClient
70053>                    End_Procedure
70054>                End_Object
70055>
70055>                Object oInventoryItemViewMenuItem is a cCJMenuItem
70057>                    Set psCaption to "Inventory Item View"
70058>                    Set psTooltip to "Inventory Item View"
70059>                
70059>                    Procedure OnExecute Variant vCommandBarControl
70062>                        Handle hoClient
70062>                        Get Client_Id to hoClient
70063>                        Send Activate_oInventoryView of hoClient
70064>                    End_Procedure
70065>                End_Object
70066>
70066>                Object oOrderEntryViewMenuItem is a cCJMenuItem
70068>                    Set psCaption to "Order Entry View"
70069>                    Set psTooltip to "Order Entry View"
70070>                
70070>                    Procedure OnExecute Variant vCommandBarControl
70073>                        Handle hoClient
70073>                        Get Client_Id to hoClient
70074>                        Send Activate_oOrderEntryView of hoClient
70075>                    End_Procedure
70076>                End_Object
70077>            End_Object
70078>            
70078>            Object oReportMenu is a cCJMenuItem
70080>                Set peControlType to xtpControlPopup
70081>                Set psCaption to "&Report"
70082>                Set psToolTip to "Report"
70083>                Set psDescription to "Available Reports"
70084>
70084>                Object oCustomerListingWinPrint2MenuItem is a cCJMenuItem
70086>                    Set psCaption to "Customer Listing (WinPrint 2)"
70087>                    Set psTooltip to "Customer Listing (WinPrint 2)"
70088>                
70088>                    Procedure OnExecute Variant vCommandBarControl
70091>                        Handle hoClient
70091>                        Get Client_Id to hoClient
70092>                        Send Activate_oCustomerReport of hoClient
70093>                    End_Procedure
70094>                End_Object
70095>            End_Object
70096>
70096>            Object oNavigateMenu is a cCJMenuItem
70098>                Set peControlType to xtpControlPopup      
70099>                Set psCaption to "&Navigate"    
70100>                Set psTooltip to "Navigate"    
70101>                Set psDescription to "Move to different areas of the application"
70102>
70102>                Object oNextAreaMenu is a cCJNextAreaMenu
70104>                End_Object
70105>
70105>                Object oPriorAreaMenu is a cCJPriorAreaMenu
70107>                End_Object
70108>
70108>                Object oNextViewMenu is a cCJNextViewMenu
70110>                End_Object
70111>
70111>                Object oPriorViewMenu is a cCJPriorViewMenu
70113>                End_Object
70114>
70114>                Object oPromptMenu is a cCJPromptMenuItem
70116>                    Set pbControlBeginGroup to True
70117>                End_Object
70118>
70118>                Object oZoomMenu is a cCJZoomMenuItem
70120>                End_Object
70121>
70121>            End_Object
70122>
70122>            Object oWindowMenu is a cCJMDIWindowsMenuItem
70124>                Set peControlType to xtpControlPopup
70125>                Set psCaption to "&Window"
70126>                Set psToolTip to "Window"
70127>                Set psDescription to "Display Current Views and set other display options."    
70128>
70128>                // These are the static windows items. More will be created in onInitPopup 
70128>                Object oDisplayOptionsMenu is a cCJMenuItem
70130>                    Set peControlType to xtpControlPopup          
70131>                    Set psCaption to "&Display Options"
70132>                    Set psToolTip to "Display Options"
70133>                    Set psDescription to "Set display options"
70134>
70134>                    Object oStatusbarMenu is a cCJStatusbarMenuItem
70136>                    End_Object
70137>
70137>                    Object oAutoArrangeIconsMenu is a cCJAutoArrangeIconsMenuItem
70139>                    End_Object
70140>
70140>                    Object oRestoreMenusMenu is a cCJRestoreMenusMenuItem
70142>                        Set pbControlBeginGroup to True
70143>                    End_Object
70144>
70144>                End_Object
70145>
70145>                Object oCascadeMenu is a cCJCascadeMenuItem
70147>                    Set pbControlBeginGroup to True
70148>                End_Object
70149>
70149>                Object oHorizTile is a cCJTileHorizontally
70151>                End_Object
70152>
70152>                Object oVertTile is a cCJTileVertically
70154>                End_Object
70155>
70155>                Object oMinimizeMenuItem is a cCJMinimizeWindowsMenuItem
70157>                    Set pbControlBeginGroup to True
70158>                End_Object
70159>
70159>                Object oRestoreMenuItem is a cCJRestoreWindowsMenuItem
70161>                End_Object
70162>
70162>                Object oArrangeIconsMenuItem is a cCJAutoArrangeIconsMenuItem
70164>                    Set pbControlBeginGroup to True
70165>                End_Object
70166>
70166>            End_Object
70167>
70167>            Object oHelpMenu is a cCJMenuItem
70169>                Set peControlType to xtpControlPopup    
70170>                Set psCaption to "&Help"
70171>                Set psDescription to "Access Information for learning and using this DataFlex application."
70172>                Set psToolTip to "Help"
70173>
70173>                Object oHelpMenuItem is a cCJHelpMenuItem 
70175>                End_Object
70176>
70176>                Object oAboutMenuItem is a cCJAboutMenuItem
70178>                End_Object
70179>
70179>            End_Object
70180>
70180>        End_Object
70181>
70181>        Object oFindToolBar is a cCJToolbar
70183>            Set psTitle to "Finding Toolbar"
70184>
70184>            Object oFindFirstTool is a cCJFindFirstMenuItem
70186>            End_Object
70187>
70187>            Object oFindPreviousTool is a cCJFindPreviousMenuItem
70189>            End_Object
70190>
70190>            Object oFindMenuTool is a cCJFindMenuItem
70192>            End_Object
70193>
70193>            Object oFindNextTool is a cCJFindNextMenuItem
70195>            End_Object
70196>
70196>            Object oFindLastTool is a cCJFindLastMenuItem
70198>            End_Object
70199>
70199>            Object oPromptToolItem is a cCJPromptMenuItem
70201>                Set pbControlBeginGroup to True
70202>            End_Object
70203>
70203>        End_Object
70204>
70204>        Object oFileToolBar is a cCJToolbar
70206>            Set psTitle to "Data Entry Toolbar"
70207>
70207>            Object oClearToolItem is a cCJClearMenuItem
70209>                Set peControlStyle to xtpButtonIconAndCaption
70210>            End_Object
70211>
70211>            Object oClearAllToolItem2 is a cCJClearAllMenuItem
70213>                Set peControlStyle to xtpButtonIconAndCaption
70214>            End_Object
70215>
70215>            Object oSaveToolItem is a cCJSaveMenuItem
70217>                Set peControlStyle to xtpButtonIconAndCaption
70218>                Set pbControlBeginGroup to True
70219>            End_Object
70220>
70220>            Object oDeleteToolItem is a cCJDeleteMenuItem
70222>                Set peControlStyle to xtpButtonIconAndCaption
70223>            End_Object
70224>
70224>        End_Object
70225>
70225>        Object oEditToolBar is a cCJToolbar
70227>            Set psTitle to "Edit Toolbar"
70228>
70228>            Object oCutToolbarItem is a cCJCutMenuItem
70230>            End_Object
70231>
70231>            Object oCopyToolbarItem is a cCJCopyMenuItem
70233>            End_Object
70234>
70234>            Object oPasteToolbarItem is a cCJPasteMenuItem
70236>            End_Object
70237>
70237>            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
70239>                Set pbControlBeginGroup to True
70240>            End_Object
70241>
70241>        End_Object
70242>
70242>        Object oStatusBar is a cCJStatusBar
70244>
70244>            Object oStatusPane1 is a cCJStatusBarPane
70246>                Set piID to sbpIDIdlePane
70247>                Set pbStyleStretch to True
70248>            End_Object
70249>
70249>            Object oStatusPane2 is a cCJStatusBarPane
70251>                Set phoViewPane to Self
70252>                Set pbStyleStretch to True
70253>            End_Object
70254>
70254>        End_Object
70255>
70255>    End_Object
70256>
70256>    Object oClientArea is a ClientArea
70258>        Use StdAbout.pkg
Including file: StdAbout.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\StdAbout.pkg)
70258>>>//************************************************************************
70258>>>// Confidential Trade Secret.
70258>>>// Copyright (c) 1997 Data Access Corporation, Miami Florida
70258>>>// as an unpublished work.  All rights reserved.
70258>>>// DataFlex is a registered trademark of Data Access Corporation.
70258>>>//
70258>>>//************************************************************************
70258>>>//************************************************************************
70258>>>//
70258>>>// $File name  : StdAbout.pkg
70258>>>// $File title : Standard about object package for VDF
70258>>>// Notice      :
70258>>>// $Author(s)  : John Tuohy
70258>>>//
70258>>>// $Rev History
70258>>>//
70258>>>// JT 06/27/97   File created
70258>>>//************************************************************************
70258>>>
70258>>>// This provides a quick and simple way to create an about package for a program.
70258>>>// You need to create a message inside you client area called Activate_About.
70258>>>// Within this message you should send the message DoAbout passing needed
70258>>>// string information.
70258>>>//
70258>>>//       Procedure Activate_About
70258>>>//           Send DoAbout sTitle sVersion sCopyright sAuthor sBitmap
70258>>>//       End_Procedure
70258>>>//    where: sTitle =     Name of application. If none provided, uses caption
70258>>>//                        bar title
70258>>>//           sVersion   = Version Line. If none provided, will be blank
70258>>>//           sCopyRight = Copyright Line. If none provided, will be blank
70258>>>//           sAuthor    = Author name, blank if none provided
70258>>>//           sBitMap    = Bitmap logo. If none provided, standard VDF bitmap
70258>>>//                        is used.
70258>>>// It is expected that you will place this in your own object package. For
70258>>>// example an order about package may look like this:
70258>>>//
70258>>>//   // OrderAbout.pkg
70258>>>//   Use StdAbout.pkg
70258>>>//   Procedure Activate_About
70258>>>//      String sTitle sCopyright sVersion sAuthor
70258>>>//      Move "My Order Entry System" to sTitle
70258>>>//      Move "Version 2.1" to sVersion
70258>>>//      Move "Copyright 1997, Super Software Inc." to sCopyright
70258>>>//      Move "John Smith"  to sAuthor
70258>>>//      Send DoAbout sTitle sVersion sCopyright sAuthor ""
70258>>>//   end_procedure
70258>>>//   // end of file.
70258>>>
70258>>>Use DfAbout.pkg
Including file: Dfabout.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\Dfabout.pkg)
70258>>>>>//************************************************************************
70258>>>>>// Confidential Trade Secret.
70258>>>>>// Copyright (c) 1997 Data Access Corporation, Miami Florida
70258>>>>>// as an unpublished work.  All rights reserved.
70258>>>>>// DataFlex Is A registered trademark Of Data Access Corporation.
70258>>>>>//
70258>>>>>//************************************************************************
70258>>>>>//************************************************************************
70258>>>>>//
70258>>>>>// $File name  : DfAbout.pkg
70258>>>>>// $File title : About class support
70258>>>>>// Notice      :
70258>>>>>// $Author(s)  : Vincent Oorsprong, Ken Ross
70258>>>>>//
70258>>>>>// $Rev History
70258>>>>>//
70258>>>>>// VOO 07/25/2003 Removed OnResize procedure for sysinfo dialog. Replaced logic
70258>>>>>//                with anchor technique. Removed unnessary property in the
70258>>>>>//                sysinfo dialog. Changed the size Of the about & sysinfo dialog
70258>>>>>//                object To better look in Windows XP. Repositioned the close
70258>>>>>//                button in the sysinfo dialog To line up with the display area
70258>>>>>//                Replaced obsolete code and techniques. Removed dead code.
70258>>>>>// JJT 10/23/2001 removed all ghoworkspace support. Uses app object or nothing
70258>>>>>// SWB 07/19/01   Added support Of the Application object in preference to
70258>>>>>//                the global Workspace object, if it is present
70258>>>>>// JJT 11/05/98   Added version information
70258>>>>>// VOO 29/10/98   Replaced the GetFreeSystemResources for the Win32 variant
70258>>>>>// JJT 7/31/97    Registered Enumerate Workspace so dfabout can exist without
70258>>>>>//                workspace package.
70258>>>>>// JJT 6/27/97    Turned the sysinfo objects into classes so the AboutDialog
70258>>>>>//                class can create this object.
70258>>>>>//                Cleaned up the interface (used correct classes and messages)
70258>>>>>//                Added workspace reporting support To sys-info.
70258>>>>>//                Turned off wrapping in the sys-info editor.
70258>>>>>// KR  ??/??/96   File created
70258>>>>>//************************************************************************
70258>>>>>Use LanguageText.pkg
70258>>>>>Use Windows.pkg
70258>>>>>Use DFbitmap.pkg
70258>>>>>Use GlobalFunctionsProcedures.pkg
70258>>>>>
70258>>>>>External_Function32 WNetGetUser "WNetGetUserA" MPR.DLL Pointer lpName Pointer lpUser_Name Pointer lpLength Returns DWord
70259>>>>>
70259>>>>>Register_Function phoWorkspace Returns Handle
70259>>>>>Register_Function Help_filename Returns String
70259>>>>>Register_Function GetHelpFile Returns String
70259>>>>>Register_Function pbEnterKeyAsTabKey Returns Boolean
70259>>>>>
70259>>>>>//****************************************************************************
70259>>>>>// $Module type: FUNCTION
70259>>>>>// $Module name: Network_User_Name
70259>>>>>// $Author     : AK/VOO/KCR
70259>>>>>// Created     : 09-24-96 @ 19:17
70259>>>>>//
70259>>>>>// Description
70259>>>>>//    This function reads the current username Of windows and returns that
70259>>>>>//    name or an text unknown user
70259>>>>>//
70259>>>>>// $Rev History
70259>>>>>//  07/25/2003  Replaced obsolete code
70259>>>>>//  09/24/1996  Module header created
70259>>>>>//****************************************************************************
70259>>>>>Function Network_User_Name for cDesktop Returns String
70261>>>>>    String sName
70261>>>>>    Integer iRetval iLength
70261>>>>>
70261>>>>>    ZeroString 255 To sName
70262>>>>>    Move 255 To iLength
70263>>>>>
70263>>>>>    Move (WNetGetUser (0, AddressOf (sName), AddressOf (iLength))) To iRetval
70264>>>>>
70264>>>>>    If (iRetval = 0) Begin
70266>>>>>        Function_Return (CString (sName))
70267>>>>>    End
70267>>>>>>
70267>>>>>    Else Begin
70268>>>>>        Function_Return "User Unknown"
70269>>>>>    End
70269>>>>>>
70269>>>>>End_Function // Network_User_Name
70270>>>>>
70270>>>>>Type MEMORYSTATUS
70270>>>>>   Field MEMORYSTATUS.dwLength         As Dword // sizeof(MEMORYSTATUS)
70270>>>>>   Field MEMORYSTATUS.dwMemoryLoad     As Dword // percent Of memory in use
70270>>>>>   Field MEMORYSTATUS.dwTotalPhys      As Dword // bytes Of physical memory
70270>>>>>   Field MEMORYSTATUS.dwAvailPhys      As Dword // free physical memory bytes
70270>>>>>   Field MEMORYSTATUS.dwTotalPageFile  As Dword // bytes Of paging file
70270>>>>>   Field MEMORYSTATUS.dwAvailPageFile  As Dword // free bytes Of paging file
70270>>>>>   Field MEMORYSTATUS.dwTotalVirtual   As Dword // user bytes Of address space
70270>>>>>   Field MEMORYSTATUS.dwAvailVirtual   As Dword // free user bytes
70270>>>>>End_Type // MEMORYSTATUS
70270>>>>>
70270>>>>>External_Function GlobalMemoryStatus "GlobalMemoryStatus" Kernel32.Dll Pointer lpsMemoryStatus Returns Integer
70271>>>>>
70271>>>>>Class SysinfoDisplay Is An Edit
70272>>>>>    Procedure Construct_Object
70274>>>>>        Forward Send Construct_Object
70276>>>>>
70276>>>>>        Set Location To 6 6
70277>>>>>        Set Size To 110 255
70278>>>>>        Set Read_Only_State To True
70279>>>>>        Set Wrap_State To False
70280>>>>>    End_Procedure // Construct_Object
70281>>>>>
70281>>>>>    //****************************************************************************
70281>>>>>    // $Module type: PROCEDURE
70281>>>>>    // $Module name: Add_Line
70281>>>>>    // $Author     : VOO
70281>>>>>    // Created     : 06-10-96 @ 15:23
70281>>>>>    //
70281>>>>>    // Description
70281>>>>>    //    This method will add a line To this edit object, it should go simpler
70281>>>>>    //    but it seems To be done this way.
70281>>>>>    //
70281>>>>>    // $Rev History
70281>>>>>    //  07/25/2003  Replaced property retrieval from expression to GET syntax
70281>>>>>    //  06-10-1996  Module header created
70281>>>>>    //****************************************************************************
70281>>>>>    Procedure Add_Line String sVal
70283>>>>>        Integer iLine
70283>>>>>
70283>>>>>        Get Line_Count To iLine
70284>>>>>        If (iLine = 1 And (Not (Changed_State (Self)))) Begin
70286>>>>>            Move 0 To iLine
70287>>>>>        End
70287>>>>>>
70287>>>>>        Set Value Item iLine To sVal
70288>>>>>    End_Procedure // Add_Line
70289>>>>>
70289>>>>>    //****************************************************************************
70289>>>>>    // $Module type: PROCEDURE
70289>>>>>    // $Module name: Show_Current_Directory
70289>>>>>    // $Author     : VOO
70289>>>>>    // Created     : 06-10-96 @ 15:24
70289>>>>>    //
70289>>>>>    // Description
70289>>>>>    //    This method will show the name Of the current directory in the system
70289>>>>>    //    information box
70289>>>>>    //
70289>>>>>    // $Rev History
70289>>>>>    //    06-10-96  Module header created
70289>>>>>    //****************************************************************************
70289>>>>>    Procedure Show_Current_Directory
70291>>>>>        String sDir
70291>>>>>
70291>>>>>        Get_Current_Directory To sDir
70292>>>>>
70292>>>>>        Send Add_Line (SFormat (C_$CurrentDirectory, sDir))
70293>>>>>    End_Procedure // Show_Current_Directory
70294>>>>>
70294>>>>>    Procedure Show_Windows_Directory
70296>>>>>        String sWindir
70296>>>>>
70296>>>>>        Get_Windows_Directory To sWindir
70297>>>>>
70297>>>>>        Send Add_Line (SFormat (C_$WindowsDirectory, sWindir))
70298>>>>>    End_Procedure // Show_Windows_Directory
70299>>>>>
70299>>>>>    Procedure Show_Current_User
70301>>>>>        Send Add_Line (SFormat (C_$NetworkUserName, Network_User_Name (Self)))
70302>>>>>    End_Procedure // Show_Current_User
70303>>>>>
70303>>>>>    Procedure Show_Number_Format
70305>>>>>        Integer iFormat
70305>>>>>        String sFormatText
70305>>>>>
70305>>>>>        Get_Attribute Df_Thousands_Separator To iFormat
70308>>>>>        Move (Character (iFormat)) To sFormatText
70309>>>>>        Send Add_Line (SFormat (C_$ThousandsSeparator, sFormatText, iFormat))
70310>>>>>
70310>>>>>        Get_Number_Format To iFormat
70311>>>>>        If (iFormat = 0) Begin
70313>>>>>            Move "." To sFormatText
70314>>>>>        End
70314>>>>>>
70314>>>>>        Else Begin
70315>>>>>            Move "," To sFormatText
70316>>>>>        End
70316>>>>>>
70316>>>>>        Send Add_Line (SFormat (C_$DecimalSeparator, sFormatText))
70317>>>>>    End_Procedure // Show_Number_Format
70318>>>>>
70318>>>>>    Procedure Show_Filelist_Name
70320>>>>>        String sFilename
70320>>>>>
70320>>>>>        Get_Attribute Df_Filelist_Name To sFilename
70323>>>>>
70323>>>>>        Send Add_Line (SFormat (C_$CurrentFilelist, sFilename))
70324>>>>>    End_Procedure // Show_Filelist_Name
70325>>>>>
70325>>>>>    Procedure Show_Lock_Delay
70327>>>>>        Integer iLockdelay
70327>>>>>
70327>>>>>        Get_Attribute Df_Lock_Delay To iLockdelay
70330>>>>>
70330>>>>>        Send Add_Line (SFormat (C_$DatabaseLockingDelay, iLockDelay))
70331>>>>>    End_Procedure // Show_Lock_Delay
70332>>>>>
70332>>>>>    Procedure Show_Lock_Timeout
70334>>>>>        Integer iLockTimeout
70334>>>>>
70334>>>>>        Get_Attribute Df_Lock_Timeout To iLockTimeout
70337>>>>>
70337>>>>>        Send Add_Line (SFormat (C_$DatabaseLockingTimeout, iLockTimeOut))
70338>>>>>    End_Procedure // Show_Lock_Timeout
70339>>>>>
70339>>>>>    Procedure Show_Screen_Size
70341>>>>>        Integer iYscreensize iXscreensize
70341>>>>>
70341>>>>>        Move (GetSystemMetrics (SM_CXSCREEN)) To iXscreensize
70342>>>>>        Move (GetSystemMetrics (SM_CYSCREEN)) To iYscreensize
70343>>>>>
70343>>>>>        Send Add_Line (SFormat (C_$VideoResolution, iXscreensize, iYscreensize))
70344>>>>>    End_Procedure // Show_Screen_Size
70345>>>>>
70345>>>>>    Procedure Show_Page_Size
70347>>>>>        Send Add_Line (SFormat (C_$PageEndFormFeed, Pageend, Pagefeed))
70348>>>>>    End_procedure // Show_Page_Size
70349>>>>>
70349>>>>>    Procedure Show_Date
70351>>>>>        Date dToday
70351>>>>>
70351>>>>>        Sysdate4 dToday
70352>>>>>
70352>>>>>        Send Add_Line (SFormat (C_$CurrentSystemDate, String (dToday)))
70353>>>>>    End_procedure // Show_Date
70354>>>>>
70354>>>>>    Procedure Show_Date_Format
70356>>>>>        Integer iDateFormat
70356>>>>>        String sDateFormat
70356>>>>>
70356>>>>>        Get_Attribute Df_Date_Format To iDateFormat
70359>>>>>        Case Begin
70359>>>>>            Case (iDateFormat = DF_DATE_USA)
70361>>>>>                Move C_$USA To sDateFormat
70362>>>>>                Case Break
70363>>>>>            Case (iDateFormat = DF_DATE_EUROPEAN)
70366>>>>>                Move C_$European To sDateFormat
70367>>>>>                Case Break
70368>>>>>            Case (iDateFormat = DF_DATE_MILITARY)
70371>>>>>                Move C_$Military To sDateFormat
70372>>>>>                Case Break
70373>>>>>            Case Else
70373>>>>>                Move C_$UnknownDateType To sDateFormat
70374>>>>>                Case Break
70375>>>>>        Case End
70375>>>>>
70375>>>>>        Send Add_Line (SFormat (C_$DateFormat, sDateformat))
70376>>>>>    End_Procedure // Show_Date_Format
70377>>>>>
70377>>>>>    Procedure Show_Memavail
70379>>>>>        Integer iMem
70379>>>>>
70379>>>>>        Memory iMem
70380>>>>>>
70380>>>>>
70380>>>>>        Send Add_Line (SFormat (C_$AvailableMemory, iMem))
70381>>>>>    End_Procedure // Show_Memavail
70382>>>>>
70382>>>>>    Procedure Show_Systemresources
70384>>>>>        String sMemoryStatus
70384>>>>>        Integer iVoid
70384>>>>>        Dword dwMemoryLoad dwTotalPhys dwAvailPhys dwTotalPageFile dwAvailPageFile dwTotalVirtual dwAvailVirtual
70384>>>>>
70384>>>>>        ZeroType MEMORYSTATUS To sMemoryStatus
70385>>>>>
70385>>>>>        Move (GlobalMemoryStatus (AddressOf (sMemoryStatus))) To iVoid
70386>>>>>
70386>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwMemoryLoad    To dwMemoryLoad
70387>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwTotalPhys     To dwTotalPhys
70388>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwAvailPhys     To dwAvailPhys
70389>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwTotalPageFile To dwTotalPageFile
70390>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwAvailPageFile To dwAvailPageFile
70391>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwTotalVirtual  To dwTotalVirtual
70392>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwAvailVirtual  To dwAvailVirtual
70393>>>>>
70393>>>>>        Send Add_Line (SFormat (C_$MemoryUtilization, dwMemoryLoad))
70394>>>>>        Send Add_Line (SFormat (C_$AvailablePhysicalMemory, dwAvailPhys / dwTotalPhys * 100.0))
70395>>>>>        Send Add_Line (SFormat (C_$AvailablePagefileSpace, dwAvailPageFile / dwTotalPageFile * 100.0))
70396>>>>>        Send Add_Line (SFormat (C_$AvailableVirtualMemory, dwAvailVirtual / dwTotalVirtual * 100.0))
70397>>>>>    End_Procedure // Show_Systemresources
70398>>>>>
70398>>>>>    Procedure Show_Registration
70400>>>>>        String sRegName
70400>>>>>        Integer iSN
70400>>>>>
70400>>>>>        Registration sRegName iSN
70401>>>>>>
70401>>>>>
70401>>>>>        Send Add_Line (SFormat (C_$Serial, iSN))
70402>>>>>        Send Add_Line (SFormat (C_$RegName, sRegName))
70403>>>>>    End_Procedure // Show_Registration
70404>>>>>
70404>>>>>    //****************************************************************************
70404>>>>>    // If workspaces are used, we will send the message EnumerateWorkspaceData
70404>>>>>    // To the workspace object passing the an object and message To send back
70404>>>>>    // To this object. It is expected that the workspace object will send this
70404>>>>>    // message for every line Of information it wants displayed (passing the
70404>>>>>    // information To be displayed
70404>>>>>    //****************************************************************************
70404>>>>>    Register_Procedure EnumerateWorkspaceData Integer hObjId Integer hmMessId
70404>>>>>
70404>>>>>    Procedure Show_ServicePack
70406>>>>>        String sVersion
70406>>>>>
70406>>>>>        Get_Profile_String "" "CurrentVersionDescription" To sVersion
70409>>>>>
70409>>>>>        If (sVersion <> "") Begin
70411>>>>>           Send Add_Line sVersion
70412>>>>>           Send Add_Line ""
70413>>>>>        End
70413>>>>>>
70413>>>>>    End_Procedure // Show_ServicePack
70414>>>>>
70414>>>>>    Procedure Show_WorkspaceInformation
70416>>>>>        Integer hoWorkspace
70416>>>>>
70416>>>>>        If (ghoApplication <> 0) Begin
70418>>>>>            Get phoWorkspace Of ghoApplication To hoWorkspace
70419>>>>>            Send EnumerateWorkspaceData Of hoWorkspace Self Msg_Add_Line
70420>>>>>        End
70420>>>>>>
70420>>>>>    End_Procedure // Show_WorkspaceInformation
70421>>>>>
70421>>>>>    Function VersionStr Integer iVer Integer iRev Integer iBld Returns String
70423>>>>>        Function_Return (String (iVer) - "." - String (iRev) - "." - String (iBld))
70424>>>>>    End_Function // VersionStr
70425>>>>>
70425>>>>>    Procedure Show_Versions
70427>>>>>        Integer iVersion iRevision iBuild
70427>>>>>
70427>>>>>        Version_information iVersion iRevision iBuild
70429>>>>>
70429>>>>>        Send Add_Line (SFormat (C_$RuntimeVersion, VersionStr(self,iVersion,iRevision,iBuild) ))
70430>>>>>        Send Add_Line (SFormat (C_$PackageVersion, VersionStr(self,PKG_VERSION, PKG_REVISION, PKG_BUILD) ))
70431>>>>>        Send Add_Line (SFormat (C_$FMACVersion, VersionStr(self,FMAC_VERSION, FMAC_REVISION, FMAC_BUILD) ))
70432>>>>>    End_Procedure // Show_Versions
70433>>>>>
70433>>>>>    //***
70433>>>>>    //*** BW
70433>>>>>    //*** Procedure: Show_Drivers
70433>>>>>    //*** Purpose  : Show loaded database drivers
70433>>>>>    //***
70433>>>>>
70433>>>>>    Procedure Show_Drivers
70435>>>>>        String sCurrentDriver sLoadedDrivers
70435>>>>>        Integer iNumberOfDrivers iCount
70435>>>>>
70435>>>>>        Move "" To sLoadedDrivers
70436>>>>>        Get_Attribute DF_NUMBER_DRIVERS To iNumberOfDrivers
70439>>>>>        For iCount From 1 To iNumberOfDrivers
70445>>>>>>
70445>>>>>            Get_Attribute DF_DRIVER_NAME Of iCount To sCurrentDriver
70448>>>>>            If (sLoadedDrivers <> "") Begin
70450>>>>>                Move (Append (sLoadedDrivers, ", ")) To sLoadedDrivers
70451>>>>>            End
70451>>>>>>
70451>>>>>            Move (Append (sLoadedDrivers, sCurrentDriver)) To sLoadedDrivers
70452>>>>>        Loop
70453>>>>>>
70453>>>>>        Send Add_Line (SFormat (C_$DatabaseDriver, sLoadedDrivers))
70454>>>>>    End_Procedure // Show_Drivers
70455>>>>>
70455>>>>>    Procedure Show_HelpFile
70457>>>>>        String sHelpFile
70457>>>>>        Integer eHelpType
70457>>>>>
70457>>>>>        If (ghoApplication <> 0) Begin
70459>>>>>            Get peHelpType Of ghoApplication To eHelpType
70460>>>>>            If (eHelpType = htHtmlHelp and ghoHtmlHelp) Begin
70462>>>>>                Get GetHelpFile Of ghoHtmlHelp To sHelpFile
70463>>>>>            End
70463>>>>>>
70463>>>>>            Else If (eHelpType = htWinHelp and Help_object_id) Begin
70466>>>>>                Get Help_filename Of Help_object_id To sHelpFile
70467>>>>>            End
70467>>>>>>
70467>>>>>            Else Begin
70468>>>>>                Move C_$ThereIsNoHelpfileDefined To sHelpFile
70469>>>>>            End
70469>>>>>>
70469>>>>>
70469>>>>>            Send Add_Line ""
70470>>>>>            Send Add_Line (SFormat (C_$HelpFile, sHelpFile))
70471>>>>>        End
70471>>>>>>
70471>>>>>    End_Procedure // Show_HelpFile
70472>>>>>
70472>>>>>    Procedure Show_EnterAsTab
70474>>>>>        Boolean bEnterKeyAsTabKey
70474>>>>>        String sText
70474>>>>>
70474>>>>>        If (ghoApplication <> 0) Begin
70476>>>>>            Get pbEnterKeyAsTabKey Of ghoApplication To bEnterKeyAsTabKey
70477>>>>>            If (bEnterKeyAsTabKey) Begin
70479>>>>>                Move "True" To sText
70480>>>>>            End
70480>>>>>>
70480>>>>>            Else Begin
70481>>>>>                Move "False" To sText
70482>>>>>            End
70482>>>>>>
70482>>>>>            Send Add_Line (SFormat (C_$EnterKeyNavForward, sText))
70483>>>>>        End
70483>>>>>>
70483>>>>>    End_Procedure // Show_EnterAsTab
70484>>>>>
70484>>>>>    //****************************************************************************
70484>>>>>    // $Module type: PROCEDURE
70484>>>>>    // $Module name: Add_Focus
70484>>>>>    // $Author     : VOO
70484>>>>>    // Created     : 24-09-96 @ 19:43
70484>>>>>    //
70484>>>>>    // Description
70484>>>>>    //    During activation we will remove the old information and add the newly
70484>>>>>    //    found systeminformation
70484>>>>>    //
70484>>>>>    // $Rev History
70484>>>>>    //    24-09-96  Module header created
70484>>>>>    //****************************************************************************
70484>>>>>    Procedure Add_Focus Integer hoRoot
70486>>>>>        Forward Send Add_Focus hoRoot
70488>>>>>
70488>>>>>        Send Delete_Data
70489>>>>>
70489>>>>>        Set Changed_State To False
70490>>>>>        Set Read_Only_State To True
70491>>>>>
70491>>>>>        Send Show_ServicePack
70492>>>>>        Send Show_WorkSpaceInformation // added To show WS info
70493>>>>>        If (ghoApplication <> 0) Begin
70495>>>>>            Send Show_HelpFile
70496>>>>>            Send Show_EnterAsTab
70497>>>>>        End
70497>>>>>>
70497>>>>>        Send Show_Drivers
70498>>>>>        Send Show_Current_User
70499>>>>>        Send Show_Windows_Directory
70500>>>>>        Send Show_Current_Directory
70501>>>>>        Send Show_Filelist_Name
70502>>>>>        Send Show_Versions
70503>>>>>        Send Show_Memavail
70504>>>>>        Send Show_Screen_Size
70505>>>>>        Send Show_Page_Size
70506>>>>>        Send Show_Number_Format
70507>>>>>        Send Show_Date_Format
70508>>>>>        Send Show_Lock_Delay
70509>>>>>        Send Show_Lock_Timeout
70510>>>>>        Send Show_Date
70511>>>>>        Send Show_Systemresources
70512>>>>>        Send Show_Registration
70513>>>>>    End_Procedure // Show_All_Info
70514>>>>>End_Class // SysinfoDisplay
70515>>>>>
70515>>>>>//****************************************************************************
70515>>>>>// $Module type: OBJECT
70515>>>>>// $Module name: Sysinfo_Dialog
70515>>>>>// $Author     : VOO
70515>>>>>// Created     : 24-09-96 @ 18:47
70515>>>>>//
70515>>>>>// Description
70515>>>>>//    This object shows the systeminformation on the screen
70515>>>>>//
70515>>>>>// $Rev History
70515>>>>>//    24-09-96  Module header created
70515>>>>>//****************************************************************************
70515>>>>>Class SysInfoDialog Is A ModalPanel
70516>>>>>    Procedure Construct_Object
70518>>>>>        Forward Send Construct_Object
70520>>>>>
70520>>>>>        Set Label to C_$SystemInformation
70521>>>>>        Set pbSizeToClientArea to True
70522>>>>>        Set Size to 140 267
70523>>>>>        Set piMinSize to 140 267
70524>>>>>        Set Locate_Mode To CENTER_ON_SCREEN
70525>>>>>        Set Border_Style To Border_Thick
70526>>>>>
70526>>>>>        Object oSysinfoDisplay Is A SysInfoDisplay
70528>>>>>            Set peAnchors to anAll
70529>>>>>        End_Object // oSysinfoDisplay
70530>>>>>
70530>>>>>        Object oCloseButton Is A Button
70532>>>>>            Set Label To C_$Close
70533>>>>>            Set Location To 120 210
70534>>>>>            Set Message Item 0 To Msg_Close_Panel
70535>>>>>            Set Default_State To True
70536>>>>>            Set peAnchors to anBottomRight
70537>>>>>        End_Object // oCloseButton
70538>>>>>
70538>>>>>        On_Key kCancel Send Close_Panel
70539>>>>>    End_Procedure // Construct_Object
70540>>>>>End_Class // SysinfoDialog
70541>>>>>
70541>>>>>// Purpose:
70541>>>>>//
70541>>>>>// Ken Ross 12/17/96 5:16PM
70541>>>>>//
70541>>>>>Class AboutDialog Is A ModalPanel
70542>>>>>    Procedure Construct_Object
70544>>>>>        String sVdfRootDir
70544>>>>>
70544>>>>>        Forward Send Construct_Object
70546>>>>>
70546>>>>>        Set Label To C_$About
70547>>>>>        Set Size to 89 212
70548>>>>>        Set Locate_Mode To CENTER_ON_SCREEN
70549>>>>>
70549>>>>>        Object oSysInfoDialog Is A SysInfoDialog
70551>>>>>        End_Object // oSysInfoDialog
70552>>>>>
70552>>>>>        Object oBox Is A Container3d
70554>>>>>            Set Border_Style To Border_StaticEdge
70555>>>>>            Set Size to 63 202
70556>>>>>            Set Location To 4 5
70557>>>>>
70557>>>>>            Object oAboutGraphic Is A BitmapContainer
70559>>>>>                Set Border_Style To Border_None
70560>>>>>                Set Bitmap_Style To Bitmap_Center
70561>>>>>                Set Size To 48 48
70562>>>>>                Set Location To 7 2
70563>>>>>            End_Object // oAboutGraphic
70564>>>>>
70564>>>>>            Object oProductName Is A TextBox
70566>>>>>                Set Label To C_$ProductName
70567>>>>>                Set Size To 10 45
70568>>>>>                Set Location To 8 53
70569>>>>>            End_Object // oProductName
70570>>>>>
70570>>>>>            Object oVersion Is A TextBox
70572>>>>>                Set Label To C_$Version
70573>>>>>                Set Size To 10 25
70574>>>>>                Set Location To 21 53
70575>>>>>            End_Object // oVersion
70576>>>>>
70576>>>>>            Object oCopyright Is A TextBox
70578>>>>>                Set Label To C_$Copyright
70579>>>>>                Set Size To 10 31
70580>>>>>                Set Location To 34 53
70581>>>>>            End_Object // oCopyright
70582>>>>>
70582>>>>>            Object oAuthor Is A TextBox
70584>>>>>                Set Label To C_$Author
70585>>>>>                Set Size To 10 22
70586>>>>>                Set Location To 46 53
70587>>>>>            End_Object // oAuthor
70588>>>>>        End_Object // oBox
70589>>>>>
70589>>>>>        Object oOKButton Is A Button
70591>>>>>            On_Item C_$OK Send Close_Panel
70592>>>>>            Set Size To 14 50
70593>>>>>            Set Location To 71 157
70594>>>>>        End_Object // oOKButton
70595>>>>>
70595>>>>>        Object oSysInfoButton Is A Button
70597>>>>>            On_Item C_$SystemInfo Send Show_Sysinfo
70598>>>>>            Set Size To 14 50
70599>>>>>            Set Location To 71 101
70600>>>>>        End_Object // oSysInfoButton
70601>>>>>
70601>>>>>        On_Key Kcancel Send KeyAction Of oOKButton
70602>>>>>
70602>>>>>        Set Logo To "DacAbout.bmp"  // square bitmaps Of 42x42 work best
70603>>>>>    End_Procedure // Construct_Object
70604>>>>>
70604>>>>>    Procedure Set ProductName String sProductName
70606>>>>>        Set Label Of oProductName To sProductName
70607>>>>>    End_Procedure // Set ProductName
70608>>>>>
70608>>>>>    Procedure Set Version String sVersion
70610>>>>>        Set Label Of oVersion To sVersion
70611>>>>>    End_Procedure // Set Version
70612>>>>>
70612>>>>>    Procedure Set Copyright string sCopyright
70614>>>>>        Set Label Of oCopyright To sCopyright
70615>>>>>    End_Procedure // Set Copyright
70616>>>>>
70616>>>>>    Procedure Set Author String sAuthor
70618>>>>>        Set Label Of oAuthor To sAuthor
70619>>>>>    End_Procedure // Set Author
70620>>>>>
70620>>>>>    Procedure Set Logo string sLogo
70622>>>>>        // square bitmaps Of 42x42 work best
70622>>>>>        Set Bitmap Of oAboutGraphic To sLogo
70623>>>>>    End_Procedure // Set Logo
70624>>>>>
70624>>>>>    Procedure Show_Sysinfo
70626>>>>>        Send Popup_Modal Of oSysinfoDialog
70627>>>>>    End_Procedure // Show_Sysinfo
70628>>>>>
70628>>>>>    Procedure End_Construct_Object
70630>>>>>        Handle hoVersionInfo
70630>>>>>        Boolean bIncluded
70630>>>>>        Integer iMajor iMinor iRelease iBuild
70630>>>>>        String sLabel
70630>>>>>
70630>>>>>        Get Label Of oVersion To sLabel
70631>>>>>        If (sLabel = C_$VERSION) Begin
70633>>>>>            // set it To the version info Of the program, if available
70633>>>>>            If (ghoApplication <> 0) Begin
70635>>>>>                Get phoVersionInfo Of ghoApplication To hoVersionInfo
70636>>>>>                Get pbIncluded Of hoVersionInfo To bIncluded
70637>>>>>                If (bIncluded) Begin
70639>>>>>                    Get piVersionMajor Of hoVersionInfo To iMajor
70640>>>>>                    Get piVersionMinor Of hoVersionInfo To iMinor
70641>>>>>                    Get piVersionRelease Of hoVersionInfo To iRelease
70642>>>>>                    Get piVersionBuild Of hoVersionInfo To iBuild
70643>>>>>                    Move (SFormat (C_$VERSION + ": %1.%2.%3.%4", iMajor, iMinor, iRelease, iBuild)) To sLabel
70644>>>>>                    Set Version To sLabel
70645>>>>>                End
70645>>>>>>
70645>>>>>            End
70645>>>>>>
70645>>>>>        End
70645>>>>>>
70645>>>>>
70645>>>>>        Forward Send End_Construct_Object
70647>>>>>    End_Procedure // End_Construct_Object
70648>>>>>End_Class // AboutDialog
70649>>>
70649>>>// *************************************************************************
70649>>>//  Public message. This is the default message. It is expected that you will
70649>>>//   create your own message to override this
70649>>>// *************************************************************************
70649>>>
70649>>>Procedure Activate_About
70652>>>   Send DoAbout "" "" "" "" ""
70653>>>End_Procedure
70654>>>
70654>>>// *************************************************************************
70654>>>//  Public message. It is expected that you will send this message (most
70654>>>//  likely from Activate_About. This creates an about object, activates it
70654>>>//  and destroys it when done. It is not exepected that you will augment this.
70654>>>// *************************************************************************
70654>>>
70654>>>Procedure DoAbout string sTitle string sVersion string sCopyRight string sAuthor string sBitmap
70657>>>        integer hoObj hoMain
70657>>>
70657>>>        // create object
70657>>>        Object About is an AboutDialog
70659>>>            // if no title passed use the label of the main panel
70659>>>            // (if a main panel exists).
70659>>>            if sTitle     eq '' Begin
70661>>>                Get Main_Window of desktop to hoMain
70662>>>                if hoMain Get Label of hoMain to sTitle
70665>>>            end
70665>>>>
70665>>>            set productname to sTitle
70666>>>            set version     to sVersion
70667>>>            set copyright   to sCopyRight
70668>>>            set author      to sAuthor
70669>>>            If sBitmap    ne '' ;               set logo to sBitMap // square bitmaps of 42x42 work best
70672>>>            Move self to hoObj // object Id
70673>>>        End_Object
70674>>>        Send Popup   of hoObj    // popup the about object
70675>>>        Send Destroy of hoObj // when done, it will be destroyed
70676>>>End_procedure
70677>        Use CustomerView.vw
Including file: CustomerView.vw    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\CustomerView.vw)
70677>>>Use Windows.pkg
70677>>>Use DFClient.pkg
70677>>>Use cCustomerDataDictionary.dd
Including file: cCustomerDataDictionary.dd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\cCustomerDataDictionary.dd)
70677>>>>>Use DataDict.pkg
70677>>>>>
70677>>>>>Open Customer
Including file: Customer.fd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\Customer.fd)
70679>>>>>Open OrderHea
Including file: OrderHea.fd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\OrderHea.fd)
70681>>>>>Open OrdSys
Including file: OrdSys.fd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\OrdSys.fd)
70683>>>>>
70683>>>>>Object Customer_State_VT is a CodeValidationTable
70685>>>>>    Set Type_Value to "STATES"
70686>>>>>    Set Allow_Blank_State to True
70687>>>>>End_Object
70688>>>>>
70688>>>>>Register_Object Customer_sl
70688>>>>>
70688>>>>>Class cCustomerDataDictionary is a DataDictionary
70689>>>>>    
70689>>>>>    Procedure Construct_Object
70691>>>>>        Forward Send Construct_Object
70693>>>>>        Set Main_file to Customer.File_Number
70694>>>>>
70694>>>>>        Set Add_System_File to OrdSys.File_Number DD_Lock_On_New_Save
70695>>>>>
70695>>>>>        Set Add_Client_File to OrderHea.File_Number
70696>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
70697>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
70698>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
70699>>>>>
70699>>>>>        Set Field_Option Field Customer.Customer_Number DD_AUTOFIND to True
70700>>>>>        Set Key_Field_State Field Customer.Customer_Number to True
70701>>>>>        Set Field_Option Field Customer.Customer_Number DD_NOPUT to True
70702>>>>>        Set Field_Auto_Increment Field Customer.Customer_Number to File_Field OrdSys.Cust_Number
70703>>>>>        Set Field_Prompt_Object Field Customer.Customer_Number to Customer_sl
70704>>>>>
70704>>>>>        Set Field_Prompt_Object Field Customer.Name to Customer_sl
70705>>>>>
70705>>>>>        Set Field_Option Field Customer.State DD_CAPSLOCK to True
70706>>>>>        Set Field_Class_Name Field Customer.State to "dbComboForm"
70707>>>>>        Set Field_Value_Table Field Customer.State to Customer_State_VT
70708>>>>>
70708>>>>>        Set Field_Mask Field Customer.Zip to "#####-####"
70709>>>>>        Set Field_Mask_Type Field Customer.Zip to Mask_Window
70710>>>>>
70710>>>>>        Set Field_Mask_Type Field Customer.Credit_Limit to Mask_Currency_Window
70711>>>>>        Set Field_Class_Name Field Customer.Credit_Limit to "dbSpinForm"
70712>>>>>
70712>>>>>        Set Field_Option Field Customer.Purchases DD_DISPLAYONLY to True
70713>>>>>        Set Field_Mask_Type Field Customer.Purchases to Mask_Currency_Window
70714>>>>>
70714>>>>>        Set Field_Option Field Customer.Balance DD_DISPLAYONLY to True
70715>>>>>        Set Field_Mask_Type Field Customer.Balance to Mask_Currency_Window
70716>>>>>
70716>>>>>        Set Field_Checkbox_Values Field Customer.Status to "Y" "N"
70717>>>>>        Set Cascade_Delete_State to False
70718>>>>>
70718>>>>>    End_Procedure
70719>>>>>
70719>>>>>    Procedure Field_Defaults
70721>>>>>        Forward Send Field_Defaults
70723>>>>>        Set Field_Changed_Value Field Customer.State to "AR"
70724>>>>>    End_Procedure
70725>>>>>
70725>>>>>End_Class
70726>>>>>
70726>>>>>Use Customer.sl
Including file: Customer.sl    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\Customer.sl)
70726>>>>>>>// Customer.sl
70726>>>>>>>// Customer Lookup List
70726>>>>>>>
70726>>>>>>>Use DFClient.pkg
70726>>>>>>>Use cDbCJGridPromptList.pkg
70726>>>>>>>Use cDbCJGridColumn.pkg
70726>>>>>>>Use Windows.pkg
70726>>>>>>>
70726>>>>>>>Use cCustomerDataDictionary.dd
70726>>>>>>>
70726>>>>>>>CD_Popup_Object Customer_sl is a dbModalPanel
70744>>>>>>>>
70744>>>>>>>    Set Location to 5 5
70745>>>>>>>    Set Size to 134 236
70746>>>>>>>    Set Label To "Customer Lookup List"
70747>>>>>>>    Set Border_Style to Border_Thick
70748>>>>>>>    Set Minimize_Icon to False
70749>>>>>>>
70749>>>>>>>
70749>>>>>>>    Object oCustomer_DD is a cCustomerDataDictionary
70751>>>>>>>    End_Object // oCustomer_DD
70752>>>>>>>
70752>>>>>>>    Set Main_DD To oCustomer_DD
70753>>>>>>>    Set Server  To oCustomer_DD
70754>>>>>>>
70754>>>>>>>
70754>>>>>>>
70754>>>>>>>    Object oSelList is a cDbCJGridPromptList
70756>>>>>>>        Set Size to 105 226
70757>>>>>>>        Set Location to 5 5
70758>>>>>>>        Set peAnchors to anAll
70759>>>>>>>        Set psLayoutSection to "Customer_sl_oSelList"
70760>>>>>>>        Set Ordering to 1
70761>>>>>>>        Set pbAutoServer to True
70762>>>>>>>
70762>>>>>>>        Object oCustomer_Customer_Number is a cDbCJGridColumn
70764>>>>>>>            Entry_Item Customer.Customer_Number
70765>>>>>>>            Set piWidth to 99
70766>>>>>>>            Set psCaption to "Customer Number"
70767>>>>>>>        End_Object // oCustomer_Customer_Number
70768>>>>>>>
70768>>>>>>>        Object oCustomer_Name is a cDbCJGridColumn
70770>>>>>>>            Entry_Item Customer.Name
70771>>>>>>>            Set piWidth to 225
70772>>>>>>>            Set psCaption to "Name"
70773>>>>>>>        End_Object // oCustomer_Name
70774>>>>>>>
70774>>>>>>>
70774>>>>>>>    End_Object // oSelList
70775>>>>>>>
70775>>>>>>>    Object oOk_bn is a Button
70777>>>>>>>        Set Label to "&Ok"
70778>>>>>>>        Set Location to 115 73
70779>>>>>>>        Set peAnchors to anBottomRight
70780>>>>>>>
70780>>>>>>>        Procedure OnClick
70783>>>>>>>            Send OK of oSelList
70784>>>>>>>        End_Procedure
70785>>>>>>>
70785>>>>>>>    End_Object // oOk_bn
70786>>>>>>>
70786>>>>>>>    Object oCancel_bn is a Button
70788>>>>>>>        Set Label to "&Cancel"
70789>>>>>>>        Set Location to 115 127
70790>>>>>>>        Set peAnchors to anBottomRight
70791>>>>>>>
70791>>>>>>>        Procedure OnClick
70794>>>>>>>            Send Cancel of oSelList
70795>>>>>>>        End_Procedure
70796>>>>>>>
70796>>>>>>>    End_Object // oCancel_bn
70797>>>>>>>
70797>>>>>>>    Object oSearch_bn is a Button
70799>>>>>>>        Set Label to "&Search..."
70800>>>>>>>        Set Location to 115 181
70801>>>>>>>        Set peAnchors to anBottomRight
70802>>>>>>>
70802>>>>>>>        Procedure OnClick
70805>>>>>>>            Send Search of oSelList
70806>>>>>>>        End_Procedure
70807>>>>>>>
70807>>>>>>>    End_Object // oSearch_bn
70808>>>>>>>
70808>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
70809>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
70810>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
70811>>>>>>>
70811>>>>>>>
70811>>>>>>>CD_End_Object // Customer_sl
70813>>>>>>>>
70813>>>Use DFEntry.pkg
70813>>>Use dfTabDlg.pkg
70813>>>Use dfcentry.pkg
70813>>>Use dfSpnEnt.pkg
70813>>>Use cDbTextEdit.pkg
70813>>>
70813>>>Deferred_View Activate_oCustomerView for ;Object oCustomerView is a dbView
70838>>>    Object oCustomer_DD is a cCustomerDataDictionary
70840>>>    End_Object
70841>>>
70841>>>    Set Main_DD to oCustomer_DD
70842>>>    Set Server to oCustomer_DD
70843>>>
70843>>>    Set Border_Style to Border_Thick
70844>>>    Set Size to 163 300
70845>>>    Set Location to 2 2
70846>>>    Set Label to "Customer Entry View"
70847>>>
70847>>>    Object oCustomer_Customer_Number is a dbForm
70849>>>        Entry_Item Customer.Customer_Number
70850>>>        Set Location to 6 70
70851>>>        Set Size to 13 42
70852>>>        Set Label to "Customer Number:"
70853>>>        Set Label_Justification_Mode to JMode_Right
70854>>>        Set Label_Col_Offset to 0
70855>>>    End_Object
70856>>>
70856>>>    Object oCustomer_Name is a dbForm
70858>>>        Entry_Item Customer.Name
70859>>>        Set Location to 21 70
70860>>>        Set Size to 13 186
70861>>>        Set Label to "Name:"
70862>>>        Set Label_Justification_Mode to JMode_Right
70863>>>        Set Label_Col_Offset to 0
70864>>>    End_Object
70865>>>
70865>>>    Object oDbTabDialog1 is a dbTabDialog
70867>>>        Set Size to 110 279
70868>>>        Set Location to 41 8
70869>>>    
70869>>>        Set Rotate_Mode to RM_Rotate
70870>>>
70870>>>        Object oDbTabPage1 is a dbTabPage
70872>>>            Set Label to "Address"
70873>>>
70873>>>            Object oCustomer_Address is a dbForm
70875>>>                Entry_Item Customer.Address
70876>>>                Set Location to 12 57
70877>>>                Set Size to 13 186
70878>>>                Set Label to "Street Address:"
70879>>>                Set Label_Col_Offset to 0
70880>>>                Set Label_Justification_Mode to JMode_Right
70881>>>            End_Object
70882>>>
70882>>>            Object oCustomer_City is a dbForm
70884>>>                Entry_Item Customer.City
70885>>>                Set Location to 27 57
70886>>>                Set Size to 13 90
70887>>>                Set Label to "City:"
70888>>>                Set Label_Justification_Mode to JMode_Right
70889>>>                Set Label_Col_Offset to 0
70890>>>            End_Object
70891>>>
70891>>>            Object oCustomer_State is a dbComboForm
70893>>>                Entry_Item Customer.State
70894>>>                Set Location to 27 150
70895>>>                Set Size to 13 37
70896>>>            End_Object
70897>>>
70897>>>            Object oCustomer_Zip is a dbForm
70899>>>                Entry_Item Customer.Zip
70900>>>                Set Location to 27 190
70901>>>                Set Size to 13 66
70902>>>            End_Object
70903>>>
70903>>>            Object oCustomer_Phone_Number is a dbForm
70905>>>                Entry_Item Customer.Phone_Number
70906>>>                Set Location to 42 57
70907>>>                Set Size to 13 126
70908>>>                Set Label to "Phone Number:"
70909>>>                Set Label_Col_Offset to 0
70910>>>                Set Label_Justification_Mode to JMode_Right
70911>>>            End_Object
70912>>>
70912>>>            Object oCustomer_Fax_Number is a dbForm
70914>>>                Entry_Item Customer.Fax_Number
70915>>>                Set Location to 57 57
70916>>>                Set Size to 13 126
70917>>>                Set Label to "Fax Number:"
70918>>>                Set Label_Justification_Mode to JMode_Right
70919>>>                Set Label_Col_Offset to 0
70920>>>            End_Object
70921>>>
70921>>>            Object oCustomer_EMail_Address is a dbForm
70923>>>                Entry_Item Customer.EMail_Address
70924>>>                Set Location to 73 57
70925>>>                Set Size to 13 186
70926>>>                Set Label to "EMail Address:"
70927>>>                Set Label_Justification_Mode to JMode_Right
70928>>>                Set Label_Col_Offset to 0
70929>>>            End_Object
70930>>>        End_Object
70931>>>
70931>>>        Object oDbTabPage2 is a dbTabPage
70933>>>            Set Label to "Balances"
70934>>>
70934>>>            Object oCustomer_Credit_Limit is a dbSpinForm
70936>>>                Entry_Item Customer.Credit_Limit
70937>>>                Set Location to 15 70
70938>>>                Set Size to 13 67
70939>>>                Set Label to "Credit Limit:"
70940>>>                Set Label_Col_Offset to 0
70941>>>                Set Label_Justification_Mode to JMode_Right
70942>>>            End_Object
70943>>>
70943>>>            Object oCustomer_Purchases is a dbForm
70945>>>                Entry_Item Customer.Purchases
70946>>>                Set Location to 31 70
70947>>>                Set Size to 13 54
70948>>>                Set Label to "Total Purchases:"
70949>>>                Set Label_Justification_Mode to JMode_Right
70950>>>                Set Label_Col_Offset to 0
70951>>>            End_Object
70952>>>
70952>>>            Object oCustomer_Balance is a dbForm
70954>>>                Entry_Item Customer.Balance
70955>>>                Set Location to 45 70
70956>>>                Set Size to 13 54
70957>>>                Set Label to "Balance Due:"
70958>>>                Set Label_Justification_Mode to JMode_Right
70959>>>                Set Label_Col_Offset to 0
70960>>>            End_Object
70961>>>        End_Object
70962>>>
70962>>>        Object oDbTabPage3 is a dbTabPage
70964>>>            Set Label to "Comments"
70965>>>
70965>>>            Object oCustomer_Comments is a cDbTextEdit
70967>>>                Entry_Item Customer.Comments
70968>>>                Set Location to 9 11
70969>>>                Set Size to 77 253
70970>>>            End_Object
70971>>>        End_Object
70972>>>    
70972>>>    End_Object
70973>>>
70973>>>Cd_End_Object
70975>>>>
70975>        Use SalesPersonView.vw
Including file: SalesPersonView.vw    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\SalesPersonView.vw)
70975>>>// C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\SalesPersonView.vw
70975>>>// Sales Person Entry View
70975>>>//
70975>>>
70975>>>Use DFClient.pkg
70975>>>Use DFEntry.pkg
70975>>>
70975>>>Use cSalesPDataDictionary.dd
Including file: cSalesPDataDictionary.dd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\cSalesPDataDictionary.dd)
70975>>>>>Use DataDict.pkg
70975>>>>>
70975>>>>>Open SalesP
Including file: SalesP.fd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\SalesP.fd)
70977>>>>>Open OrderHea
70979>>>>>
70979>>>>>Register_Object SalesP_sl
70979>>>>>
70979>>>>>Class cSalesPDataDictionary is a DataDictionary
70980>>>>>    
70980>>>>>    Procedure Construct_Object
70982>>>>>        Forward Send Construct_Object
70984>>>>>        Set Main_file to SalesP.File_Number
70985>>>>>
70985>>>>>        Set Add_Client_File to OrderHea.File_Number
70986>>>>>
70986>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
70987>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
70988>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
70989>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
70990>>>>>
70990>>>>>        Set Field_Option Field SalesP.Id DD_AUTOFIND to True
70991>>>>>        Set Field_Option Field SalesP.Id DD_CAPSLOCK to True
70992>>>>>        Set Key_Field_State Field SalesP.Id to True
70993>>>>>        Set Field_Option Field SalesP.Id DD_REQUIRED to True
70994>>>>>        Set Field_Prompt_Object Field SalesP.ID to SalesP_sl
70995>>>>>
70995>>>>>        Set Field_Prompt_Object Field SalesP.Name to SalesP_sl
70996>>>>>        Set Cascade_Delete_State to False
70997>>>>>
70997>>>>>    End_Procedure
70998>>>>>
70998>>>>>End_Class
70999>>>>>
70999>>>>>Use SalesP.sl
Including file: SalesP.sl    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\SalesP.sl)
70999>>>>>>>// SalesP.sl
70999>>>>>>>// Sales Person Lookup List
70999>>>>>>>
70999>>>>>>>Use DFClient.pkg
70999>>>>>>>Use cDbCJGridPromptList.pkg
70999>>>>>>>Use cDbCJGridColumn.pkg
70999>>>>>>>Use Windows.pkg
70999>>>>>>>
70999>>>>>>>Use cSalesPDataDictionary.dd
70999>>>>>>>
70999>>>>>>>CD_Popup_Object SalesP_sl is a dbModalPanel
71017>>>>>>>>
71017>>>>>>>    Set Location to 5 5
71018>>>>>>>    Set Size to 134 210
71019>>>>>>>    Set Label To "Sales Person Lookup List"
71020>>>>>>>    Set Border_Style to Border_Thick
71021>>>>>>>    Set Minimize_Icon to False
71022>>>>>>>
71022>>>>>>>
71022>>>>>>>    Object oSalesP_DD is a cSalesPDataDictionary
71024>>>>>>>    End_Object // oSalesP_DD
71025>>>>>>>
71025>>>>>>>    Set Main_DD To oSalesP_DD
71026>>>>>>>    Set Server  To oSalesP_DD
71027>>>>>>>
71027>>>>>>>
71027>>>>>>>
71027>>>>>>>    Object oSelList is a cDbCJGridPromptList
71029>>>>>>>        Set Size to 105 200
71030>>>>>>>        Set Location to 5 5
71031>>>>>>>        Set peAnchors to anAll
71032>>>>>>>        Set psLayoutSection to "SalesP_sl_oSelList"
71033>>>>>>>        Set Ordering to 1
71034>>>>>>>        Set pbAutoServer to True
71035>>>>>>>
71035>>>>>>>        Object oSalesP_ID is a cDbCJGridColumn
71037>>>>>>>            Entry_Item SalesP.ID
71038>>>>>>>            Set piWidth to 60
71039>>>>>>>            Set psCaption to "ID"
71040>>>>>>>        End_Object // oSalesP_ID
71041>>>>>>>
71041>>>>>>>        Object oSalesP_Name is a cDbCJGridColumn
71043>>>>>>>            Entry_Item SalesP.Name
71044>>>>>>>            Set piWidth to 225
71045>>>>>>>            Set psCaption to "Name"
71046>>>>>>>        End_Object // oSalesP_Name
71047>>>>>>>
71047>>>>>>>
71047>>>>>>>    End_Object // oSelList
71048>>>>>>>
71048>>>>>>>    Object oOk_bn is a Button
71050>>>>>>>        Set Label to "&Ok"
71051>>>>>>>        Set Location to 115 47
71052>>>>>>>        Set peAnchors to anBottomRight
71053>>>>>>>
71053>>>>>>>        Procedure OnClick
71056>>>>>>>            Send OK of oSelList
71057>>>>>>>        End_Procedure
71058>>>>>>>
71058>>>>>>>    End_Object // oOk_bn
71059>>>>>>>
71059>>>>>>>    Object oCancel_bn is a Button
71061>>>>>>>        Set Label to "&Cancel"
71062>>>>>>>        Set Location to 115 101
71063>>>>>>>        Set peAnchors to anBottomRight
71064>>>>>>>
71064>>>>>>>        Procedure OnClick
71067>>>>>>>            Send Cancel of oSelList
71068>>>>>>>        End_Procedure
71069>>>>>>>
71069>>>>>>>    End_Object // oCancel_bn
71070>>>>>>>
71070>>>>>>>    Object oSearch_bn is a Button
71072>>>>>>>        Set Label to "&Search..."
71073>>>>>>>        Set Location to 115 155
71074>>>>>>>        Set peAnchors to anBottomRight
71075>>>>>>>
71075>>>>>>>        Procedure OnClick
71078>>>>>>>            Send Search of oSelList
71079>>>>>>>        End_Procedure
71080>>>>>>>
71080>>>>>>>    End_Object // oSearch_bn
71081>>>>>>>
71081>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
71082>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
71083>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
71084>>>>>>>
71084>>>>>>>
71084>>>>>>>CD_End_Object // SalesP_sl
71086>>>>>>>>
71086>>>
71086>>>ACTIVATE_VIEW Activate_oSalesPersonView FOR oSalesPersonView
71096>>>>
71096>>>Object oSalesPersonView is a dbView
71098>>>    Set Location to 5 5
71099>>>    Set Size to 38 187
71100>>>    Set Label To "Sales Person Entry View"
71101>>>    Set Border_Style to Border_Thick
71102>>>
71102>>>
71102>>>    Object oSalesP_DD is a cSalesPDataDictionary
71104>>>    End_Object // oSalesP_DD
71105>>>
71105>>>    Set Main_DD To oSalesP_DD
71106>>>    Set Server  To oSalesP_DD
71107>>>
71107>>>
71107>>>
71107>>>    Object oSalesPID is a dbForm
71109>>>        Entry_Item SalesP.ID
71110>>>        Set Size to 13 46
71111>>>        Set Location to 5 26
71112>>>        Set peAnchors to anLeftRight
71113>>>        Set Label to "ID"
71114>>>        Set Label_Justification_mode to jMode_right
71115>>>        Set Label_Col_Offset to 2
71116>>>        Set Label_row_Offset to 0
71117>>>    End_Object // oSalesPID
71118>>>
71118>>>    Object oSalesPName is a dbForm
71120>>>        Entry_Item SalesP.Name
71121>>>        Set Size to 13 156
71122>>>        Set Location to 20 26
71123>>>        Set peAnchors to anLeftRight
71124>>>        Set Label to "Name"
71125>>>        Set Label_Justification_mode to jMode_right
71126>>>        Set Label_Col_Offset to 2
71127>>>        Set Label_row_Offset to 0
71128>>>    End_Object // oSalesPName
71129>>>
71129>>>
71129>>>End_Object // oSalesPersonView
71130>        Use VendorView.vw
Including file: VendorView.vw    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\VendorView.vw)
71130>>>// C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\VendorView.vw
71130>>>// Vendor Entry View
71130>>>//
71130>>>
71130>>>Use DFClient.pkg
71130>>>Use DFEntry.pkg
71130>>>Use dfcentry.pkg
71130>>>
71130>>>Use cVendorDataDictionary.dd
Including file: cVendorDataDictionary.dd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\cVendorDataDictionary.dd)
71130>>>>>Use DataDict.pkg
71130>>>>>
71130>>>>>Open Vendor
Including file: Vendor.fd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\Vendor.fd)
71132>>>>>Open Invt
Including file: Invt.fd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\Invt.fd)
71134>>>>>Open OrdSys
71136>>>>>
71136>>>>>Object Vendor_State_VT is a CodeValidationTable
71138>>>>>    Set Type_Value to "STATES"
71139>>>>>End_Object
71140>>>>>
71140>>>>>Register_Object Vendor_sl
71140>>>>>
71140>>>>>Class cVendorDataDictionary is a DataDictionary
71141>>>>>    
71141>>>>>    Procedure Construct_Object
71143>>>>>        Forward Send Construct_Object
71145>>>>>        Set Main_file to Vendor.File_Number
71146>>>>>
71146>>>>>        Set Add_System_File to OrdSys.File_Number DD_Lock_On_All
71147>>>>>
71147>>>>>        Set Add_Client_File to Invt.File_Number
71148>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
71149>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
71150>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
71151>>>>>
71151>>>>>        Set Field_Option Field Vendor.Id DD_AUTOFIND to True
71152>>>>>        Set Field_Option Field Vendor.Id DD_NOPUT to True
71153>>>>>        Set Key_Field_State Field Vendor.Id to True
71154>>>>>        Set Field_Auto_Increment Field Vendor.Id to File_Field OrdSys.Vendor_Number
71155>>>>>        Set Field_Prompt_Object Field Vendor.ID to Vendor_sl
71156>>>>>
71156>>>>>        Set Field_Prompt_Object Field Vendor.Name to Vendor_sl
71157>>>>>
71157>>>>>        Set Field_Option Field Vendor.State DD_CAPSLOCK to True
71158>>>>>        Set Field_Class_Name Field Vendor.State to "dbComboForm"
71159>>>>>        Set Field_Value_Table Field Vendor.State to Vendor_State_VT
71160>>>>>
71160>>>>>        Set Field_Mask_Type Field Vendor.Zip to Mask_Window
71161>>>>>        Set Field_Mask Field Vendor.Zip to "#####-####"
71162>>>>>
71162>>>>>    End_Procedure
71163>>>>>
71163>>>>>End_Class
71164>>>>>
71164>>>>>Use Vendor.sl
Including file: Vendor.sl    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\Vendor.sl)
71164>>>>>>>// Vendor.sl
71164>>>>>>>// Vendor List
71164>>>>>>>
71164>>>>>>>Use DFClient.pkg
71164>>>>>>>Use cDbCJGridPromptList.pkg
71164>>>>>>>Use cDbCJGridColumn.pkg
71164>>>>>>>Use Windows.pkg
71164>>>>>>>
71164>>>>>>>Use cVendorDataDictionary.dd
71164>>>>>>>
71164>>>>>>>CD_Popup_Object Vendor_sl is a dbModalPanel
71182>>>>>>>>
71182>>>>>>>    Set Location to 5 5
71183>>>>>>>    Set Size to 134 206
71184>>>>>>>    Set Label To "Vendor List"
71185>>>>>>>    Set Border_Style to Border_Thick
71186>>>>>>>    Set Minimize_Icon to False
71187>>>>>>>
71187>>>>>>>
71187>>>>>>>    Object oVendor_DD is a cVendorDataDictionary
71189>>>>>>>    End_Object // oVendor_DD
71190>>>>>>>
71190>>>>>>>    Set Main_DD To oVendor_DD
71191>>>>>>>    Set Server  To oVendor_DD
71192>>>>>>>
71192>>>>>>>
71192>>>>>>>
71192>>>>>>>    Object oSelList is a cDbCJGridPromptList
71194>>>>>>>        Set Size to 105 196
71195>>>>>>>        Set Location to 5 5
71196>>>>>>>        Set peAnchors to anAll
71197>>>>>>>        Set psLayoutSection to "Vendor_sl_oSelList"
71198>>>>>>>        Set Ordering to 1
71199>>>>>>>        Set pbAutoServer to True
71200>>>>>>>
71200>>>>>>>        Object oVendor_ID is a cDbCJGridColumn
71202>>>>>>>            Entry_Item Vendor.ID
71203>>>>>>>            Set piWidth to 54
71204>>>>>>>            Set psCaption to "ID"
71205>>>>>>>        End_Object // oVendor_ID
71206>>>>>>>
71206>>>>>>>        Object oVendor_Name is a cDbCJGridColumn
71208>>>>>>>            Entry_Item Vendor.Name
71209>>>>>>>            Set piWidth to 225
71210>>>>>>>            Set psCaption to "Name"
71211>>>>>>>        End_Object // oVendor_Name
71212>>>>>>>
71212>>>>>>>
71212>>>>>>>    End_Object // oSelList
71213>>>>>>>
71213>>>>>>>    Object oOk_bn is a Button
71215>>>>>>>        Set Label to "&Ok"
71216>>>>>>>        Set Location to 115 43
71217>>>>>>>        Set peAnchors to anBottomRight
71218>>>>>>>
71218>>>>>>>        Procedure OnClick
71221>>>>>>>            Send OK of oSelList
71222>>>>>>>        End_Procedure
71223>>>>>>>
71223>>>>>>>    End_Object // oOk_bn
71224>>>>>>>
71224>>>>>>>    Object oCancel_bn is a Button
71226>>>>>>>        Set Label to "&Cancel"
71227>>>>>>>        Set Location to 115 97
71228>>>>>>>        Set peAnchors to anBottomRight
71229>>>>>>>
71229>>>>>>>        Procedure OnClick
71232>>>>>>>            Send Cancel of oSelList
71233>>>>>>>        End_Procedure
71234>>>>>>>
71234>>>>>>>    End_Object // oCancel_bn
71235>>>>>>>
71235>>>>>>>    Object oSearch_bn is a Button
71237>>>>>>>        Set Label to "&Search..."
71238>>>>>>>        Set Location to 115 151
71239>>>>>>>        Set peAnchors to anBottomRight
71240>>>>>>>
71240>>>>>>>        Procedure OnClick
71243>>>>>>>            Send Search of oSelList
71244>>>>>>>        End_Procedure
71245>>>>>>>
71245>>>>>>>    End_Object // oSearch_bn
71246>>>>>>>
71246>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
71247>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
71248>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
71249>>>>>>>
71249>>>>>>>
71249>>>>>>>CD_End_Object // Vendor_sl
71251>>>>>>>>
71251>>>
71251>>>ACTIVATE_VIEW Activate_oVendorView FOR oVendorView
71261>>>>
71261>>>Object oVendorView is a dbView
71263>>>    Set Location to 5 5
71264>>>    Set Size to 128 245
71265>>>    Set Label To "Vendor Entry View"
71266>>>    Set Border_Style to Border_Thick
71267>>>
71267>>>
71267>>>    Object oVendor_DD is a cVendorDataDictionary
71269>>>    End_Object // oVendor_DD
71270>>>
71270>>>    Set Main_DD To oVendor_DD
71271>>>    Set Server  To oVendor_DD
71272>>>
71272>>>
71272>>>
71272>>>    Object oVendorID is a dbForm
71274>>>        Entry_Item Vendor.ID
71275>>>        Set Size to 13 42
71276>>>        Set Location to 5 54
71277>>>        Set peAnchors to anLeftRight
71278>>>        Set Label to "ID"
71279>>>        Set Label_Justification_mode to jMode_right
71280>>>        Set Label_Col_Offset to 2
71281>>>        Set Label_row_Offset to 0
71282>>>    End_Object // oVendorID
71283>>>
71283>>>    Object oVendorName is a dbForm
71285>>>        Entry_Item Vendor.Name
71286>>>        Set Size to 13 186
71287>>>        Set Location to 20 54
71288>>>        Set peAnchors to anLeftRight
71289>>>        Set Label to "Name"
71290>>>        Set Label_Justification_mode to jMode_right
71291>>>        Set Label_Col_Offset to 2
71292>>>        Set Label_row_Offset to 0
71293>>>    End_Object // oVendorName
71294>>>
71294>>>    Object oVendorAddress is a dbForm
71296>>>        Entry_Item Vendor.Address
71297>>>        Set Size to 13 186
71298>>>        Set Location to 35 54
71299>>>        Set peAnchors to anLeftRight
71300>>>        Set Label to "Address"
71301>>>        Set Label_Justification_mode to jMode_right
71302>>>        Set Label_Col_Offset to 2
71303>>>        Set Label_row_Offset to 0
71304>>>    End_Object // oVendorAddress
71305>>>
71305>>>    Object oVendorCity is a dbForm
71307>>>        Entry_Item Vendor.City
71308>>>        Set Size to 13 90
71309>>>        Set Location to 50 54
71310>>>        Set peAnchors to anLeftRight
71311>>>        Set Label to "City"
71312>>>        Set Label_Justification_mode to jMode_right
71313>>>        Set Label_Col_Offset to 2
71314>>>        Set Label_row_Offset to 0
71315>>>    End_Object // oVendorCity
71316>>>
71316>>>    Object oVendorState is a dbComboForm
71318>>>        Entry_Item Vendor.State
71319>>>        Set Size to 13 39
71320>>>        Set Location to 65 54
71321>>>        Set peAnchors to anLeftRight
71322>>>        Set Label to "State"
71323>>>        Set Label_Justification_mode to jMode_right
71324>>>        Set Label_Col_Offset to 2
71325>>>        Set Label_row_Offset to 0
71326>>>    End_Object // oVendorState
71327>>>
71327>>>    Object oVendorZip is a dbForm
71329>>>        Entry_Item Vendor.Zip
71330>>>        Set Size to 13 66
71331>>>        Set Location to 80 54
71332>>>        Set peAnchors to anLeftRight
71333>>>        Set Label to "Zip"
71334>>>        Set Label_Justification_mode to jMode_right
71335>>>        Set Label_Col_Offset to 2
71336>>>        Set Label_row_Offset to 0
71337>>>    End_Object // oVendorZip
71338>>>
71338>>>    Object oVendorPhone_Number is a dbForm
71340>>>        Entry_Item Vendor.Phone_Number
71341>>>        Set Size to 13 126
71342>>>        Set Location to 95 54
71343>>>        Set peAnchors to anLeftRight
71344>>>        Set Label to "Phone Number"
71345>>>        Set Label_Justification_mode to jMode_right
71346>>>        Set Label_Col_Offset to 2
71347>>>        Set Label_row_Offset to 0
71348>>>    End_Object // oVendorPhone_Number
71349>>>
71349>>>    Object oVendorFax_Number is a dbForm
71351>>>        Entry_Item Vendor.Fax_Number
71352>>>        Set Size to 13 126
71353>>>        Set Location to 110 54
71354>>>        Set peAnchors to anLeftRight
71355>>>        Set Label to "Fax Number"
71356>>>        Set Label_Justification_mode to jMode_right
71357>>>        Set Label_Col_Offset to 2
71358>>>        Set Label_row_Offset to 0
71359>>>    End_Object // oVendorFax_Number
71360>>>
71360>>>
71360>>>End_Object // oVendorView
71361>        Use InventoryView.vw
Including file: InventoryView.vw    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\InventoryView.vw)
71361>>>// C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\InventoryView.vw
71361>>>// Inventory Item View
71361>>>//
71361>>>
71361>>>Use DFClient.pkg
71361>>>Use DFEntry.pkg
71361>>>
71361>>>Use cVendorDataDictionary.dd
71361>>>Use cInvtDataDictionary.dd
Including file: cInvtDataDictionary.dd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\cInvtDataDictionary.dd)
71361>>>>>Use DataDict.pkg
71361>>>>>
71361>>>>>Open Invt
71363>>>>>Open Vendor
71365>>>>>Open OrderDtl
Including file: OrderDtl.fd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\OrderDtl.fd)
71367>>>>>
71367>>>>>Register_Object Invt_sl
71367>>>>>
71367>>>>>Class cInvtDataDictionary is a DataDictionary
71368>>>>>    
71368>>>>>    Procedure Construct_Object
71370>>>>>        Forward Send Construct_Object
71372>>>>>        Set Main_file to Invt.File_Number
71373>>>>>
71373>>>>>        Set Add_Client_File to OrderDtl.File_Number
71374>>>>>
71374>>>>>        Set Add_Server_File to Vendor.File_Number
71375>>>>>
71375>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
71376>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
71377>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
71378>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
71379>>>>>
71379>>>>>        Set Field_Option Field Invt.Item_Id DD_AUTOFIND to True
71380>>>>>        Set Field_Option Field Invt.Item_Id DD_CAPSLOCK to True
71381>>>>>        Set Key_Field_State Field Invt.Item_Id to True
71382>>>>>        Set Field_Prompt_Object Field Invt.Item_ID to Invt_sl
71383>>>>>
71383>>>>>        Set Field_Prompt_Object Field Invt.Description to Invt_sl
71384>>>>>
71384>>>>>        Set Field_Option Field Invt.Vendor_Id DD_CAPSLOCK to True
71385>>>>>
71385>>>>>        Set Field_Value_Range Field Invt.Unit_Price to 0 999999.99
71386>>>>>        Set Field_Mask_Type Field Invt.Unit_Price to Mask_Currency_Window
71387>>>>>
71387>>>>>        Set Field_Value_Range Field Invt.On_Hand to -999999 999999
71388>>>>>        Set Cascade_Delete_State to False
71389>>>>>
71389>>>>>    End_Procedure
71390>>>>>
71390>>>>>    Function Validate_Save Returns Integer
71392>>>>>        Integer iRetVal
71392>>>>>        Forward Get Validate_Save to iRetVal
71394>>>>>        
71394>>>>>        If iRetVal Function_Return iRetVal
71397>>>>>        If (Invt.On_Hand < 0) Begin
71399>>>>>            Error 300 "Insufficient Inventory Stock"
71400>>>>>>
71400>>>>>            Function_Return 1
71401>>>>>        End
71401>>>>>>
71401>>>>>        Function_Return iRetVal
71402>>>>>    End_Function
71403>>>>>
71403>>>>>End_Class
71404>>>>>
71404>>>>>Use Invt.sl
Including file: Invt.sl    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\Invt.sl)
71404>>>>>>>// Invt.sl
71404>>>>>>>// Inventory Lookup List
71404>>>>>>>
71404>>>>>>>Use DFClient.pkg
71404>>>>>>>Use cDbCJGridPromptList.pkg
71404>>>>>>>Use cDbCJGridColumn.pkg
71404>>>>>>>Use Windows.pkg
71404>>>>>>>
71404>>>>>>>Use cVendorDataDictionary.dd
71404>>>>>>>Use cInvtDataDictionary.dd
71404>>>>>>>
71404>>>>>>>CD_Popup_Object Invt_sl is a dbModalPanel
71422>>>>>>>>
71422>>>>>>>    Set Location to 5 5
71423>>>>>>>    Set Size to 134 353
71424>>>>>>>    Set Label To "Inventory Lookup List"
71425>>>>>>>    Set Border_Style to Border_Thick
71426>>>>>>>    Set Minimize_Icon to False
71427>>>>>>>
71427>>>>>>>
71427>>>>>>>    Object oVendor_DD is a cVendorDataDictionary
71429>>>>>>>    End_Object // oVendor_DD
71430>>>>>>>
71430>>>>>>>    Object oInvt_DD is a cInvtDataDictionary
71432>>>>>>>        Set DDO_Server To oVendor_DD
71433>>>>>>>    End_Object // oInvt_DD
71434>>>>>>>
71434>>>>>>>    Set Main_DD To oInvt_DD
71435>>>>>>>    Set Server  To oInvt_DD
71436>>>>>>>
71436>>>>>>>
71436>>>>>>>
71436>>>>>>>    Object oSelList is a cDbCJGridPromptList
71438>>>>>>>        Set Size to 105 343
71439>>>>>>>        Set Location to 5 5
71440>>>>>>>        Set peAnchors to anAll
71441>>>>>>>        Set psLayoutSection to "Invt_sl_oSelList"
71442>>>>>>>        Set Ordering to 1
71443>>>>>>>        Set pbAutoServer to True
71444>>>>>>>
71444>>>>>>>        Object oInvt_Item_ID is a cDbCJGridColumn
71446>>>>>>>            Entry_Item Invt.Item_ID
71447>>>>>>>            Set piWidth to 135
71448>>>>>>>            Set psCaption to "Item ID"
71449>>>>>>>        End_Object // oInvt_Item_ID
71450>>>>>>>
71450>>>>>>>        Object oInvt_Description is a cDbCJGridColumn
71452>>>>>>>            Entry_Item Invt.Description
71453>>>>>>>            Set piWidth to 225
71454>>>>>>>            Set psCaption to "Description"
71455>>>>>>>        End_Object // oInvt_Description
71456>>>>>>>
71456>>>>>>>        Object oInvt_Unit_Price is a cDbCJGridColumn
71458>>>>>>>            Entry_Item Invt.Unit_Price
71459>>>>>>>            Set piWidth to 81
71460>>>>>>>            Set psCaption to "Unit Price"
71461>>>>>>>        End_Object // oInvt_Unit_Price
71462>>>>>>>
71462>>>>>>>        Object oInvt_On_Hand is a cDbCJGridColumn
71464>>>>>>>            Entry_Item Invt.On_Hand
71465>>>>>>>            Set piWidth to 58
71466>>>>>>>            Set psCaption to "On Hand"
71467>>>>>>>        End_Object // oInvt_On_Hand
71468>>>>>>>
71468>>>>>>>
71468>>>>>>>    End_Object // oSelList
71469>>>>>>>
71469>>>>>>>    Object oOk_bn is a Button
71471>>>>>>>        Set Label to "&Ok"
71472>>>>>>>        Set Location to 115 190
71473>>>>>>>        Set peAnchors to anBottomRight
71474>>>>>>>
71474>>>>>>>        Procedure OnClick
71477>>>>>>>            Send OK of oSelList
71478>>>>>>>        End_Procedure
71479>>>>>>>
71479>>>>>>>    End_Object // oOk_bn
71480>>>>>>>
71480>>>>>>>    Object oCancel_bn is a Button
71482>>>>>>>        Set Label to "&Cancel"
71483>>>>>>>        Set Location to 115 244
71484>>>>>>>        Set peAnchors to anBottomRight
71485>>>>>>>
71485>>>>>>>        Procedure OnClick
71488>>>>>>>            Send Cancel of oSelList
71489>>>>>>>        End_Procedure
71490>>>>>>>
71490>>>>>>>    End_Object // oCancel_bn
71491>>>>>>>
71491>>>>>>>    Object oSearch_bn is a Button
71493>>>>>>>        Set Label to "&Search..."
71494>>>>>>>        Set Location to 115 298
71495>>>>>>>        Set peAnchors to anBottomRight
71496>>>>>>>
71496>>>>>>>        Procedure OnClick
71499>>>>>>>            Send Search of oSelList
71500>>>>>>>        End_Procedure
71501>>>>>>>
71501>>>>>>>    End_Object // oSearch_bn
71502>>>>>>>
71502>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
71503>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
71504>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
71505>>>>>>>
71505>>>>>>>
71505>>>>>>>CD_End_Object // Invt_sl
71507>>>>>>>>
71507>>>Use dfallent.pkg
71507>>>
71507>>>ACTIVATE_VIEW Activate_oInventoryView FOR oInventoryView
71517>>>>
71517>>>Object oInventoryView is a dbView
71519>>>    Set Location to 5 5
71520>>>    Set Size to 145 281
71521>>>    Set Label To "Inventory Item View"
71522>>>    Set Border_Style to Border_Thick
71523>>>
71523>>>
71523>>>    Object oVendor_DD is a cVendorDataDictionary
71525>>>    End_Object // oVendor_DD
71526>>>
71526>>>    Object oInvt_DD is a cInvtDataDictionary
71528>>>        Set DDO_Server To oVendor_DD
71529>>>    End_Object // oInvt_DD
71530>>>
71530>>>    Set Main_DD To oInvt_DD
71531>>>    Set Server  To oInvt_DD
71532>>>
71532>>>
71532>>>
71532>>>    Object oInvtItem_ID is a dbForm
71534>>>        Entry_Item Invt.Item_ID
71535>>>        Set Size to 13 102
71536>>>        Set Location to 5 54
71537>>>        Set peAnchors to anLeftRight
71538>>>        Set Label to "Item ID"
71539>>>        Set Label_Justification_mode to jMode_right
71540>>>        Set Label_Col_Offset to 2
71541>>>        Set Label_row_Offset to 0
71542>>>    End_Object // oInvtItem_ID
71543>>>
71543>>>    Object oInvtDescription is a dbForm
71545>>>        Entry_Item Invt.Description
71546>>>        Set Size to 13 222
71547>>>        Set Location to 20 54
71548>>>        Set peAnchors to anLeftRight
71549>>>        Set Label to "Description"
71550>>>        Set Label_Justification_mode to jMode_right
71551>>>        Set Label_Col_Offset to 2
71552>>>        Set Label_row_Offset to 0
71553>>>    End_Object // oInvtDescription
71554>>>
71554>>>    Object oDbGroup1 is a dbGroup
71556>>>        Set Size to 63 271
71557>>>        Set Location to 38 4
71558>>>        Set Label to "Vendor"
71559>>>
71559>>>        Object oVendorID is a dbForm
71561>>>            Entry_Item Vendor.ID
71562>>>            Set Size to 13 50
71563>>>            Set Location to 10 54
71564>>>            Set peAnchors to anLeftRight
71565>>>            Set Label to "ID"
71566>>>            Set Label_Justification_mode to jMode_right
71567>>>            Set Label_Col_Offset to 2
71568>>>            Set Label_row_Offset to 0
71569>>>        End_Object // oVendorID
71570>>>        Object oVendorName is a dbForm
71572>>>            Entry_Item Vendor.Name
71573>>>            Set Size to 13 175
71574>>>            Set Location to 25 54
71575>>>            Set peAnchors to anLeftRight
71576>>>            Set Label to "Name"
71577>>>            Set Label_Justification_mode to jMode_right
71578>>>            Set Label_Col_Offset to 2
71579>>>            Set Label_row_Offset to 0
71580>>>        End_Object // oVendorName
71581>>>        Object oInvtVendor_Part_ID is a dbForm
71583>>>            Entry_Item Invt.Vendor_Part_ID
71584>>>            Set Size to 13 100
71585>>>            Set Location to 40 54
71586>>>            Set peAnchors to anLeftRight
71587>>>            Set Label to "Vendor Part ID"
71588>>>            Set Label_Justification_mode to jMode_right
71589>>>            Set Label_Col_Offset to 2
71590>>>            Set Label_row_Offset to 0
71591>>>        End_Object // oInvtVendor_Part_ID
71592>>>    End_Object
71593>>>
71593>>>    Object oDbGroup2 is a dbGroup
71595>>>        Set Size to 36 271
71596>>>        Set Location to 103 4
71597>>>
71597>>>        Object oInvtUnit_Price is a dbForm
71599>>>            Entry_Item Invt.Unit_Price
71600>>>            Set Size to 13 75
71601>>>            Set Location to 13 41
71602>>>            Set peAnchors to anLeftRight
71603>>>            Set Label to "Unit Price"
71604>>>            Set Label_Justification_mode to jMode_right
71605>>>            Set Label_Col_Offset to 2
71606>>>            Set Label_row_Offset to 0
71607>>>        End_Object // oInvtUnit_Price
71608>>>        Object oInvtOn_Hand is a dbForm
71610>>>            Entry_Item Invt.On_Hand
71611>>>            Set Size to 13 50
71612>>>            Set Location to 13 167
71613>>>            Set peAnchors to anLeftRight
71614>>>            Set Label to "On Hand"
71615>>>            Set Label_Justification_mode to jMode_right
71616>>>            Set Label_Col_Offset to 2
71617>>>            Set Label_row_Offset to 0
71618>>>        End_Object // oInvtOn_Hand
71619>>>    End_Object
71620>>>
71620>>>
71620>>>End_Object // oInventoryView
71621>        Use OrderEntryView.vw
Including file: OrderEntryView.vw    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\OrderEntryView.vw)
71621>>>// C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\OrderEntryView.vw
71621>>>// Order Entry View
71621>>>//
71621>>>
71621>>>Use DFClient.pkg
71621>>>Use DFEntry.pkg
71621>>>Use dfSpnEnt.pkg
71621>>>Use dfcentry.pkg
71621>>>Use cDbCJGrid.pkg
71621>>>Use cDbCJGridColumn.pkg
71621>>>
71621>>>Use cCustomerDataDictionary.dd
71621>>>Use cSalesPDataDictionary.dd
71621>>>Use cVendorDataDictionary.dd
71621>>>Use cOrderHeaDataDictionary.dd
Including file: cOrderHeaDataDictionary.dd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\cOrderHeaDataDictionary.dd)
71621>>>>>Use DataDict.pkg
71621>>>>>
71621>>>>>Open OrderHea
71623>>>>>Open Customer
71625>>>>>Open SalesP
71627>>>>>Open OrderDtl
71629>>>>>Open OrdSys
71631>>>>>
71631>>>>>Object Terms_Table is a DescriptionValidationTable
71633>>>>>    Procedure Fill_List
71636>>>>>        Forward Send Fill_List
71638>>>>>        Send Add_Table_Value "NONE" "None established"
71639>>>>>        Send Add_Table_Value "COD" "COD"
71640>>>>>        Send Add_Table_Value "NET30" "Net 30"
71641>>>>>        Send Add_Table_Value "NET60" "Net 60"
71642>>>>>        Send Add_Table_Value "NET90" "Net 90"
71643>>>>>        Send Add_Table_Value "PREPAY" "Pre-payment required"
71644>>>>>    End_Procedure
71645>>>>>End_Object
71646>>>>>
71646>>>>>Object Ship_Table is a CodeValidationTable
71648>>>>>    Set Type_Value to "SHIPPING"
71649>>>>>    Set Allow_Blank_State to True
71650>>>>>End_Object
71651>>>>>
71651>>>>>Register_Object OrderHea_sl
71651>>>>>
71651>>>>>Class cOrderHeaDataDictionary is a DataDictionary
71652>>>>>    
71652>>>>>    Procedure Construct_Object
71654>>>>>        Forward Send Construct_Object
71656>>>>>        Set Main_file to OrderHea.File_Number
71657>>>>>
71657>>>>>        Set Add_System_File to OrdSys.File_Number DD_Lock_On_New_Save_Delete
71658>>>>>
71658>>>>>        Set Add_Client_File to OrderDtl.File_Number
71659>>>>>
71659>>>>>        Set Add_Server_File to Customer.File_Number
71660>>>>>        Set Add_Server_File to SalesP.File_Number
71661>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
71662>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
71663>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
71664>>>>>
71664>>>>>        Set Field_Option Field OrderHea.Order_Number DD_AUTOFIND to True
71665>>>>>        Set Key_Field_State Field OrderHea.Order_Number to True
71666>>>>>        Set Field_Auto_Increment Field OrderHea.Order_Number to File_Field OrdSys.Order_Number
71667>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Number to OrderHea_sl
71668>>>>>
71668>>>>>        Set Field_Class_Name Field OrderHea.Order_Date to "dbSpinForm"
71669>>>>>        Set Field_Mask_Type Field OrderHea.Order_Date to Mask_Date_Window
71670>>>>>        Set Field_Entry_msg Field OrderHea.Order_Date to Entry_Order_Date
71671>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Date to OrderHea_sl
71672>>>>>
71672>>>>>        Set Field_Value_Table Field OrderHea.Terms to Terms_Table
71673>>>>>        Set Field_Class_Name Field OrderHea.Terms to "dbComboForm"
71674>>>>>
71674>>>>>        Set Field_Value_Table Field OrderHea.Ship_Via to Ship_Table
71675>>>>>        Set Field_Class_Name Field OrderHea.Ship_Via to "dbComboForm"
71676>>>>>
71676>>>>>        Set Field_Option Field OrderHea.Order_Total DD_DISPLAYONLY to True
71677>>>>>        Set Field_Mask_Type Field OrderHea.Order_Total to Mask_Currency_Window
71678>>>>>
71678>>>>>    End_Procedure
71679>>>>>
71679>>>>>    Procedure Backout
71681>>>>>        Forward Send Backout
71683>>>>>        Send Adjust_Balances (-OrderHea.Order_Total)
71684>>>>>    End_Procedure
71685>>>>>
71685>>>>>    Procedure Update
71687>>>>>        Forward Send Update
71689>>>>>        Send Adjust_Balances OrderHea.Order_Total
71690>>>>>    End_Procedure
71691>>>>>    
71691>>>>>    // Add a default date if the field is blank
71691>>>>>    Procedure Entry_Order_Date Integer iField Date dDate
71693>>>>>        Integer iChanged
71693>>>>>
71693>>>>>        Get Field_Changed_State iField to iChanged
71694>>>>>        If (iChanged=0 and dDate=0) Begin
71696>>>>>            Sysdate dDate
71697>>>>>            Set Field_Default_Value iField to dDate
71698>>>>>        End
71698>>>>>>
71698>>>>>    End_Procedure
71699>>>>>
71699>>>>>    Procedure Adjust_Balances Number Amt
71701>>>>>        Add Amt to Customer.Purchases
71702>>>>>        Add Amt to Customer.Balance
71703>>>>>    End_Procedure
71704>>>>>    
71704>>>>>    Procedure Deleting
71706>>>>>        Forward Send Deleting
71708>>>>>
71708>>>>>        // see if we can decrement the order number in sys file...can only do
71708>>>>>        // this if this is the newest order.
71708>>>>>        If (OrderHea.Order_Number=OrdSys.Order_Number) Begin // if this 
71710>>>>>           Decrement OrdSys.Order_Number          // the last number
71711>>>>>           SaveRecord OrdSys                      // decrement and save
71712>>>>>        End
71712>>>>>>
71712>>>>>    End_Procedure
71713>>>>>
71713>>>>>
71713>>>>>
71713>>>>>End_Class
71714>>>>>
71714>>>>>Use OrderHea.sl
Including file: OrderHea.sl    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\OrderHea.sl)
71714>>>>>>>// OrderHea.sl
71714>>>>>>>// Orders Lookup List
71714>>>>>>>
71714>>>>>>>Use DFClient.pkg
71714>>>>>>>Use cDbCJGridPromptList.pkg
71714>>>>>>>Use cDbCJGridColumn.pkg
71714>>>>>>>Use Windows.pkg
71714>>>>>>>
71714>>>>>>>Use cCustomerDataDictionary.dd
71714>>>>>>>Use cSalesPDataDictionary.dd
71714>>>>>>>Use cOrderHeaDataDictionary.dd
71714>>>>>>>
71714>>>>>>>CD_Popup_Object OrderHea_sl is a dbModalPanel
71732>>>>>>>>
71732>>>>>>>    Set Location to 5 5
71733>>>>>>>    Set Size to 134 416
71734>>>>>>>    Set Label To "Orders Lookup List"
71735>>>>>>>    Set Border_Style to Border_Thick
71736>>>>>>>    Set Minimize_Icon to False
71737>>>>>>>
71737>>>>>>>
71737>>>>>>>    Object oCustomer_DD is a cCustomerDataDictionary
71739>>>>>>>    End_Object // oCustomer_DD
71740>>>>>>>
71740>>>>>>>    Object oSalesP_DD is a cSalesPDataDictionary
71742>>>>>>>    End_Object // oSalesP_DD
71743>>>>>>>
71743>>>>>>>    Object oOrderHea_DD is a cOrderHeaDataDictionary
71745>>>>>>>        Set DDO_Server To oCustomer_DD
71746>>>>>>>        Set DDO_Server To oSalesP_DD
71747>>>>>>>    End_Object // oOrderHea_DD
71748>>>>>>>
71748>>>>>>>    Set Main_DD To oOrderHea_DD
71749>>>>>>>    Set Server  To oOrderHea_DD
71750>>>>>>>
71750>>>>>>>
71750>>>>>>>
71750>>>>>>>    Object oSelList is a cDbCJGridPromptList
71752>>>>>>>        Set Size to 105 406
71753>>>>>>>        Set Location to 5 5
71754>>>>>>>        Set peAnchors to anAll
71755>>>>>>>        Set psLayoutSection to "OrderHea_sl_oSelList"
71756>>>>>>>        Set Ordering to 1
71757>>>>>>>        Set pbAutoServer to True
71758>>>>>>>
71758>>>>>>>        Object oOrderHea_Order_Number is a cDbCJGridColumn
71760>>>>>>>            Entry_Item OrderHea.Order_Number
71761>>>>>>>            Set piWidth to 81
71762>>>>>>>            Set psCaption to "Order Number"
71763>>>>>>>        End_Object // oOrderHea_Order_Number
71764>>>>>>>
71764>>>>>>>        Object oCustomer_Customer_Number is a cDbCJGridColumn
71766>>>>>>>            Entry_Item Customer.Customer_Number
71767>>>>>>>            Set piWidth to 99
71768>>>>>>>            Set psCaption to "Customer Number"
71769>>>>>>>        End_Object // oCustomer_Customer_Number
71770>>>>>>>
71770>>>>>>>        Object oCustomer_Name is a cDbCJGridColumn
71772>>>>>>>            Entry_Item Customer.Name
71773>>>>>>>            Set piWidth to 225
71774>>>>>>>            Set psCaption to "Name"
71775>>>>>>>        End_Object // oCustomer_Name
71776>>>>>>>
71776>>>>>>>        Object oOrderHea_Order_Date is a cDbCJGridColumn
71778>>>>>>>            Entry_Item OrderHea.Order_Date
71779>>>>>>>            Set piWidth to 90
71780>>>>>>>            Set psCaption to "Order Date"
71781>>>>>>>        End_Object // oOrderHea_Order_Date
71782>>>>>>>
71782>>>>>>>        Object oOrderHea_Order_Total is a cDbCJGridColumn
71784>>>>>>>            Entry_Item OrderHea.Order_Total
71785>>>>>>>            Set piWidth to 99
71786>>>>>>>            Set psCaption to "Order Total"
71787>>>>>>>        End_Object // oOrderHea_Order_Total
71788>>>>>>>
71788>>>>>>>
71788>>>>>>>    End_Object // oSelList
71789>>>>>>>
71789>>>>>>>    Object oOk_bn is a Button
71791>>>>>>>        Set Label to "&Ok"
71792>>>>>>>        Set Location to 115 253
71793>>>>>>>        Set peAnchors to anBottomRight
71794>>>>>>>
71794>>>>>>>        Procedure OnClick
71797>>>>>>>            Send OK of oSelList
71798>>>>>>>        End_Procedure
71799>>>>>>>
71799>>>>>>>    End_Object // oOk_bn
71800>>>>>>>
71800>>>>>>>    Object oCancel_bn is a Button
71802>>>>>>>        Set Label to "&Cancel"
71803>>>>>>>        Set Location to 115 307
71804>>>>>>>        Set peAnchors to anBottomRight
71805>>>>>>>
71805>>>>>>>        Procedure OnClick
71808>>>>>>>            Send Cancel of oSelList
71809>>>>>>>        End_Procedure
71810>>>>>>>
71810>>>>>>>    End_Object // oCancel_bn
71811>>>>>>>
71811>>>>>>>    Object oSearch_bn is a Button
71813>>>>>>>        Set Label to "&Search..."
71814>>>>>>>        Set Location to 115 361
71815>>>>>>>        Set peAnchors to anBottomRight
71816>>>>>>>
71816>>>>>>>        Procedure OnClick
71819>>>>>>>            Send Search of oSelList
71820>>>>>>>        End_Procedure
71821>>>>>>>
71821>>>>>>>    End_Object // oSearch_bn
71822>>>>>>>
71822>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
71823>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
71824>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
71825>>>>>>>
71825>>>>>>>
71825>>>>>>>CD_End_Object // OrderHea_sl
71827>>>>>>>>
71827>>>Use cInvtDataDictionary.dd
71827>>>Use cOrderDtlDataDictionary.dd
Including file: cOrderDtlDataDictionary.dd    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\DDSrc\cOrderDtlDataDictionary.dd)
71827>>>>>Use DataDict.pkg
71827>>>>>
71827>>>>>Open OrderDtl
71829>>>>>Open OrderHea
71831>>>>>Open Invt
71833>>>>>
71833>>>>>Class cOrderDtlDataDictionary is a DataDictionary
71834>>>>>    
71834>>>>>    Procedure Construct_Object
71836>>>>>        Forward Send Construct_Object
71838>>>>>        Set Main_file to OrderDtl.File_Number
71839>>>>>
71839>>>>>        Set Add_Server_File to OrderHea.File_Number
71840>>>>>        Set Add_Server_File to Invt.File_Number
71841>>>>>
71841>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
71842>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
71843>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
71844>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
71845>>>>>
71845>>>>>        Set Field_Option Field OrderDtl.Order_Number DD_NOPUT to True
71846>>>>>
71846>>>>>        Set Field_Option Field OrderDtl.Detail_Number DD_NOPUT to True
71847>>>>>        Set Field_Auto_Increment Field OrderDtl.Detail_Number to File_Field OrderHea.Last_Detail_Num
71848>>>>>
71848>>>>>        Set Field_Mask_Type Field OrderDtl.Qty_Ordered to Mask_Numeric_Window
71849>>>>>
71849>>>>>        Set Field_Mask_Type Field OrderDtl.Price to Mask_Currency_Window
71850>>>>>        Set Field_Entry_msg Field OrderDtl.Price to Entering_Price
71851>>>>>
71851>>>>>        Set Field_Option Field OrderDtl.Extended_Price DD_DISPLAYONLY to True
71852>>>>>        Set Field_Mask_Type Field OrderDtl.Extended_Price to Mask_Currency_Window
71853>>>>>        
71853>>>>>        Set Field_Exit_msg OrderDtl.Qty_Ordered to Adjust_Display_Total
71854>>>>>        Set Field_Exit_msg OrderDtl.Price to Adjust_Display_Total
71855>>>>>
71855>>>>>    End_Procedure
71856>>>>>
71856>>>>>    Procedure Backout
71858>>>>>        Forward Send Backout
71860>>>>>        Send Adjust_Balances (-OrderDtl.Qty_Ordered) (-OrderDtl.Extended_Price)
71861>>>>>    End_Procedure
71862>>>>>
71862>>>>>    Procedure Update
71864>>>>>        Forward Send Update
71866>>>>>        Move (OrderDtl.Price * OrderDtl.Qty_Ordered) to OrderDtl.Extended_Price
71867>>>>>        Send Adjust_Balances OrderDtl.Qty_Ordered OrderDtl.Extended_Price
71868>>>>>    End_Procedure
71869>>>>>
71869>>>>>    Procedure Adjust_Balances Number Qty Number Amt
71871>>>>>        Subtract Qty from Invt.On_Hand
71872>>>>>        Add Amt to Orderhea.Order_Total
71873>>>>>    End_Procedure
71874>>>>>    
71874>>>>>    Procedure Adjust_Display_Total
71876>>>>>        Integer iQty
71876>>>>>        Number nAmnt
71876>>>>>        
71876>>>>>        Get Field_Current_Value Field Orderdtl.Qty_Ordered to iQty
71877>>>>>        Get Field_Current_Value Field Orderdtl.Price to nAmnt
71878>>>>>        // note we set value, but not changed state!
71878>>>>>        Set Field_Current_Value Field Orderdtl.Extended_Price to (nAmnt * iQty)
71879>>>>>    End_Procedure
71880>>>>>
71880>>>>>    Procedure Entering_Price Integer Field# Number nAmnt
71882>>>>>        If (nAmnt=0) Begin
71884>>>>>            Get File_Field_Current_Value File_Field Invt.Unit_Price to nAmnt
71885>>>>>            Set Field_Changed_Value Field# to nAmnt
71886>>>>>            Send Adjust_Display_Total
71887>>>>>        End    
71887>>>>>>
71887>>>>>    End_Procedure
71888>>>>>
71888>>>>>End_Class
71889>>>Use Windows.pkg
71889>>>
71889>>>ACTIVATE_VIEW Activate_oOrderEntryView FOR oOrderEntryView
71899>>>>
71899>>>Object oOrderEntryView is a dbView
71901>>>    Set Location to 5 5
71902>>>    Set Size to 176 395
71903>>>    Set Label To "Order Entry View"
71904>>>    Set Border_Style to Border_Thick
71905>>>
71905>>>
71905>>>    Object oCustomer_DD is a cCustomerDataDictionary
71907>>>    End_Object // oCustomer_DD
71908>>>
71908>>>    Object oSalesP_DD is a cSalesPDataDictionary
71910>>>    End_Object // oSalesP_DD
71911>>>
71911>>>    Object oVendor_DD is a cVendorDataDictionary
71913>>>    End_Object // oVendor_DD
71914>>>
71914>>>    Object oOrderHea_DD is a cOrderHeaDataDictionary
71916>>>        Set DDO_Server To oCustomer_DD
71917>>>        Set DDO_Server To oSalesP_DD
71918>>>    End_Object // oOrderHea_DD
71919>>>
71919>>>    Object oInvt_DD is a cInvtDataDictionary
71921>>>        Set DDO_Server To oVendor_DD
71922>>>    End_Object // oInvt_DD
71923>>>
71923>>>    Object oOrderDtl_DD is a cOrderDtlDataDictionary
71925>>>        Set DDO_Server To oOrderHea_DD
71926>>>        Set DDO_Server To oInvt_DD
71927>>>        Set Constrain_File To OrderHea.File_Number
71928>>>    End_Object // oOrderDtl_DD
71929>>>
71929>>>    Set Main_DD To oOrderHea_DD
71930>>>    Set Server  To oOrderHea_DD
71931>>>
71931>>>
71931>>>
71931>>>    Object oOrderHeaOrder_Number is a dbForm
71933>>>        Entry_Item OrderHea.Order_Number
71934>>>        Set Size to 13 46
71935>>>        Set Location to 5 56
71936>>>        Set peAnchors to anLeftRight
71937>>>        Set Label to "Order Number"
71938>>>        Set Label_Justification_mode to jMode_right
71939>>>        Set Label_Col_Offset to 2
71940>>>        Set Label_row_Offset to 0
71941>>>    End_Object // oOrderHeaOrder_Number
71942>>>
71942>>>    Object oCustomerCustomer_Number is a dbForm
71944>>>        Entry_Item Customer.Customer_Number
71945>>>        Set Size to 13 42
71946>>>        Set Location to 5 214
71947>>>        Set peAnchors to anRight
71948>>>        Set Label to "Customer Number"
71949>>>        Set Label_Justification_mode to jMode_right
71950>>>        Set Label_Col_Offset to 2
71951>>>        Set Label_row_Offset to 0
71952>>>        
71952>>>        // If order record exists, disallow entry in customer window.
71952>>>
71952>>>    Procedure Refresh Integer iMode
71955>>>        Handle  hoServer
71955>>>        Boolean bCurrent
71955>>>        
71955>>>        Get Server to hoServer                 // get the DD
71956>>>        Get HasRecord of hoServer to bCurrent  // has record in DD
71957>>>        // Set DisplayOnly to True if bCurrent is non-zero
71957>>>        Set Enabled_State to (not(bCurrent))
71958>>>        Forward Send Refresh iMode             // do normal refresh
71960>>>        // don't leave us sitting on a DisplayOnly window
71960>>>        If (bCurrent and Focus(Self)=Self) Send Next
71963>>>    End_Procedure  // Refresh
71964>>>
71964>>>
71964>>>    End_Object // oCustomerCustomer_Number
71965>>>
71965>>>    Object oOrderHeaOrder_Date is a dbSpinForm
71967>>>        Entry_Item OrderHea.Order_Date
71968>>>        Set Size to 13 66
71969>>>        Set Location to 5 319
71970>>>        Set peAnchors to anRight
71971>>>        Set Label to "Order Date"
71972>>>        Set Label_Justification_mode to jMode_right
71973>>>        Set Label_Col_Offset to 2
71974>>>        Set Label_row_Offset to 0
71975>>>    End_Object // oOrderHeaOrder_Date
71976>>>
71976>>>    Object oCustomerName is a dbForm
71978>>>        Entry_Item Customer.Name
71979>>>        Set Size to 13 200
71980>>>        Set Location to 20 56
71981>>>        Set peAnchors to anLeftRight
71982>>>        Set Label to "Customer Name"
71983>>>        Set Label_Justification_mode to jMode_right
71984>>>        Set Label_Col_Offset to 2
71985>>>        Set Label_row_Offset to 0
71986>>>    End_Object // oCustomerName
71987>>>
71987>>>    Object oCustomerAddress is a dbForm
71989>>>        Entry_Item Customer.Address
71990>>>        Set Size to 13 200
71991>>>        Set Location to 35 56
71992>>>        Set peAnchors to anLeftRight
71993>>>        Set Label to "Street Address"
71994>>>        Set Label_Justification_mode to jMode_right
71995>>>        Set Label_Col_Offset to 2
71996>>>        Set Label_row_Offset to 0
71997>>>    End_Object // oCustomerAddress
71998>>>
71998>>>    Object oOrderHeaOrdered_By is a dbForm
72000>>>        Entry_Item OrderHea.Ordered_By
72001>>>        Set Size to 13 66
72002>>>        Set Location to 35 319
72003>>>        Set peAnchors to anRight
72004>>>        Set Label to "Ordered By"
72005>>>        Set Label_Justification_mode to jMode_right
72006>>>        Set Label_Col_Offset to 2
72007>>>        Set Label_row_Offset to 0
72008>>>    End_Object // oOrderHeaOrdered_By
72009>>>
72009>>>    Object oCustomerCity is a dbForm
72011>>>        Entry_Item Customer.City
72012>>>        Set Size to 13 80
72013>>>        Set Location to 50 56
72014>>>        Set peAnchors to anLeftRight
72015>>>        Set Label to "City/State/Zip"
72016>>>        Set Label_Justification_mode to jMode_right
72017>>>        Set Label_Col_Offset to 2
72018>>>        Set Label_row_Offset to 0
72019>>>    End_Object // oCustomerCity
72020>>>
72020>>>    Object oCustomerState is a dbComboForm
72022>>>        Entry_Item Customer.State
72023>>>        Set Size to 13 39
72024>>>        Set Location to 50 145
72025>>>        Set peAnchors to anRight
72026>>>        Set Label to ""
72027>>>        Set Label_Justification_mode to jMode_right
72028>>>        Set Label_Col_Offset to 2
72029>>>        Set Label_row_Offset to 0
72030>>>    End_Object // oCustomerState
72031>>>
72031>>>    Object oCustomerZip is a dbForm
72033>>>        Entry_Item Customer.Zip
72034>>>        Set Size to 13 66
72035>>>        Set Location to 50 190
72036>>>        Set peAnchors to anRight
72037>>>        Set Label to ""
72038>>>        Set Label_Justification_mode to jMode_right
72039>>>        Set Label_Col_Offset to 2
72040>>>        Set Label_row_Offset to 0
72041>>>    End_Object // oCustomerZip
72042>>>
72042>>>    Object oSalesPID is a dbForm
72044>>>        Entry_Item SalesP.ID
72045>>>        Set Size to 13 46
72046>>>        Set Location to 50 319
72047>>>        Set peAnchors to anRight
72048>>>        Set Label to "Sales Person Id"
72049>>>        Set Label_Justification_mode to jMode_right
72050>>>        Set Label_Col_Offset to 2
72051>>>        Set Label_row_Offset to 0
72052>>>    End_Object // oSalesPID
72053>>>
72053>>>    Object oOrderHeaTerms is a dbComboForm
72055>>>        Entry_Item OrderHea.Terms
72056>>>        Set Size to 13 80
72057>>>        Set Location to 65 56
72058>>>        Set peAnchors to anLeftRight
72059>>>        Set Label to "Terms"
72060>>>        Set Label_Justification_mode to jMode_right
72061>>>        Set Label_Col_Offset to 2
72062>>>        Set Label_row_Offset to 0
72063>>>        Set Entry_State to False
72064>>>    End_Object // oOrderHeaTerms
72065>>>
72065>>>    Object oOrderHeaShip_Via is a dbComboForm
72067>>>        Entry_Item OrderHea.Ship_Via
72068>>>        Set Size to 13 91
72069>>>        Set Location to 65 190
72070>>>        Set peAnchors to anRight
72071>>>        Set Label to "Ship Via"
72072>>>        Set Label_Justification_mode to jMode_right
72073>>>        Set Label_Col_Offset to 2
72074>>>        Set Label_row_Offset to 0
72075>>>
72075>>>        // Last DEO will attempt to save and enable to grid and then switch to it
72075>>>        Procedure Switch 
72078>>>            Boolean bEnabled
72078>>>            Send Request_Save
72079>>>            Send EnableObjects
72080>>>            Get Enabled_State of oDetailGrid to bEnabled
72081>>>            If bEnabled Begin
72083>>>                Forward Send Switch
72085>>>            End
72085>>>>
72085>>>        End_Procedure // Switch
72086>>>
72086>>>    End_Object // oOrderHeaShip_Via
72087>>>
72087>>>    Object oDetailGrid is a cDbCJGrid
72089>>>        Set Size to 63 385
72090>>>        Set Location to 88 5
72091>>>        Set Server to oOrderDtl_DD
72092>>>        Set Ordering to 1
72093>>>        Set peAnchors to anAll
72094>>>        Set psLayoutSection to "oOrderEntryView_oDetailGrid"
72095>>>        Set pbAllowInsertRow to False
72096>>>        Set pbHeaderPrompts to True
72097>>>
72097>>>        Object oInvt_Item_ID is a cDbCJGridColumn
72099>>>            Entry_Item Invt.Item_ID
72100>>>            Set piWidth to 112
72101>>>            Set psCaption to "Item ID"
72102>>>        End_Object // oInvt_Item_ID
72103>>>
72103>>>        Object oInvt_Description is a cDbCJGridColumn
72105>>>            Entry_Item Invt.Description
72106>>>            Set piWidth to 187
72107>>>            Set psCaption to "Description"
72108>>>        End_Object // oInvt_Description
72109>>>
72109>>>        Object oInvt_Unit_Price is a cDbCJGridColumn
72111>>>            Entry_Item Invt.Unit_Price
72112>>>            Set piWidth to 67
72113>>>            Set psCaption to "Unit Price"
72114>>>        End_Object // oInvt_Unit_Price
72115>>>
72115>>>        Object oOrderDtl_Price is a cDbCJGridColumn
72117>>>            Entry_Item OrderDtl.Price
72118>>>            Set piWidth to 67
72119>>>            Set psCaption to "Price"
72120>>>        End_Object // oOrderDtl_Price
72121>>>
72121>>>        Object oOrderDtl_Qty_Ordered is a cDbCJGridColumn
72123>>>            Entry_Item OrderDtl.Qty_Ordered
72124>>>            Set piWidth to 60
72125>>>            Set psCaption to "Quantity"
72126>>>        End_Object // oOrderDtl_Qty_Ordered
72127>>>
72127>>>        Object oOrderDtl_Extended_Price is a cDbCJGridColumn
72129>>>            Entry_Item OrderDtl.Extended_Price
72130>>>            Set piWidth to 84
72131>>>            Set psCaption to "Total"
72132>>>        End_Object // oOrderDtl_Extended_Price
72133>>>
72133>>>    End_Object // oDetailGrid
72134>>>
72134>>>    //-----------------------------------------------------------------------
72134>>>    // Create Idle time to handle enabling / disabling of grid
72134>>>    //-----------------------------------------------------------------------
72134>>>    Object oIdle is a cIdleHandler
72136>>>        Procedure OnIdle 
72139>>>            Delegate Send OnIdle
72141>>>        End_Procedure // OnIdle
72142>>>    End_Object // oIdle
72143>>>
72143>>>    Procedure OnIdle 
72146>>>        Send EnableObjects
72147>>>    End_Procedure // OnIdle
72148>>>
72148>>>    Procedure EnableObjects 
72151>>>        Boolean bChanged bRec
72151>>>        Handle hoServer
72151>>>        Get Server to hoServer
72152>>>        Get Should_Save of hoServer to bChanged
72153>>>        Get HasRecord of hoServer to bRec
72154>>>        Set Enabled_State of oDetailGrid to (not(bChanged) and bRec)
72155>>>    End_Procedure // EnableObjects
72156>>>
72156>>>    Procedure Activating 
72159>>>        Forward Send Activating
72161>>>        Set pbEnabled of oIdle to True
72162>>>    End_Procedure // Activating
72163>>>
72163>>>    Procedure Deactivating 
72166>>>        Set pbEnabled of oIdle to False
72167>>>        Forward Send Deactivating
72169>>>    End_Procedure // Deactivating
72170>>>
72170>>>    //-----------------------------------------------------------------------
72170>>>    // Create custom confirmation messages for save and delete
72170>>>    // We must create the new functions and assign verify messages
72170>>>    // to them.
72170>>>    //-----------------------------------------------------------------------
72170>>>
72170>>>    Function ConfirmDeleteHeader Returns Boolean
72173>>>        Boolean bFail
72173>>>        Get Confirm "Delete Entire Header and all detail?" to bFail
72174>>>        Function_Return bFail
72175>>>    End_Function // ConfirmDeleteHeader
72176>>>
72176>>>    // Only confirm on the saving of new records
72176>>>    Function ConfirmSaveHeader Returns Boolean
72179>>>        Boolean bNoSave bHasRecord
72179>>>        Handle  hoSrvr
72179>>>        Get Server to hoSrvr
72180>>>        Get HasRecord of hoSrvr to bHasRecord
72181>>>        If not bHasRecord Begin
72183>>>            Get Confirm "Save this NEW header?" to bNoSave
72184>>>        End
72184>>>>
72184>>>        Function_Return bNoSave
72185>>>    End_Function // ConfirmSaveOrder
72186>>>
72186>>>    // Define alternate confirmation Messages
72186>>>    Set Verify_Save_MSG       to GET_ConfirmSaveHeader
72187>>>    Set Verify_Delete_MSG     to GET_ConfirmDeleteHeader
72188>>>    // Saves in header should not clear the view
72188>>>    Set Auto_Clear_Deo_State to False
72189>>>
72189>>>    Object oPrintBtn is a Button
72191>>>        Set Location to 158 5
72192>>>        Set Label to "Print Order"
72193>>>        Set peAnchors to anBottomLeft
72194>>>    
72194>>>        // fires when the button is clicked
72194>>>        Procedure OnClick
72197>>>            
72197>>>        End_Procedure
72198>>>    
72198>>>    End_Object
72199>>>
72199>>>    Object oOrderHea_Order_Total is a dbForm
72201>>>        Entry_Item OrderHea.Order_Total
72202>>>        Set Location to 158 330
72203>>>        Set Size to 13 60
72204>>>        Set Label to "Order Total:"
72205>>>        Set Label_Col_Offset to 2
72206>>>        Set Label_Justification_Mode to JMode_Right
72207>>>        Set peAnchors to anBottomRight
72208>>>    End_Object
72209>>>
72209>>>
72209>>>End_Object // oOrderEntryView
72210>        Use CustomerReport.rv
Including file: CustomerReport.rv    (C:\Users\philip.waller\Documents\Training\Assignments\Day 9 021414\PPW OrderTutorial\AppSrc\CustomerReport.rv)
72210>>>// CustomerReport.rv
72210>>>// Customer Listing (WinPrint 2)
72210>>>Register_Object oReport
72210>>>
72210>>>Use DFRptVw.pkg
72210>>>Use cWinReport2.pkg
Including file: cWinReport2.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\cWinReport2.pkg)
72210>>>>>// cWinReport2.pkg
72210>>>>>
72210>>>>>// defines support for new Winprint2 cWinReport2 class
72210>>>>>
72210>>>>>
72210>>>>>Use DFRpt.pkg              // BasicReport RO Class for VDF
72210>>>>>Use WinPrint2.pkg          // WinPrint2 engine
Including file: Winprint2.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\Winprint2.pkg)
72210>>>>>>>// WinPrint2.pkg
72210>>>>>>>//
72210>>>>>>>Use windows.pkg
72210>>>>>>>Use LanguageText.pkg
72210>>>>>>>Use DLL.pkg
72210>>>>>>>Use WinPrint2_Api.pkg
Including file: WinPrint2_API.pkg    (C:\Program Files (x86)\Visual DataFlex 16.1\Pkg\WinPrint2_API.pkg)
72210>>>>>>>>>//WinPrint2_API.pkg
72210>>>>>>>>>
72210>>>>>>>>>Use DLL.pkg
72210>>>>>>>>>
72210>>>>>>>>>External_Function WP_IsPrinterValid "IsPrinterValid" WinPrint.dll ;Returns Boolean // True if the the current printer is a valid one. False, otherwise.
72211>>>>>>>>>
72211>>>>>>>>>External_Function WP_ArePrintersInstalled "ArePrintersInstalled" WinPrint.dll ; // determines whether at least one printer is installedReturns Boolean // True, if a printer is installed, False if it is not.
72212>>>>>>>>>
72212>>>>>>>>>External_Function WP_ExecutePrinterSetupDialog "ExecutePrinterSetupDialog" WinPrint.dll ; // displays the "printer setup" dialog   Handle hWndParent; // window handle of the parent windowReturns Boolean // True if the OK button pressed; False, otherwise.
72213>>>>>>>>>
72213>>>>>>>>>External_Function WP_ExecutePrintDialog "ExecutePrintDialog" WinPrint.dll ; // displays the "Print" dialog   Handle hWndParent; // window handle of the parent windowReturns Boolean // True if the OK button pressed; False, otherwise.
72214>>>>>>>>>
72214>>>>>>>>>External_Function WP_GetCurrentDevice "GetCurrentDevice" WinPrint.dll ; // retrieves the name of the current printer device    Address aDevice ; // address of the string (255 chars) that will hold the device name upon returnReturns Boolean // True, if success; False if error occurred
72215>>>>>>>>>
72215>>>>>>>>>External_Function WP_GetPrintDialogFlags "GetPrintDialogFlags" WinPrint.dll ; // retrieves the current print optionsReturns UInteger // array of flags representing print-related options that are currently set
72216>>>>>>>>>
72216>>>>>>>>>External_Function WP_GetUserDefinedPapersize "GetUserDefinedPapersize" WinPrint.dll ;  // gets the size of user-defined paperReturns UInteger // // hi-word=length; lo-word=width
72217>>>>>>>>>
72217>>>>>>>>>External_Function WP_IsPrintDialogFlagSet "IsPrintDialogFlagSet" WinPrint.dll ; // determines whether a specific print-flag is set    UInteger iFlag ; // the printer flagReturns Boolean // True, if the flag is set; False, if it isn't
72218>>>>>>>>>
72218>>>>>>>>>External_Function WP_SelectPrinter "SelectPrinter" WinPrint.dll ; // selects a printer programatically    String sDevice; // the name of the printerReturns Boolean // True, if success; False, if error (such as an invalid printer name)
72219>>>>>>>>>
72219>>>>>>>>>External_Function WP_SetFirstPagePaperSource "SetFirstPagePaperSource"  WinPrint.dll ;        Integer iBin ; // the bim constantReturns Boolean // True if success, false if error
72220>>>>>>>>>
72220>>>>>>>>>External_Function WP_SetNumberOfPrintCopies "SetNumberOfPrintCopies" WinPrint.dll ; // sets the number of copies to print    UInteger iNumCopies; // number of copies to makeReturns Boolean // Always True
72221>>>>>>>>>
72221>>>>>>>>>External_Function WP_SetSpecificPrintDialogFlag "SetSpecificPrintDialogFlag" WinPrint.dll; // Sets/unsets one printer flag    UInteger fFlag; // printer flagReturns Boolean // True, if success; False if error occurred
72222>>>>>>>>>
72222>>>>>>>>>External_Function WP_SetPrintDialogFlags "SetPrintDialogFlags" WinPrint.dll; // Sets/unsets all printer flags in one call    UInteger fFlags; // printer flagsReturns Boolean // True, if success; False if error occurred
72223>>>>>>>>>
72223>>>>>>>>>External_Function WP_SetUserDefinedPapersize "SetUserDefinedPapersize" WinPrint.dll ;  // sets the size of user-defined paper    UInteger iPaperSize ; // hi-word=length; lo-word=widthReturns Boolean; // True, if success; False if error occurred
72224>>>>>>>>>External_Function WP_SetFontStyle "SetFontStyle" WinPrint.dll ; // sets multiple font attributes    Integer iStyles ; // series of flagsReturns Boolean // always True
72225>>>>>>>>>
72225>>>>>>>>>External_Function WP_SetFontBold "SetFontBold" WinPrint.dll ; // toggles the bold attribute of the current font    Boolean bBold ; // True to switch bold attribute on; False to switch it offReturns Boolean // always True
72226>>>>>>>>>
72226>>>>>>>>>External_Function WP_SetFontItalic "SetFontItalic" WinPrint.dll ; // toggles the italic attribute of the current font    Boolean bItalic ; // True to switch italic attribute on; False to switch it offReturns Boolean  // always True
72227>>>>>>>>>
72227>>>>>>>>>External_Function WP_SetFontUnderline "SetFontUnderline" WinPrint.dll ; // toggles the underline attribute of the current font    Boolean bUnderline ; // True to switch underline attribute on; False to switch it offReturns Boolean  // always True
72228>>>>>>>>>
72228>>>>>>>>>External_Function WP_SetFontStrikeout "SetFontStrikeout" WinPrint.dll ; // toggles the strikeout attribute of the current font    Boolean bStrikeout ; // True to switch strikeout attribute on; False to switch it offReturns Boolean  // always True
72229>>>>>>>>>
72229>>>>>>>>>External_Function WP_SetFontColor "SetFontColor" WinPrint.dll ; // sets the color of the current font    Integer iColor ; // color of the fontReturns Boolean  // always True
72230>>>>>>>>>
72230>>>>>>>>>External_Function WP_SetFontHeight "SetFontHeight" WinPrint.dll ; // sets the height of the font    UInteger iHeight ; // height of the font in points (multiplied by 100. Eg 12.5 point should be sent as 1250)Returns Boolean  // always True
72231>>>>>>>>>
72231>>>>>>>>>External_Function WP_SetFontName "SetFontName" WinPrint.dll ; // Sets the name of the font to use    String sFontName ; // name of the font to useReturns Boolean  // always True
72232>>>>>>>>>
72232>>>>>>>>>External_Function WP_DrawBitmap "DrawBitmap" WinPrint.dll ; // Draws a bitmap (BMP, JPG)    String  sBitmap;                 // Name of the bitmap    Integer iLeft;                   // distance from left edge to draw bitmap    Integer iTop;                    // distance from top edge to draw bitmap    Integer iWidth;                  // width of the bitmap    Integer iHeight;                 // height of the bitmap    Boolean bUpdateCurrentPosition;  // after drawing, should the current position be updated?Returns Boolean // True, if OK; False, if an error occurred.
72233>>>>>>>>>
72233>>>>>>>>>External_Function WP_DrawEllipse "DrawEllipse" WinPrint.dll ; // draws an elipse within a bounding rectangle    Integer iLeft;                   // distance from left edge to draw the ellipse    Integer iTop;                    // distance from top edge to draw the ellipse    Integer iWidth;                  // width of the bounding rectangle    Integer iHeight;                 // height of the bounding rectangle    Integer iBorderColor;            // color of the ellipse's edge    Integer iFillColor;              // internal color of the ellipse    Boolean  bFill;                  // should the ellipse be filled? (False=transparent)    UInteger iThickness;             // thickness of the elipse    Boolean  bUpdateCurrentPosition; // after drawing, should the current position be updated?    Boolean  bWrap;                  // Should the ellipse be drawn on future soft-page breaks?Returns Boolean // True, if OK; False, if an error occurred.
72234>>>>>>>>>
72234>>>>>>>>>External_Function WP_DrawLine "DrawLine" WinPrint.dll ; // draws a line from the current position    Integer iLeft;                   // distance from left edge to draw the line    Integer iTop;                    // distance from top edge to draw the line    Integer iLength;                 // length of the line    Boolean  bHorizontal;            // draw horizontal? (False=vertical)    Integer iColor;                  // color of the line    UInteger iThickness;             // thickness of the line    Boolean  bUpdateCurrentPosition; // after drawing, should the current position be updated?Returns Boolean // True, if OK; False, if an error occurred.
72235>>>>>>>>>
72235>>>>>>>>>External_Function WP_DrawRectangle "DrawRectangle" WinPrint.dll ; // draws a rectangle    Integer iLeft;                   // distance from left edge to draw the rectangle    Integer iTop;                    // distance from top edge to draw the rectangle    Integer iWidth;                  // width of the rectangle    Integer iHeight;                 // height of the rectangle    Integer iBorderColor;            // color of the rectangle's border    Integer iFillColor;              // internal color of the rectangle    Boolean  bFill;                  // should the rectangle be filled? (False=transparent)    UInteger iThickness;             // thickness of the rectangle's border    Boolean  bUpdateCurrentPosition; // after drawing, should the current position be updated?    Boolean  bWrap;                  // Should the rectangle be drawn on future soft-page breaks?Returns Boolean // True, if OK; False, if an error occurred.
72236>>>>>>>>>
72236>>>>>>>>>External_Function WP_DrawXYLine "DrawXYLine" WinPrint.dll ; // draws a line between two points    Integer iLeftStart;              // distance from left edge to draw from    Integer iTopStart;               // distance from top edge to draw from    Integer iLeftEnd;                // distance from left edge to draw to    Integer iTopEnd;                 // distance from top edge to draw to    Integer iColor;                  // color of the line    UInteger iThickness;             // thickness of the line    Boolean  bUpdateCurrentPosition; // after drawing, should the current position be updated?    Boolean  bWrap;                  // Should the line be drawn on future soft-page breaks?Returns Boolean // True, if OK; False, if an error occurred.
72237>>>>>>>>>
72237>>>>>>>>>External_Function WP_SetAbsoluteMargins "SetAbsoluteMargins" WinPrint.dll ; // modifies the top/bottom non-printable margin    UInteger iTop;      // the top margin offset    UInteger iBottom;   // the bottom margin offset    Boolean  bAllPages; // should all pages be affected? True=AllPages; False=first page onlyReturns Boolean // always True
72238>>>>>>>>>
72238>>>>>>>>>External_Function WP_SetMargins "SetMargins" WinPrint.dll ; // Sets the user-margins    UInteger iLeft;   // the left margin    UInteger iTop;    // the top margin    UInteger iRight;  // the right margin    UInteger iBottom; // the bottom marginReturns Boolean // always True
72239>>>>>>>>>
72239>>>>>>>>>External_Function WP_CreateDiagram "CreateDiagram" WinPrint.dll ; // Creates a new diagram    UInteger eType;       // type of diagram (Bar, Line, Pie)    UInteger eEffect;     // how it is drawn (2d or 3d, etc)    UInteger iWidth;      // width of the diagram    UInteger iHeight;     // height of the diagram    Boolean  bDrawXyAxis; // draw the xy-axis (for bar charts only)?Returns Handle // unique id for the diagram used in other diagram funtions
72240>>>>>>>>>
72240>>>>>>>>>External_Function WP_AddDiagramEntry "AddDiagramEntry" WinPrint.dll ; // Adds an item into a diagram    Handle   hDiagram;          // diagram handle returned by CreateDiagram()    String   sValueDescription; // description of the item    String   sValue;            // value of the item    Integer iBorderColor;       // color of the item's border    Integer iFillColor;         // color of the item's interior    Boolean  bFilled;           // should the item be drawn filled (with iFillColor), or transparent?    UInteger iNumDecimals;      // Number of decimals in the sValue argument    UInteger eValueOrPercent;   // How the value should be displayed (as value or percentage, etc)    Boolean  bExploded;         // should the value be "pulled out" (pie charts only)Returns Boolean // True, if success; False, if error
72241>>>>>>>>>
72241>>>>>>>>>External_Function WP_DrawDiagram "DrawDiagram" WinPrint.dll ; // draws a diagram    Handle   hDiagram;               // diagram handle returned by CreateDiagram()    UInteger iLeft;                  // x-coordinate to draw the diagram    UInteger iTop;                   // y-coordinate to draw the diagram    Boolean  bUpdateCurrentPosition; // after drawing, should the current position be updated?Returns Boolean // True, if success; False, if error
72242>>>>>>>>>
72242>>>>>>>>>External_Function WP_LockDiagram "LockDiagram" WinPrint.dll ; // Locks a diagram so that no more entries can be added    Handle hDiagram; // diagram handle returned by CreateDiagram()Returns Boolean // True, if success; False, if error
72243>>>>>>>>>
72243>>>>>>>>>External_Function WP_SetDiagramCaption "SetDiagramCaption" WinPrint.dll ; // Sets the caption of a diagram    Handle hDiagram; // diagram handle returned by CreateDiagram()    String sCaption; // the diagram's captionReturns Boolean // True, if success; False, if error
72244>>>>>>>>>
72244>>>>>>>>>External_Function WP_SetDiagramXText "SetDiagramXText" WinPrint.dll ; // Sets the horizontal label of a diagram    Handle hDiagram; // diagram handle returned by CreateDiagram()    String sText;    // the diagram's horizonal labelReturns Boolean // True, if success; False, if error
72245>>>>>>>>>
72245>>>>>>>>>External_Function WP_SetDiagramYText "SetDiagramYText" WinPrint.dll ; // Sets the vertical label of a diagram    Handle  hDiagram;      // diagram handle returned by CreateDiagram()    String  sText;         // the diagram's vertical label    Boolean bVerticalText; // should the text be drawn vertically (False=horizontally)Returns Boolean // True, if success; False, if error
72246>>>>>>>>>
72246>>>>>>>>>External_Function WP_BeginHeader "BeginHeader" WinPrint.dll ; // creates a new header    UInteger iHeaderType; // the type of header    UInteger iSubHeaderNum; // for subheaders, then number (1-0)Returns Boolean // always True
72247>>>>>>>>>
72247>>>>>>>>>External_Function WP_EndHeader "EndHeader" WinPrint.dll ; // declares the end of the current headerReturns Boolean // always True
72248>>>>>>>>>
72248>>>>>>>>>External_Function WP_SetExtraLineCheck "SetExtraLineCheck" WinPrint.dll ; // forces a soft page break if header plus number of lines don't fit on page    UInteger iNumLines; // number of lines in addition to header required before forcing a soft page-breakReturns Boolean; // always True
72249>>>>>>>>>External_Function WP_SetHeaderFrame "SetHeaderFrame" WinPrint.dll ; // sets the style, color and frame of a header    UInteger eFrame;     // style of frame (margin-to-margin, etc)    Integer iColor;      // color of the frame's edge    UInteger iThickness; // thickness of the frame    Integer iFillCol;    // the internal color of the frame (only used if bBilled=True)    Boolean  bFilled;    // True, if the frame should be filled with the iFillColor (False=Transparent)Returns Boolean // Always True
72250>>>>>>>>>
72250>>>>>>>>>External_Function WP_SetHeaderMargin "SetHeaderMargin" WinPrint.dll ; // Sets a margin of space on the inside and outside of the current header    UInteger eType;      // Specifies which margin areas is being set.    Integer  iSize;      // Size of the margin setting in the current report metricsReturns Boolean  // False if document is not started
72251>>>>>>>>>
72251>>>>>>>>>External_Function WP_SetHeaderPlacement "SetHeaderPlacement" WinPrint.dll ; // placement (left, center or right) of the header    UInteger ePlacement; // placed left, center or rightReturns Boolean //always True
72252>>>>>>>>>
72252>>>>>>>>>External_Function WP_SetHeaderWrap "SetHeaderWrap" WinPrint.dll ; // determines whether the current header is drawn on soft page-breaks    Boolean bWrap; // True, to wrap onto following pages; False, for current page onlyReturns Boolean // always True
72253>>>>>>>>>
72253>>>>>>>>>External_Function WP_WriteHeader "WriteHeader" WinPrint.dll ; // writes a header to the current page    UInteger eHeaderType;   // type of header    UInteger iSubHeaderNum; // for subheaders, the number (1-9)Returns Boolean // True, if success; False, if error
72254>>>>>>>>>
72254>>>>>>>>>External_Function WP_RGBToDFPrintColor "RGBToDFPrintColor" WinPrint.dll ; // converts R, G, and B values into a composite color that WinPrint expects    UInteger iRed;   // red component (1-255)    UInteger iGreen; // green component (1-255)    UInteger iBlue;  // blue component (1-255)Returns Integer // composite color
72255>>>>>>>>>
72255>>>>>>>>>External_Function WP_GetMetrics "GetMetrics" WinPrint.dll ; // gets the current unit of measurementReturns UInteger // unit of measurement (Inch or CM)
72256>>>>>>>>>
72256>>>>>>>>>External_Function WP_SetMetrics "SetMetrics" WinPrint.dll ; // sets the unit of measurement   UInteger eMetrics; // Inch or CMReturns Boolean // always True
72257>>>>>>>>>
72257>>>>>>>>>External_Function WP_ClearDocument "ClearDocument" WinPrint.dll ; // clears the resources of the document from memoryReturns Boolean // always True
72258>>>>>>>>>
72258>>>>>>>>>External_Function WP_NewDocument "NewDocument" WinPrint.dll ; // starts a new document, but preserves the printer settings   Boolean bAutoPreview ; // Should the Previewer be displayed immediatelyReturns Boolean // True, if success; False, if an error occurred
72259>>>>>>>>>
72259>>>>>>>>>External_Function WP_EndDocument "EndDocument" WinPrint.dll ; // Indicates that the document is finishedReturns Boolean // always True
72260>>>>>>>>>
72260>>>>>>>>>External_Function WP_ClearPrinter "ClearPrinter" WinPrint.dll ; // clears all printer and document resourcesReturns Boolean // True, if success; False, if an error occurred
72261>>>>>>>>>
72261>>>>>>>>>External_Function WP_ConfirmLines "ConfirmLines" WinPrint.dll ; // ensures that a specified number of lines will fit on the page; if not, a soft page-break is performed automatically    UInteger iNumLines; // number of lines that must fit on the pageReturns Boolean // True, if success; False, if an error occurred
72262>>>>>>>>>
72262>>>>>>>>>External_Function WP_CreatePage "CreatePage" WinPrint.dll ; // creates a new page of specified columns   UInteger iNumColumns; // number of columns (zero= no columns)Returns UInteger; // page number that was created
72263>>>>>>>>>External_Function WP_PreviewDocument "PreviewDocument" WinPrint.dll ; // previews the current document    Boolean bPrintDialog; // Determines whether the Print Dialog (range, etc) is displayed when the "print" button is clicked in the preview window.    Boolean bPrintSetup;  // Determines whether the Print Setup button is enabled (allows to change orientation, etc)    Boolean bPrint;       // Determines whether the Print button is enabledReturns Handle // non-zero = hViewerProcess; zero= error
72264>>>>>>>>>
72264>>>>>>>>>External_Function WP_ClosePreview "ClosePreview" WinPrint.dll ; // closes the preview windowReturns Boolean // True, if closed; False, if an error occurred (such as it not being already open)
72265>>>>>>>>>
72265>>>>>>>>>External_Function WP_PrintDocument "PrintDocument" WinPrint.dll ; // prints the current document    Handle hWndParent; // window handle of object to use for any modal outputReturns Boolean // True, if success; False, if an error occurred
72266>>>>>>>>>
72266>>>>>>>>>External_Function WP_SetAlign "SetAlign" WinPrint.dll ; // align future text    UInteger eAlign; // left, center or rightReturns Boolean // always True
72267>>>>>>>>>
72267>>>>>>>>>External_Function WP_WriteText "WriteText" WinPrint.dll ; // write text to the current position or column    String sText;               // the text to write    Boolean bNewLineAfterPrint; // should a "CR" be written after the text    UInteger iColumnNum;        // number of the column to write to (zero=no column, use current position)    Integer iNumDecimals;       // number of decimals in the text (-1 means sText is a string)    UInteger iWidth;            // width of text before truncatingReturns Boolean // True, if success; False, if an error occurred
72268>>>>>>>>>
72268>>>>>>>>>External_Function WP_WriteTextAtPosition "WriteTextAtPosition" WinPrint.dll ; // writes text to a specific position    String sText;               // the text to write    Boolean bNewLineAfterPrint; // should a "CR" be written after the text    UInteger iPosition;         // horizontal position to write the text    Integer iNumDecimals;       // number of decimals in the text (-1 means sText is a string)    UInteger iWidth;            // width of text before truncatingReturns Boolean // True, if success; False, if an error occurred
72269>>>>>>>>>
72269>>>>>>>>>External_Function WP_SetProgressCaption "SetProgressCaption" WinPrint.dll ;    String sProgressCaption ;Returns Boolean
72270>>>>>>>>>
72270>>>>>>>>>External_Function WP_SetReportTitle     "SetReportTitle"     WinPrint.dll ;    String sCaption ;Returns Boolean
72271>>>>>>>>>
72271>>>>>>>>>External_Function WP_ViewerWantsToClose "ViewerWantsToClose" WinPrint.dll ;Returns Integer
72272>>>>>>>>>
72272>>>>>>>>>External_Function WP_DisplayMessageBox  "DisplayMessageBox"  WinPrint.dll ;    String sCaption String sText ;Returns Integer
72273>>>>>>>>>
72273>>>>>>>>>External_Function WP_GetViewerWindow "GetViewerWindow" Winprint.dll ;Returns Handle
72274>>>>>>>>>
72274>>>>>>>>>External_Function WP_GetDocumentStatus "GetDocumentStatus" Winprint.dll ;Returns Integer // returns dsNotStarted, dsStarted, or dsFinished
72275>>>>>>>>>
72275>>>>>>>Use WinPrint_Constants.pkg
72275>>>>>>>Use Rgb.pkg
72275>>>>>>>Use GlobalFunctionsProcedures.pkg
72275>>>>>>>
72275>>>>>>>DEFINE INFINITE for -1
72275>>>>>>>DEFINE WAIT_TIMEOUT for |CI$00000102
72275>>>>>>>
72275>>>>>>>
72275>>>>>>>DEFINE QS_KEY            for |CI$0001
72275>>>>>>>DEFINE QS_MOUSEMOVE      for |CI$0002
72275>>>>>>>DEFINE QS_MOUSEBUTTON    for |CI$0004
72275>>>>>>>DEFINE QS_POSTMESSAGE    for |CI$0008
72275>>>>>>>DEFINE QS_TIMER          for |CI$0010
72275>>>>>>>DEFINE QS_PAINT          for |CI$0020
72275>>>>>>>DEFINE QS_SENDMESSAGE    for |CI$0040
72275>>>>>>>DEFINE QS_HOTKEY         for |CI$0080
72275>>>>>>>DEFINE QS_ALLPOSTMESSAGE for |CI$0100
72275>>>>>>>DEFINE QS_MOUSE          for (QS_MOUSEMOVE ior QS_MOUSEBUTTON)
72275>>>>>>>DEFINE QS_INPUT          for (QS_MOUSE ior QS_KEY)
72275>>>>>>>DEFINE QS_ALLEVENTS      for (QS_INPUT ior QS_POSTMESSAGE ior QS_TIMER ior QS_PAINT ior QS_HOTKEY)
72275>>>>>>>DEFINE QS_ALLINPUT       for (QS_INPUT ior QS_POSTMESSAGE ior QS_TIMER ior QS_PAINT ior QS_HOTKEY ior QS_SENDMESSAGE)
72275>>>>>>>
72275>>>>>>>External_Function WaitForSingleObject "WaitForSingleObject" Kernel32.dll Handle hHandle Dword dwMilliseconds Returns DWord
72276>>>>>>>External_Function GetCurrentProcessId "GetCurrentProcessId" Kernel32.dll Returns DWord
72277>>>>>>>External_Function GetCurrentProcess "GetCurrentProcess" Kernel32.dll Returns DWord
72278>>>>>>>
72278>>>>>>>External_Function MsgWaitForMultipleObjects "MsgWaitForMultipleObjects" User32.dll ;    DWORD nCount;             // number of handles in the object handle array    Address pHandles;     // pointer to the object-handle array    Boolean fWaitAll;     // wait for all or wait for one    DWORD dwMilliseconds; // time-out interval in milliseconds    DWORD dwWakeMask;     // type of input events to wait forReturns Dword
72279>>>>>>>
72279>>>>>>>Use GlobalFunctionsProcedures.pkg
72279>>>>>>>
72279>>>>>>>Class cWinPrint2 is a cObject // JJT: Will we need a windows handle for this like old one
72280>>>>>>>    Procedure Construct_Object
72282>>>>>>>        forward send construct_object
72284>>>>>>>
72284>>>>>>>        //*** internal properties
72284>>>>>>>        Property Integer DFCurrent_Color       0
72285>>>>>>>        Property String  DFCurrent_OutPut      "WinPrint"
72286>>>>>>>        Property Integer DFCurrent_Diagram     0
72287>>>>>>>        Property Integer DFCurrent_HeaderType  0
72288>>>>>>>        Property Integer DFCurrent_HeaderNr    0
72289>>>>>>>        Property Number  DFCurrent_FontSize    10
72290>>>>>>>        Property String  DFCurrent_Font        "Arial"
72291>>>>>>>
72291>>>>>>>        //*** Default values for margins 2.53 CM = 1 inch
72291>>>>>>>        Property Number  DFLeft_Margin    2.53
72292>>>>>>>        Property Number  DFTop_Margin     2.53
72293>>>>>>>        Property Number  DFright_Margin   2.53
72294>>>>>>>        Property Number  DFBottom_Margin  2.53
72295>>>>>>>
72295>>>>>>>        // If WP1 this defaults to false. In 2, it is true which means that the print job
72295>>>>>>>        // dialog appears when you hitprint in previewer.
72295>>>>>>>        Property Integer PrintDlgInPreview   1
72296>>>>>>>         // This does nothing in Wp2 (because you can't to this anyway)
72296>>>>>>>        Property Integer EnablePrintSetupFromPreview  True
72297>>>>>>>        Property Integer EnablePrintFromPreview  1
72298>>>>>>>
72298>>>>>>>        // is the GUI Suspended. This is privately maintained and is used
72298>>>>>>>        // to figure out if a preview panel is up or not
72298>>>>>>>        Property Integer pbIsSuspended False
72299>>>>>>>
72299>>>>>>>        Object oDFColorArray is an Array
72301>>>>>>>           //Moved into array
72301>>>>>>>           Set Value  0  To RGB_WHITE
72302>>>>>>>           Set Value  1  To RGB_RED
72303>>>>>>>           Set Value  2  To RGB_BLUE
72304>>>>>>>           Set Value  3  To RGB_GREEN
72305>>>>>>>           Set Value  4  To RGB_YELLOW
72306>>>>>>>           Set Value  5  To RGB_GREY
72307>>>>>>>           Set Value  6  To RGB_CYAN
72308>>>>>>>           Set Value  7  To RGB_MAGENTA
72309>>>>>>>           Set Value  8  To RGB_DRED
72310>>>>>>>           Set Value  9  To RGB_DBLUE
72311>>>>>>>           Set Value  10 To RGB_DGREEN
72312>>>>>>>           Set Value  11 To RGB_DYELLOW
72313>>>>>>>           Set Value  12 To RGB_DGREY
72314>>>>>>>           Set Value  13 To RGB_DCYAN
72315>>>>>>>           Set Value  14 To RGB_DMAGENTA
72316>>>>>>>           Set Value  15 To RGB_BLACK
72317>>>>>>>        End_Object
72318>>>>>>>
72318>>>>>>>        Object oDiagramArray is an Array
72320>>>>>>>        End_Object
72321>>>>>>>
72321>>>>>>>    End_Procedure
72322>>>>>>>
72322>>>>>>>    Function ViewerWantsToClose returns Boolean
72324>>>>>>>        Function_return (WP_ViewerWantsToClose())
72325>>>>>>>    end_Function
72326>>>>>>>
72326>>>>>>>    Function IsViewerActive returns boolean
72328>>>>>>>        Function_Return (WP_GetViewerWindow()<>0)
72329>>>>>>>    end_function
72330>>>>>>>
72330>>>>>>>    Function IsPrinterValid Returns Boolean
72332>>>>>>>        Function_Return (WP_IsPrinterValid()<>0)
72333>>>>>>>    End_Function
72334>>>>>>>
72334>>>>>>>    Function ArePrintersInstalled returns boolean
72336>>>>>>>        Function_Return (WP_ArePrintersInstalled()<>0)
72337>>>>>>>    End_Function
72338>>>>>>>
72338>>>>>>>
72338>>>>>>>    // returns docucument state: dsNotStarted, dsStarted, dsFinished
72338>>>>>>>    Function DocumentStatus returns Integer
72340>>>>>>>        Function_Return (WP_GetDocumentStatus())
72341>>>>>>>    end_function
72342>>>>>>>
72342>>>>>>>    // Might still be called from report class. Leave dummy stub
72342>>>>>>>    Procedure DFZeroCounters
72344>>>>>>>    End_Procedure
72345>>>>>>>
72345>>>>>>>    //***
72345>>>>>>>    Function DFNewPage Integer Columns Returns Integer
72347>>>>>>>        Integer iPageNum
72347>>>>>>>        // This returns a page number used in report object....(this may change)
72347>>>>>>>        Move (WP_CreatePage(Columns)) To iPageNum
72348>>>>>>>        If (iPageNum=0) Begin
72350>>>>>>>            Error DFERR_WINPRINT DFPrintError900
72351>>>>>>>>
72351>>>>>>>        End
72351>>>>>>>>
72351>>>>>>>        Function_Return iPageNum
72352>>>>>>>    End_Function
72353>>>>>>>
72353>>>>>>>    //***Return handle to use for winprint dialog. If main_window
72353>>>>>>>    //   exists, use it. Else, get object's handle
72353>>>>>>>    Function Report_Window_Handle returns handle
72355>>>>>>>        Handle hWnd
72355>>>>>>>        Handle hoObj
72355>>>>>>>        Get Focus of desktop to hoObj // start with the focus
72356>>>>>>>        Move (gOwnerWindowHandle(hoObj)) to hWnd // global function finds the right handle for us
72357>>>>>>>        function_return hWnd
72358>>>>>>>    End_Function
72359>>>>>>>
72359>>>>>>>
72359>>>>>>>    //***
72359>>>>>>>    Function DFPrintDialog Returns Boolean
72361>>>>>>>        Handle hwnd
72361>>>>>>>        Boolean bOk
72361>>>>>>>
72361>>>>>>>        Get Report_Window_Handle to hWnd
72362>>>>>>>        Move (WP_ExecutePrintDialog(hwnd)) To bOk
72363>>>>>>>
72363>>>>>>>        Function_Return bOk
72364>>>>>>>    End_Function
72365>>>>>>>
72365>>>>>>>
72365>>>>>>>    //*** You can only invoke the print setup if the report is cleared. If you try to to do this in
72365>>>>>>>    //    the wrong state you will get an error.
72365>>>>>>>    Function DFPrintSetupDialog Returns Boolean
72367>>>>>>>        Handle hwnd
72367>>>>>>>        Boolean bOk
72367>>>>>>>        Integer iStatus
72367>>>>>>>        Get ArePrintersInstalled to bOk
72368>>>>>>>        If not bOk Begin
72370>>>>>>>            Error DFERR_WINPRINT C_$NoInstalledPrinters
72371>>>>>>>>
72371>>>>>>>        End
72371>>>>>>>>
72371>>>>>>>        Else Begin
72372>>>>>>>            Get DocumentStatus to iStatus
72373>>>>>>>            
72373>>>>>>>            If (iStatus=dsNotStarted) Begin
72375>>>>>>>                Get Report_Window_Handle to hWnd
72376>>>>>>>                Move (WP_ExecutePrinterSetupDialog(hwnd)) to bOk
72377>>>>>>>                
72377>>>>>>>                // test that the selected printer is valid....
72377>>>>>>>                If bOK Begin
72379>>>>>>>                    Get IsPrinterValid to bOk // if printer not valid, it's not ok
72380>>>>>>>                    If not bOk Begin
72382>>>>>>>                        Error DFERR_WINPRINT DFPrintError936  // could not select a valid printer
72383>>>>>>>>
72383>>>>>>>                    End
72383>>>>>>>>
72383>>>>>>>                End
72383>>>>>>>>
72383>>>>>>>            End
72383>>>>>>>>
72383>>>>>>>            Else Begin
72384>>>>>>>               Error DFERR_WINPRINT DFPrintError966      // cannot change printer when report is active
72385>>>>>>>>
72385>>>>>>>            End
72385>>>>>>>>
72385>>>>>>>        End
72385>>>>>>>>
72385>>>>>>>        Function_Return bOk
72386>>>>>>>    End_Function
72387>>>>>>>
72387>>>>>>>
72387>>>>>>>    //*** Provided for backwards compatibility. DFPrintSetupDialog is more flexible because it returns a
72387>>>>>>>    //    false if cancel was selected.
72387>>>>>>>    Procedure DFPrintSetup
72389>>>>>>>        Boolean bOk
72389>>>>>>>        Get DFPrintSetupDialog to bOk
72390>>>>>>>    End_Procedure
72391>>>>>>>
72391>>>>>>>    //*** This invokes the print job dialog, prints the report, then clears the report document.
72391>>>>>>>    //    This should be called after the report is complete.
72391>>>>>>>    Procedure DFPrint
72393>>>>>>>        Integer bOk
72393>>>>>>>        Get DFPrintDialog To bOk
72394>>>>>>>        If bOk Begin
72396>>>>>>>            Send DFPrintDoc
72397>>>>>>>            Send DFClearDoc
72398>>>>>>>        End
72398>>>>>>>>
72398>>>>>>>    End_Procedure
72399>>>>>>>
72399>>>>>>>    Procedure DFSuspendGui boolean bSuspend
72401>>>>>>>        If (bSuspend<>pbIsSuspended(self)) begin
72403>>>>>>>            Send SuspendGui of Desktop bSuspend
72404>>>>>>>            Set pbIsSuspended to bSuspend
72405>>>>>>>        end
72405>>>>>>>>
72405>>>>>>>    end_procedure
72406>>>>>>>
72406>>>>>>>    // this is protected so that the queue is only pumped if the
72406>>>>>>>    // gui is suspended.
72406>>>>>>>    Procedure PumpMsgQueue
72408>>>>>>>        If (pbIsSuspended(self)) begin
72410>>>>>>>            Send PumpMsgQueue of desktop // permit painting
72411>>>>>>>        end
72411>>>>>>>>
72411>>>>>>>    end_procedure
72412>>>>>>>
72412>>>>>>>
72412>>>>>>>    //*** This does a modeless preview. This is what you'd want during
72412>>>>>>>    //    report generation and it may be what you want for report viewing.
72412>>>>>>>    Procedure DFPreviewNoWait
72414>>>>>>>        Boolean bOk
72414>>>>>>>        Boolean bPrntDlg bPrintSetup bPrint
72414>>>>>>>        integer iStatus
72414>>>>>>>        Get PrintDlgInPreview to bPrntDlg
72415>>>>>>>        Get EnablePrintSetupFromPreview to bPrintSetup
72416>>>>>>>        Get EnablePrintFromPreview to bPrint
72417>>>>>>>        Get DocumentStatus to iStatus
72418>>>>>>>        If (iStatus=dsStarted) begin
72420>>>>>>>            Send DfSuspendGui True
72421>>>>>>>        end
72421>>>>>>>>
72421>>>>>>>        Move (WP_PreviewDocument(bPrntDlg,bPrintSetup,bPrint)) To bOk
72422>>>>>>>        If not bOk Begin
72424>>>>>>>            Error DFERR_WINPRINT DFPrintError901
72425>>>>>>>>
72425>>>>>>>            Send DfSuspendGui False
72426>>>>>>>        End
72426>>>>>>>>
72426>>>>>>>    End_Procedure
72427>>>>>>>
72427>>>>>>>
72427>>>>>>>    //*** This does a modal preview. You might want this for report
72427>>>>>>>    //    viewing as the program knows when the viewer is closed
72427>>>>>>>    // Note that this is a private message and it was never intended that this
72427>>>>>>>    // should be used. We expect winprint reports to use modeless viewers.
72427>>>>>>>    Procedure DFPreviewWait
72429>>>>>>>        Handle hViewerProcess
72429>>>>>>>        Boolean bPrntDlg bPrintSetup bPrint
72429>>>>>>>        Integer iRetVal
72429>>>>>>>        Integer hwMain hMain
72429>>>>>>>
72429>>>>>>>        Get PrintDlgInPreview to bPrntDlg
72430>>>>>>>        Get EnablePrintSetupFromPreview to bPrintSetup
72431>>>>>>>        Get EnablePrintFromPreview to bPrint
72432>>>>>>>
72432>>>>>>>        Send DfSuspendGui True
72433>>>>>>>        Move (WP_PreviewDocument(bPrntDlg,bPrintSetup,bPrint)) To hViewerProcess
72434>>>>>>>
72434>>>>>>>        If (hViewerProcess = 0) Begin
72436>>>>>>>            Error DFERR_WINPRINT DFPrintError901
72437>>>>>>>>
72437>>>>>>>        End
72437>>>>>>>>
72437>>>>>>>        Else Begin
72438>>>>>>>            // We need to wait for either the Viewer to close, or a WM_PAINT message in the thread's queue...
72438>>>>>>>            Repeat
72438>>>>>>>>
72438>>>>>>>               Move (MsgWaitForMultipleObjects(1, AddressOf(hViewerProcess), False, INFINITE, QS_PAINT)) To iRetVal
72439>>>>>>>               Send PumpMsgQueue // permit painting
72440>>>>>>>            Until (iRetVal = 0) // 0 means that the viewer process terminated
72442>>>>>>>        end
72442>>>>>>>>
72442>>>>>>>        Send DfSuspendGui False
72443>>>>>>>
72443>>>>>>>       // Do what we can to force VDF application to the top.
72443>>>>>>>       // As 12.0 dfSuspendGUI actually properly disables the underlying windows. When the viewer
72443>>>>>>>       // is closed it cannot give the focus back to this so it goes elsewhere. This will force it
72443>>>>>>>       // back. 
72443>>>>>>>
72443>>>>>>>       Get main_window of desktop to hMain
72444>>>>>>>       If hMain Begin
72446>>>>>>>          Get window_handle of hMain to hwMain
72447>>>>>>>          If hwMain Begin
72449>>>>>>>              If (GetForegroundWindow()<>hwMain) Begin
72451>>>>>>>                  Move (SetForegroundWindow(hwMain)) to hwMain
72452>>>>>>>              End
72452>>>>>>>>
72452>>>>>>>          End
72452>>>>>>>>
72452>>>>>>>       End
72452>>>>>>>>
72452>>>>>>>
72452>>>>>>>    End_Procedure
72453>>>>>>>
72453>>>>>>>    Procedure DfPreview
72455>>>>>>>        send DfPreviewNoWait
72456>>>>>>>    end_procedure
72457>>>>>>>
72457>>>>>>>
72457>>>>>>>    //***
72457>>>>>>>    Procedure DFPrintDoc
72459>>>>>>>        Handle hwnd
72459>>>>>>>        Boolean bOk
72459>>>>>>>        Get Report_Window_Handle to hWnd
72460>>>>>>>        Move (WP_PrintDocument(hwnd)) To bOk
72461>>>>>>>
72461>>>>>>>        If not bOk Begin
72463>>>>>>>            Error DFERR_WINPRINT DFPrintError902
72464>>>>>>>>
72464>>>>>>>        End
72464>>>>>>>>
72464>>>>>>>    End_Procedure
72465>>>>>>>
72465>>>>>>>
72465>>>>>>>    //***
72465>>>>>>>    Procedure DFClearDoc
72467>>>>>>>        Boolean bOk
72467>>>>>>>        Get ArePrintersInstalled to bOk
72468>>>>>>>        If bOk begin
72470>>>>>>>            Move (WP_ClearDocument()) To bOk
72471>>>>>>>            Send DFSuspendGUI False
72472>>>>>>>            If not bOk Begin
72474>>>>>>>               Error DFERR_WINPRINT DFPrintError903 // error number right?
72475>>>>>>>>
72475>>>>>>>            End
72475>>>>>>>>
72475>>>>>>>        End
72475>>>>>>>>
72475>>>>>>>    End_Procedure
72476>>>>>>>
72476>>>>>>>    Procedure DFNewDoc Boolean bAutoPreview
72478>>>>>>>        Boolean bOk
72478>>>>>>>        // this is the most likely place we will encounter when we start a report. Check for
72478>>>>>>>        // printers and return an explicit error to make it easy to identify the error
72478>>>>>>>        Get ArePrintersInstalled to bOk
72479>>>>>>>        If not bOk begin
72481>>>>>>>            Error DFERR_WINPRINT C_$NoInstalledPrinters
72482>>>>>>>>
72482>>>>>>>        end
72482>>>>>>>>
72482>>>>>>>        else begin
72483>>>>>>>            Send DfClearDoc //JJT - a new doc should always start with a clear
72484>>>>>>>            If bAutoPreview Send DFSuspendGUI True
72487>>>>>>>            Move (WP_NewDocument(bAutoPreview)) To bOk
72488>>>>>>>
72488>>>>>>>            If not bOk Begin
72490>>>>>>>               Error DFERR_WINPRINT DFPrintError902  // could not print document
72491>>>>>>>>
72491>>>>>>>               Send DFSuspendGUI False
72492>>>>>>>            End
72492>>>>>>>>
72492>>>>>>>        end
72492>>>>>>>>
72492>>>>>>>    End_Procedure
72493>>>>>>>
72493>>>>>>>    //***
72493>>>>>>>    Procedure DFSetFont String sFontName
72495>>>>>>>        boolean bOk
72495>>>>>>>        Move (WP_SetFontName(sFontName)) To bOk
72496>>>>>>>
72496>>>>>>>        If not bOK Begin
72498>>>>>>>            Error DFERR_WINPRINT DFPrintError904
72499>>>>>>>>
72499>>>>>>>        End
72499>>>>>>>>
72499>>>>>>>    End_Procedure
72500>>>>>>>
72500>>>>>>>
72500>>>>>>>    //***
72500>>>>>>>    Procedure DFSetFontSize Integer iHeight Integer iWidth
72502>>>>>>>        boolean bOk
72502>>>>>>>        // note that width is ignored in new implementation
72502>>>>>>>        Move (WP_SetFontHeight(iHeight)) To bOk
72503>>>>>>>
72503>>>>>>>        If not bOK Begin
72505>>>>>>>            Error DFERR_WINPRINT  DFPrintError905
72506>>>>>>>>
72506>>>>>>>        End
72506>>>>>>>>
72506>>>>>>>    End_Procedure
72507>>>>>>>
72507>>>>>>>
72507>>>>>>>    //***
72507>>>>>>>    Procedure DFSetFontStyle DWORD dwStyle
72509>>>>>>>        boolean bOk
72509>>>>>>>        Move (WP_SetFontStyle(dwStyle)) To bOk
72510>>>>>>>
72510>>>>>>>        If not bOK Begin
72512>>>>>>>            Error DFERR_WINPRINT DFPrintError906
72513>>>>>>>>
72513>>>>>>>        End
72513>>>>>>>>
72513>>>>>>>    End_Procedure
72514>>>>>>>
72514>>>>>>>
72514>>>>>>>    //***
72514>>>>>>>    Procedure DFSetUnderline boolean bUnderline
72516>>>>>>>        boolean bOk
72516>>>>>>>
72516>>>>>>>        Move (WP_SetFontUnderline(bUnderline)) To bOk
72517>>>>>>>
72517>>>>>>>        If not bOK Begin
72519>>>>>>>            Error DFERR_WINPRINT DFPrintError907
72520>>>>>>>>
72520>>>>>>>        End
72520>>>>>>>>
72520>>>>>>>    End_Procedure
72521>>>>>>>
72521>>>>>>>
72521>>>>>>>    //***
72521>>>>>>>    Procedure DFSetBold Boolean bBold
72523>>>>>>>        Boolean bOk
72523>>>>>>>
72523>>>>>>>        Move (WP_SetFontBold(bBold)) To bOk
72524>>>>>>>
72524>>>>>>>        If not bOK Begin
72526>>>>>>>            Error DFERR_WINPRINT DFPrintError908
72527>>>>>>>>
72527>>>>>>>        End
72527>>>>>>>>
72527>>>>>>>    End_Procedure
72528>>>>>>>
72528>>>>>>>
72528>>>>>>>    //***
72528>>>>>>>    Procedure DFSetItalic Boolean bItalic
72530>>>>>>>        Boolean bOk
72530>>>>>>>
72530>>>>>>>        Move (WP_SetFontItalic(bItalic)) To bOk
72531>>>>>>>
72531>>>>>>>        If not bOK Begin
72533>>>>>>>            Error DFERR_WINPRINT DFPrintError909
72534>>>>>>>>
72534>>>>>>>        End
72534>>>>>>>>
72534>>>>>>>    End_Procedure
72535>>>>>>>
72535>>>>>>>
72535>>>>>>>    //***
72535>>>>>>>    Procedure DFSetStrikeout Boolean bStrikeout
72537>>>>>>>        Boolean bOk
72537>>>>>>>
72537>>>>>>>        Move (WP_SetFontStrikeout(bStrikeout)) To bOk
72538>>>>>>>
72538>>>>>>>        If not bOK Begin
72540>>>>>>>            Error DFERR_WINPRINT DFPrintError910
72541>>>>>>>>
72541>>>>>>>        End
72541>>>>>>>>
72541>>>>>>>    End_Procedure
72542>>>>>>>
72542>>>>>>>
72542>>>>>>>    //***
72542>>>>>>>    Procedure DFSetMargins Number nLeft Number nTop Number nRight Number nBottom
72544>>>>>>>        Boolean bOk
72544>>>>>>>        integer iLeft iRight iTop iBottom
72544>>>>>>>
72544>>>>>>>        Move (nLeft   * 100) to iLeft
72545>>>>>>>        Move (nRight  * 100) to iRight
72546>>>>>>>        Move (nTop    * 100) to iTop
72547>>>>>>>        Move (nBottom * 100) to iBottom
72548>>>>>>>
72548>>>>>>>        Move (WP_SetMargins(iLeft,iTop,iRight,iBottom)) To bOk
72549>>>>>>>
72549>>>>>>>        If bOk Begin
72551>>>>>>>            Set DFLeft_Margin   To nLeft
72552>>>>>>>            Set DFTop_Margin    To nTop
72553>>>>>>>            Set DFRight_Margin  To nRight
72554>>>>>>>            Set DFBottom_Margin To nBottom
72555>>>>>>>        End
72555>>>>>>>>
72555>>>>>>>        Else Begin
72556>>>>>>>            Error DFERR_WINPRINT DFPrintError911
72557>>>>>>>>
72557>>>>>>>        End
72557>>>>>>>>
72557>>>>>>>    End_Procedure
72558>>>>>>>
72558>>>>>>>
72558>>>>>>>    //***
72558>>>>>>>    Procedure DFSetLeftMargin Number nLeft
72560>>>>>>>        number  nTop nRight nBottom
72560>>>>>>>        Get DFTop_Margin    To nTop
72561>>>>>>>        Get DFRight_Margin  To nRight
72562>>>>>>>        Get DFBottom_Margin To nBottom
72563>>>>>>>        Send DFSetMargins nLeft nTop nRight nBottom
72564>>>>>>>    End_Procedure
72565>>>>>>>
72565>>>>>>>
72565>>>>>>>    //***
72565>>>>>>>    Procedure DFSetRightMargin Number nRight
72567>>>>>>>        number  nLeft nTop nBottom
72567>>>>>>>        Get DFLeft_Margin   To nLeft
72568>>>>>>>        Get DFTop_Margin    To nTop
72569>>>>>>>        Get DFBottom_Margin To nBottom
72570>>>>>>>        Send DFSetMargins nLeft nTop nRight nBottom
72571>>>>>>>    End_Procedure
72572>>>>>>>
72572>>>>>>>
72572>>>>>>>    //***
72572>>>>>>>    Procedure DFSetTopMargin Number nTop
72574>>>>>>>        number  nLeft nRight nBottom
72574>>>>>>>        Get DFLeft_Margin   To nLeft
72575>>>>>>>        Get DFRight_Margin  To nRight
72576>>>>>>>        Get DFBottom_Margin To nBottom
72577>>>>>>>        Send DFSetMargins nLeft nTop nRight nBottom
72578>>>>>>>    End_Procedure
72579>>>>>>>
72579>>>>>>>
72579>>>>>>>    //***
72579>>>>>>>    Procedure DFSetBottomMargin Number nBottom
72581>>>>>>>        number  nLeft nTop nRight
72581>>>>>>>        Get DFLeft_Margin   To nLeft
72582>>>>>>>        Get DFTop_Margin    To nTop
72583>>>>>>>        Get DFRight_Margin  To nRight
72584>>>>>>>        Send DFSetMargins nLeft nTop nRight nBottom
72585>>>>>>>    End_Procedure
72586>>>>>>>
72586>>>>>>>
72586>>>>>>>    //***
72586>>>>>>>    Procedure DFWriteText String sText Integer iStyle Integer iColumn Integer iDecimal Boolean bNewLineAfterPrint
72588>>>>>>>        Boolean bOk
72588>>>>>>>
72588>>>>>>>        Send DFSetFontStyle iStyle
72589>>>>>>>        Get ToAnsi sText To sText
72590>>>>>>>        Move (WP_WriteText(sText,bNewLineAfterPrint,iColumn,iDecimal,0)) To bOk
72591>>>>>>>        If not bOk Begin
72593>>>>>>>            Error DFERR_WINPRINT DFPrintError918
72594>>>>>>>>
72594>>>>>>>        End
72594>>>>>>>>
72594>>>>>>>        Send PumpMsgQueue // permit painting //JJT!!!!!!!!!!!
72595>>>>>>>    End_Procedure
72596>>>>>>>
72596>>>>>>>    //***
72596>>>>>>>    Procedure DFWrite String sText DWORD iStyle Integer iColumn Integer iDecimal Boolean bTrim
72598>>>>>>>        If (Num_Arguments>=5 and bTrim) Begin
72600>>>>>>>            Move (Rtrim(sText)) to sText
72601>>>>>>>        end
72601>>>>>>>>
72601>>>>>>>        Send DFWriteText sText iStyle iColumn iDecimal False
72602>>>>>>>    End_Procedure
72603>>>>>>>
72603>>>>>>>    //***
72603>>>>>>>    Procedure DFWriteLn String sText DWORD iStyle Integer iColumn Integer iDecimal Boolean bTrim
72605>>>>>>>        If (Num_Arguments>=5 and bTrim) Begin
72607>>>>>>>            Move (Rtrim(sText)) to sText
72608>>>>>>>        end
72608>>>>>>>>
72608>>>>>>>        Send DFWriteText sText iStyle iColumn iDecimal True
72609>>>>>>>    End_Procedure
72610>>>>>>>
72610>>>>>>>
72610>>>>>>>    //***
72610>>>>>>>    Procedure DFWriteTextAtPosition String sText integer iStyle Number nPosition Integer iDecimal ;                                    Number nMaxLength Boolean bNewLineAfterPrint
72612>>>>>>>        Boolean bOk
72612>>>>>>>        Integer iPosition iMaxLength
72612>>>>>>>        Send DFSetFontStyle iStyle
72613>>>>>>>        Get ToAnsi sText To sText
72614>>>>>>>        Move (nPosition * 100) to iPosition
72615>>>>>>>        Move (nMaxLength * 100) to iMaxLength
72616>>>>>>>        Move (WP_WriteTextAtPosition(sText,bNewLineAfterPrint,iPosition,iDecimal,iMaxLength)) To bOk
72617>>>>>>>        If not bOk Begin
72619>>>>>>>            Error DFERR_WINPRINT DFPrintError922
72620>>>>>>>>
72620>>>>>>>        End
72620>>>>>>>>
72620>>>>>>>         Send PumpMsgQueue // permit painting //JJT!!!!!!!!!!!
72621>>>>>>>    End_Procedure
72622>>>>>>>
72622>>>>>>>    //***
72622>>>>>>>    Procedure DFWritePos String sText integer iStyle Number nPosition Integer iDecimal Number nMaxLength boolean bTrim
72624>>>>>>>        Number nMax
72624>>>>>>>        If (Num_Arguments>=6 and bTrim) Begin
72626>>>>>>>            Move (Rtrim(sText)) to sText
72627>>>>>>>        end
72627>>>>>>>>
72627>>>>>>>
72627>>>>>>>        If (Num_Arguments<5) ;            Move 0 to nMax
72630>>>>>>>        Else ;            Move nMaxLength to nMax
72632>>>>>>>        Send DFWriteTextAtPosition sText iStyle nPosition iDecimal nMax False
72633>>>>>>>    End_Procedure
72634>>>>>>>
72634>>>>>>>    //***
72634>>>>>>>    Procedure DFWriteLnPos String sText integer iStyle Number nPosition Integer iDecimal Number nMaxLength boolean bTrim
72636>>>>>>>        Number nMax
72636>>>>>>>        If (Num_Arguments>=6 and bTrim) Begin
72638>>>>>>>            Move (Rtrim(sText)) to sText
72639>>>>>>>        end
72639>>>>>>>>
72639>>>>>>>
72639>>>>>>>        If (Num_Arguments<5) ;            Move 0 to nMax
72642>>>>>>>        Else ;            Move nMaxLength to nMax
72644>>>>>>>        Send DFWriteTextAtPosition sText iStyle nPosition iDecimal nMax True
72645>>>>>>>    End_Procedure
72646>>>>>>>
72646>>>>>>>    Procedure DFSetMetrics String sMetrics
72648>>>>>>>        integer eMetrics
72648>>>>>>>        // for backwards compatibility support both string names and integer enumerations
72648>>>>>>>        // it is better to use the enumeration value
72648>>>>>>>        If (sMetrics="INCH" or sMetrics="CM") Begin
72650>>>>>>>            Set DFCurrent_Metrics to sMetrics
72651>>>>>>>        end
72651>>>>>>>>
72651>>>>>>>        else Begin
72652>>>>>>>            Move sMetrics to eMetrics
72653>>>>>>>            Move (WP_SetMetrics(eMetrics)) To eMetrics
72654>>>>>>>        End
72654>>>>>>>>
72654>>>>>>>    End_Procedure
72655>>>>>>>
72655>>>>>>>    Function DFGetMetrics Returns Integer
72657>>>>>>>        Integer eMetrics
72657>>>>>>>        Move (WP_GetMetrics()) To eMetrics
72658>>>>>>>        Function_return eMetrics
72659>>>>>>>    End_Function
72660>>>>>>>
72660>>>>>>>
72660>>>>>>>    //**** Properties Maintained for compatibility with old Winprint (obsolete)
72660>>>>>>>    Function DFCurrent_Metrics returns string
72662>>>>>>>        Integer eMetrics
72662>>>>>>>        Get DFGetMetrics to eMetrics
72663>>>>>>>        Function_return (if(eMetrics=WPM_INCH,"INCH","CM"))
72664>>>>>>>    end_function
72665>>>>>>>
72665>>>>>>>    Procedure Set DFCurrent_Metrics string sCMorINCH
72667>>>>>>>        Send DFSetMetrics (if(sCMorINCH="INCH", WPM_INCH, WPM_CM))
72668>>>>>>>    End_Procedure
72669>>>>>>>
72669>>>>>>>
72669>>>>>>>
72669>>>>>>>
72669>>>>>>>
72669>>>>>>>    //***
72669>>>>>>>    Procedure DFBeginHeaderType Integer iHeaderNr Integer eHeaderType
72671>>>>>>>        Boolean bOk
72671>>>>>>>
72671>>>>>>>        If (eHeaderType=DFSubHeader or eHeaderType=DFSubTotal) Begin
72673>>>>>>>            //*** Do nothing for the moment
72673>>>>>>>        End
72673>>>>>>>>
72673>>>>>>>        Else ;            Move 0 to iHeaderNr // If the user made a mistake
72675>>>>>>>
72675>>>>>>>        Set DFCurrent_HeaderType To eHeaderType
72676>>>>>>>        Set DFCurrent_HeaderNr   To iHeaderNr
72677>>>>>>>
72677>>>>>>>        Move (WP_BeginHeader(eHeaderType, iHeaderNr)) To bOk
72678>>>>>>>
72678>>>>>>>        If not bOk Begin
72680>>>>>>>            Error DFERR_WINPRINT DFPrintError925
72681>>>>>>>>
72681>>>>>>>        End
72681>>>>>>>>
72681>>>>>>>    End_Procedure
72682>>>>>>>
72682>>>>>>>
72682>>>>>>>    //***
72682>>>>>>>    Procedure DFEndHeaderType
72684>>>>>>>        Boolean bOk
72684>>>>>>>
72684>>>>>>>        Move (WP_EndHeader()) To bOk
72685>>>>>>>
72685>>>>>>>        if not bOk begin
72687>>>>>>>            Error DFERR_WINPRINT DFPrintError926
72688>>>>>>>>
72688>>>>>>>        End
72688>>>>>>>>
72688>>>>>>>    End_Procedure
72689>>>>>>>
72689>>>>>>>
72689>>>>>>>    //***
72689>>>>>>>    Procedure DFWriteHeaderType Integer iHeaderNr Integer eHeaderType
72691>>>>>>>        Boolean bOk
72691>>>>>>>        Move (WP_WriteHeader(eHeaderType, iHeaderNr)) To bOk
72692>>>>>>>        if not bOk begin
72694>>>>>>>            Error DFERR_WINPRINT DFPrintError927
72695>>>>>>>>
72695>>>>>>>        End
72695>>>>>>>>
72695>>>>>>>    End_Procedure
72696>>>>>>>
72696>>>>>>>
72696>>>>>>>    //***
72696>>>>>>>    Procedure DFHeaderPosition Integer ePlace
72698>>>>>>>        Boolean bOk
72698>>>>>>>
72698>>>>>>>         Move (WP_SetHeaderPlacement(ePlace)) To bOk
72699>>>>>>>
72699>>>>>>>         if not bOk begin
72701>>>>>>>            Error DFERR_WINPRINT DFPrintError929
72702>>>>>>>>
72702>>>>>>>        End
72702>>>>>>>>
72702>>>>>>>    End_Procedure
72703>>>>>>>
72703>>>>>>>
72703>>>>>>>    //***
72703>>>>>>>    Procedure DFHeaderFrameType Integer eFrame integer iColor Number nWeight;                                Integer iFillColor Boolean bFillFrame
72705>>>>>>>        Integer iWeight
72705>>>>>>>        Boolean bOk
72705>>>>>>>
72705>>>>>>>        move (nWeight*100) To iWeight
72706>>>>>>>
72706>>>>>>>        Move (WP_SetHeaderFrame(eFrame,iColor,iWeight,iFillColor,bFillFrame)) To bOk
72707>>>>>>>
72707>>>>>>>         if not bOk begin
72709>>>>>>>            Error DFERR_WINPRINT DFPrintError930
72710>>>>>>>>
72710>>>>>>>        End
72710>>>>>>>>
72710>>>>>>>    End_Procedure
72711>>>>>>>
72711>>>>>>>  Procedure DFHeaderMargin Integer eType Number nSize
72713>>>>>>>        Boolean bOk
72713>>>>>>>        Integer iSize
72713>>>>>>>
72713>>>>>>>        move (nSize * 100) to iSize
72714>>>>>>>
72714>>>>>>>        move (WP_SetHeaderMargin(eType, iSize)) To bOk
72715>>>>>>>
72715>>>>>>>        if not bOk begin
72717>>>>>>>            Error DFERR_WINPRINT DFPrintError930
72718>>>>>>>>
72718>>>>>>>        end
72718>>>>>>>>
72718>>>>>>>    End_Procedure
72719>>>>>>>
72719>>>>>>>
72719>>>>>>>    //***
72719>>>>>>>    Procedure DFHeaderWrap Integer eOnOff
72721>>>>>>>         Boolean bOk
72721>>>>>>>
72721>>>>>>>         Move (WP_SetHeaderWrap(eOnOff)) To bOk
72722>>>>>>>
72722>>>>>>>         if not bOk begin
72724>>>>>>>            Error DFERR_WINPRINT DFPrintError931
72725>>>>>>>>
72725>>>>>>>        End
72725>>>>>>>>
72725>>>>>>>    End_Procedure
72726>>>>>>>
72726>>>>>>>    //***
72726>>>>>>>    Procedure DFWriteBMP String sFileName Number nStartX Number nStartY Number nHeight Number nWidth Boolean bUCp
72728>>>>>>>        Boolean bOk
72728>>>>>>>        Integer iStartX iStartY iHeight iWidth
72728>>>>>>>
72728>>>>>>>        If ((nStartX = -998) or (nStartX = -999));            move nStartX to iStartX
72731>>>>>>>        else ;            move (nStartX*100) To iStartX
72733>>>>>>>
72733>>>>>>>        If ((nStartY = -998) or (nStartY = -999));            move nStartY to iStartY
72736>>>>>>>        else ;            move (nStartY*100) To iStartY
72738>>>>>>>
72738>>>>>>>        If ((nWidth = -998) or (nWidth = -999));            move nWidth To iWidth
72741>>>>>>>        else ;            move (nWidth*100) To iWidth
72743>>>>>>>
72743>>>>>>>        If ((nHeight = -998) or (nHeight = -999));            move nHeight To iHeight
72746>>>>>>>        else ;            move (nHeight*100) To iHeight
72748>>>>>>>
72748>>>>>>>        Get_File_Path sFileName To sFileName
72749>>>>>>>        Move (WP_DrawBitmap(sFileName,iStartX,iStartY,iWidth,iHeight,bUCp)) to bOk
72750>>>>>>>
72750>>>>>>>        If not bOk Begin
72752>>>>>>>            Error DFERR_WINPRINT DFPrintError932
72753>>>>>>>>
72753>>>>>>>        End
72753>>>>>>>>
72753>>>>>>>    End_Procedure
72754>>>>>>>
72754>>>>>>>
72754>>>>>>>    //***
72754>>>>>>>    Procedure DFHeaderLineCheck Integer iLines
72756>>>>>>>        Boolean bOk
72756>>>>>>>
72756>>>>>>>         Move (WP_SetExtraLineCheck(iLines)) To bOk
72757>>>>>>>
72757>>>>>>>        If not bOk begin
72759>>>>>>>            Error DFERR_WINPRINT DFPrintError934
72760>>>>>>>>
72760>>>>>>>        End
72760>>>>>>>>
72760>>>>>>>    End_Procedure
72761>>>>>>>
72761>>>>>>>
72761>>>>>>>    //***
72761>>>>>>>    Procedure DFPrintFlags Integer Flags
72763>>>>>>>        Boolean bOk
72763>>>>>>>
72763>>>>>>>         Move (WP_SetPrintDialogFlags(Flags)) To bOk
72764>>>>>>>
72764>>>>>>>        If not bOk begin
72766>>>>>>>            Error DFERR_WINPRINT DFPrintError935
72767>>>>>>>>
72767>>>>>>>        End
72767>>>>>>>>
72767>>>>>>>    End_Procedure
72768>>>>>>>
72768>>>>>>>
72768>>>>>>>    //*** obsolete and maintained for winprint-I backwards compatibility (maybe should be removed)
72768>>>>>>>    //
72768>>>>>>>    Procedure DFSelectPrinter String sDriver String sDevice String sPort Boolean bUpdate
72770>>>>>>>        Send DFSetDevice sDevice
72771>>>>>>>    End_Procedure
72772>>>>>>>
72772>>>>>>>    //*** Preferred usage for WinprintII
72772>>>>>>>    Procedure DFSetDevice String sDevice
72774>>>>>>>        Boolean bOk
72774>>>>>>>
72774>>>>>>>        Move (WP_SelectPrinter(sDevice)) To bOk
72775>>>>>>>
72775>>>>>>>        If not bOk Begin
72777>>>>>>>            Error DFERR_WINPRINT DFPrintError936
72778>>>>>>>>
72778>>>>>>>        End
72778>>>>>>>>
72778>>>>>>>    End_Procedure
72779>>>>>>>
72779>>>>>>>    Procedure DFPrinterBinFirstPage Integer eBin
72781>>>>>>>        Boolean bOk
72781>>>>>>>
72781>>>>>>>         Move (WP_SetFirstPagePaperSource(eBin)) To bOk
72782>>>>>>>
72782>>>>>>>        If not bOk Begin
72784>>>>>>>            Error DFERR_WINPRINT DFPrintError937
72785>>>>>>>>
72785>>>>>>>        End
72785>>>>>>>>
72785>>>>>>>    End_Procedure
72786>>>>>>>
72786>>>>>>>
72786>>>>>>>    //***
72786>>>>>>>    Function DFGetDFColor Integer iRed Integer iGreen Integer iBlue Returns Integer
72788>>>>>>>        Integer iColor
72788>>>>>>>
72788>>>>>>>         Move (WP_RGBToDFPrintColor(iRed,iGreen,iBlue)) To iColor
72789>>>>>>>
72789>>>>>>>        If (iColor=0) Begin
72791>>>>>>>            Error DFERR_WINPRINT DFPrintError938
72792>>>>>>>>
72792>>>>>>>        End
72792>>>>>>>>
72792>>>>>>>        Function_Return iColor
72793>>>>>>>    End_Function
72794>>>>>>>
72794>>>>>>>
72794>>>>>>>    //***
72794>>>>>>>    Procedure DFSetDFColor Dword dwColor
72796>>>>>>>        Integer bOk
72796>>>>>>>
72796>>>>>>>         Move (WP_SetFontColor(dwColor)) To bOk
72797>>>>>>>
72797>>>>>>>        If not bOk Begin
72799>>>>>>>            Error DFERR_WINPRINT DFPrintError939
72800>>>>>>>>
72800>>>>>>>        End
72800>>>>>>>>
72800>>>>>>>    End_Procedure
72801>>>>>>>
72801>>>>>>>
72801>>>>>>>    //***
72801>>>>>>>    Procedure DFSetTopBottom Number nTop Number nBottom Boolean bAllPages
72803>>>>>>>        Boolean bOk
72803>>>>>>>        Integer iTop iBottom
72803>>>>>>>
72803>>>>>>>        move (nTop*100)    To iTop
72804>>>>>>>        move (nBottom*100) To iBottom
72805>>>>>>>
72805>>>>>>>        Move (WP_SetAbsoluteMargins(iTop,iBottom,bAllPages)) To bOk
72806>>>>>>>
72806>>>>>>>        If Not bOk Begin
72808>>>>>>>            Error DFERR_WINPRINT DFPrintError940
72809>>>>>>>>
72809>>>>>>>        End
72809>>>>>>>>
72809>>>>>>>    End_Procedure
72810>>>>>>>
72810>>>>>>>
72810>>>>>>>    //***
72810>>>>>>>    Procedure DFSetJMode Integer eAlign
72812>>>>>>>        Boolean bOk
72812>>>>>>>
72812>>>>>>>        Move (WP_SetAlign(eAlign)) To bOk
72813>>>>>>>
72813>>>>>>>        If Not bOk Begin
72815>>>>>>>            Error DFERR_WINPRINT DFPrintError941
72816>>>>>>>>
72816>>>>>>>        End
72816>>>>>>>>
72816>>>>>>>    End_Procedure
72817>>>>>>>
72817>>>>>>>
72817>>>>>>>    //***
72817>>>>>>>    Procedure DFWriteEllip Number nStartX Number nStartY Number nHeight Number nWidth ;              Dword dwBColor Dword dwFColor Boolean bFill Number nWeight Boolean bWrap Boolean bUCp
72819>>>>>>>
72819>>>>>>>        Boolean bOk
72819>>>>>>>        Integer iWeight
72819>>>>>>>        Integer iStartX iStartY iHeight iWidth
72819>>>>>>>
72819>>>>>>>        If ((nStartX = -998) or (nStartX = -999));            move nStartX To iStartX
72822>>>>>>>        else ;            move (nStartX*100) To iStartX
72824>>>>>>>
72824>>>>>>>        If ((nStartY = -998) or (nStartY = -999));            move nStartY To iStartY
72827>>>>>>>        else ;            move (nStartY*100) To iStartY
72829>>>>>>>
72829>>>>>>>        If ((nWidth = -998) or (nWidth = -999));            move nWidth To iWidth
72832>>>>>>>        else ;            move (nWidth*100) To iWidth
72834>>>>>>>
72834>>>>>>>        If ((nHeight = -998) or (nHeight = -999));            move nHeight To iHeight
72837>>>>>>>        else ;            move (nHeight*100) To iHeight
72839>>>>>>>
72839>>>>>>>        move (nWeight*100) To iWeight
72840>>>>>>>
72840>>>>>>>
72840>>>>>>>        Move (WP_DrawEllipse(iStartX,iStartY,iWidth,iHeight,;                        dwBColor,dwFColor,bFill,iWeight,bUCp,bWrap)) To bOk
72841>>>>>>>
72841>>>>>>>        If Not bOk Begin
72843>>>>>>>            Error DFERR_WINPRINT DFPrintError942
72844>>>>>>>>
72844>>>>>>>        End
72844>>>>>>>>
72844>>>>>>>    End_Procedure
72845>>>>>>>
72845>>>>>>>
72845>>>>>>>
72845>>>>>>>
72845>>>>>>>    //***
72845>>>>>>>    Procedure DFWriteRect Number nStartX Number nStartY Number nHeight Number nWidth;              Dword dwBColor Dword dwFColor Boolean bFill Number nWeight Boolean bWrap Boolean bUCp
72847>>>>>>>
72847>>>>>>>        Boolean bOk
72847>>>>>>>        Integer iWeight
72847>>>>>>>        Integer iStartX iStartY iHeight iWidth
72847>>>>>>>
72847>>>>>>>        If ((nStartX = -998) or (nStartX = -999));            move nStartX To iStartX
72850>>>>>>>        else ;            move (nStartX*100) To iStartX
72852>>>>>>>
72852>>>>>>>        If ((nStartY = -998) or (nStartY = -999));            move nStartY To iStartY
72855>>>>>>>        else ;            move (nStartY*100) To iStartY
72857>>>>>>>
72857>>>>>>>        If ((nWidth = -998) or (nWidth = -999));            move nWidth To iWidth
72860>>>>>>>        else ;            move (nWidth*100) To iWidth
72862>>>>>>>
72862>>>>>>>        If ((nHeight = -998) or (nHeight = -999));            move nHeight To iHeight
72865>>>>>>>        else ;            move (nHeight*100) To iHeight
72867>>>>>>>
72867>>>>>>>        move (nWeight*100) To iWeight
72868>>>>>>>
72868>>>>>>>        Move (WP_DrawRectangle(iStartX,iStartY,iWidth,iHeight,;                            dwBColor,dwFColor,bFill,iWeight,bUCp,bWrap)) To bOk
72869>>>>>>>
72869>>>>>>>        If Not bOk Begin
72871>>>>>>>            Error DFERR_WINPRINT DFPrintError944
72872>>>>>>>>
72872>>>>>>>        End
72872>>>>>>>>
72872>>>>>>>    End_Procedure
72873>>>>>>>
72873>>>>>>>
72873>>>>>>>
72873>>>>>>>
72873>>>>>>>    //***
72873>>>>>>>    Procedure DFLineCheck Integer iLines
72875>>>>>>>        Boolean bOk
72875>>>>>>>
72875>>>>>>>        Move (WP_ConfirmLines(iLines)) To bOk
72876>>>>>>>
72876>>>>>>>        If Not bOk Begin
72878>>>>>>>            Error DFERR_WINPRINT DFPrintError946
72879>>>>>>>>
72879>>>>>>>        End
72879>>>>>>>>
72879>>>>>>>    End_Procedure
72880>>>>>>>
72880>>>>>>>
72880>>>>>>>    //***
72880>>>>>>>    Procedure DFCreateDiagram Integer eType Integer eFx Number nHeight Number nWidth Integer bXyAxis
72882>>>>>>>        Handle hDiagram
72882>>>>>>>        Integer iWidth iHeight
72882>>>>>>>
72882>>>>>>>        move (nHeight*100) To iHeight
72883>>>>>>>        move (nWidth*100)  To iWidth
72884>>>>>>>
72884>>>>>>>        Set DFCurrent_Color To 0
72885>>>>>>>
72885>>>>>>>        Move (WP_CreateDiagram(eType,eFx,iWidth,iHeight,bXyAxis)) To hDiagram
72886>>>>>>>
72886>>>>>>>        If (hDiagram) Begin
72888>>>>>>>            Error DFERR_WINPRINT DFPrintError947
72889>>>>>>>>
72889>>>>>>>        End
72889>>>>>>>>
72889>>>>>>>        Else Begin
72890>>>>>>>            Set DFCurrent_Diagram To hDiagram
72891>>>>>>>        end
72891>>>>>>>>
72891>>>>>>>    End_Procedure
72892>>>>>>>
72892>>>>>>>
72892>>>>>>>    //***
72892>>>>>>>    Procedure DFDiagram_Item handle hDiagram String sLabel Number nValue;                             Dword dwBColor Dword dwFColor Integer eFill;                             Integer iDec Integer eValueOrPercent Integer eExt
72894>>>>>>>
72894>>>>>>>        Boolean bOk
72894>>>>>>>        Integer iCurrColor iValue
72894>>>>>>>
72894>>>>>>>        If (dwFColor = -1) Begin
72896>>>>>>>            Get DFCurrent_Color To iCurrColor
72897>>>>>>>            Increment iCurrColor
72898>>>>>>>            If (iCurrColor>15) Move 1 To iCurrColor
72901>>>>>>>            Set DFCurrent_Color To iCurrColor
72902>>>>>>>            Get DFGetColor iCurrColor To dwFColor
72903>>>>>>>        End
72903>>>>>>>>
72903>>>>>>>
72903>>>>>>>        Move (nValue *100) to iValue
72904>>>>>>>
72904>>>>>>>        Get ToAnsi sLabel To sLabel
72905>>>>>>>
72905>>>>>>>        Move (WP_AddDiagramEntry(hDiagram,sLabel,iValue,dwBColor,dwFColor,eFill,iDec,eValueorPercent,eExt)) To bOk
72906>>>>>>>
72906>>>>>>>        If not bOk Begin
72908>>>>>>>            Error DFERR_WINPRINT DFPrintError948
72909>>>>>>>>
72909>>>>>>>        End
72909>>>>>>>>
72909>>>>>>>    End_Procedure
72910>>>>>>>
72910>>>>>>>
72910>>>>>>>    //***
72910>>>>>>>    Procedure DFLockDiagram Handle hDiagram
72912>>>>>>>        Boolean bOk
72912>>>>>>>
72912>>>>>>>        Move (WP_LockDiagram(hDiagram)) To bOk
72913>>>>>>>
72913>>>>>>>        If not bOk Begin
72915>>>>>>>            Error DFERR_WINPRINT DFPrintError949
72916>>>>>>>>
72916>>>>>>>        End
72916>>>>>>>>
72916>>>>>>>    End_Procedure
72917>>>>>>>
72917>>>>>>>
72917>>>>>>>
72917>>>>>>>    //***
72917>>>>>>>    Procedure DFDrawDiagram Handle hDiagram Number nYPos Number nXPos Boolean bUCp
72919>>>>>>>        Boolean bOk
72919>>>>>>>        Integer iXPos
72919>>>>>>>        Integer iYPos
72919>>>>>>>
72919>>>>>>>        move (nXPos*100) To iXPos
72920>>>>>>>        move (nYPos*100) To iYPos
72921>>>>>>>
72921>>>>>>>        If nYPos Eq -999 Move -999 To iYPos
72924>>>>>>>
72924>>>>>>>        Move (WP_DrawDiagram(hDiagram,iXPos,iYPos,bUCp)) To bOk
72925>>>>>>>
72925>>>>>>>        If not bOk Begin
72927>>>>>>>            Error DFERR_WINPRINT DFPrintError950
72928>>>>>>>>
72928>>>>>>>        End
72928>>>>>>>>
72928>>>>>>>    End_Procedure
72929>>>>>>>
72929>>>>>>>
72929>>>>>>>
72929>>>>>>>    //***
72929>>>>>>>    Procedure DFDiagramLabel handle hDiagram String sLabel
72931>>>>>>>        Boolean bOk
72931>>>>>>>        Integer iLabelLen
72931>>>>>>>
72931>>>>>>>        Get ToAnsi sLabel To sLabel
72932>>>>>>>
72932>>>>>>>        Move (WP_SetDiagramCaption(hDiagram,sLabel)) To bOk
72933>>>>>>>
72933>>>>>>>        if not bOk Begin
72935>>>>>>>            Error DFERR_WINPRINT DFPrintError952
72936>>>>>>>>
72936>>>>>>>        End
72936>>>>>>>>
72936>>>>>>>    End_Procedure
72937>>>>>>>
72937>>>>>>>
72937>>>>>>>    //***
72937>>>>>>>    Procedure DFDiagramXLabel handle hDiagram String sLabel
72939>>>>>>>        Boolean bOk
72939>>>>>>>        Get ToAnsi sLabel To sLabel
72940>>>>>>>
72940>>>>>>>        Move (WP_SetDiagramXText(hDiagram,sLabel)) To bOk
72941>>>>>>>
72941>>>>>>>        if not bOk Begin
72943>>>>>>>            Error DFERR_WINPRINT DFPrintError953
72944>>>>>>>>
72944>>>>>>>        End
72944>>>>>>>>
72944>>>>>>>    End_Procedure
72945>>>>>>>
72945>>>>>>>
72945>>>>>>>    //***
72945>>>>>>>    Procedure DFDiagramYLabel handle hDiagram String sLabel Boolean bVertical
72947>>>>>>>        Boolean bOk
72947>>>>>>>        Get ToAnsi sLabel To sLabel
72948>>>>>>>
72948>>>>>>>        Move (WP_SetDiagramYText(hDiagram,sLabel,bVertical)) To bOk
72949>>>>>>>
72949>>>>>>>        if not bOk Begin
72951>>>>>>>            Error DFERR_WINPRINT DFPrintError954
72952>>>>>>>>
72952>>>>>>>        End
72952>>>>>>>>
72952>>>>>>>    End_Procedure
72953>>>>>>>
72953>>>>>>>
72953>>>>>>>    //***
72953>>>>>>>    Procedure DFWriteXYLine Number nStartX Number nStartY Number nStopX Number nStopY;              Dword dwColor Number nWeight Boolean bWrap Boolean bUCp
72955>>>>>>>
72955>>>>>>>        Boolean bOk
72955>>>>>>>        Integer iStartX iStartY iStopX iStopY
72955>>>>>>>        Integer iWeight
72955>>>>>>>
72955>>>>>>>        move (nStartX*100)  To iStartX
72956>>>>>>>        move (nStartY*100)  To iStartY
72957>>>>>>>        move (nStopX*100)   To iStopX
72958>>>>>>>        move (nStopY*100)   To iStopY
72959>>>>>>>
72959>>>>>>>        move (nWeight*100) To iWeight
72960>>>>>>>
72960>>>>>>>        If (nStopY  = -998) Move -998 To iStopY
72963>>>>>>>        If (nStopX  = -998) Move -998 To iStopX
72966>>>>>>>
72966>>>>>>>        If (nStartY  = -999) Move -999 To iStartY
72969>>>>>>>        If (nStartX  = -999) Move -999 To iStartX
72972>>>>>>>
72972>>>>>>>        Move (WP_DrawXYLine(iStartX,iStartY,iStopX,iStopY,dwColor,iWeight,bUCp,bWrap)) To bOk
72973>>>>>>>
72973>>>>>>>        if not bOk Begin
72975>>>>>>>            Error DFERR_WINPRINT DFPrintError955
72976>>>>>>>>
72976>>>>>>>        End
72976>>>>>>>>
72976>>>>>>>    End_Procedure
72977>>>>>>>
72977>>>>>>>
72977>>>>>>>    //***
72977>>>>>>>    Procedure DFWriteLine Number nStartX Number nStartY Number nLength;                          Boolean bHorizontal Dword dwColor Number nWeight Boolean bUCp
72979>>>>>>>
72979>>>>>>>        Boolean bOk
72979>>>>>>>        Integer iStartX iStartY iLength
72979>>>>>>>        Integer iWeight
72979>>>>>>>
72979>>>>>>>        move (nStartX*100)  To iStartX
72980>>>>>>>        move (nStartY*100)  To iStartY
72981>>>>>>>        move (nLength*100)  To iLength
72982>>>>>>>        move (nWeight*100)  To iWeight
72983>>>>>>>
72983>>>>>>>        If (nStartY = -999) Move -999 To iStartY
72986>>>>>>>        If (nStartX = -999) Move -999 To iStartX
72989>>>>>>>        If (nLength = -998) Move -998 To iLength
72992>>>>>>>
72992>>>>>>>        Move (WP_DrawLine(iSTartX,iStartY,iLength,bHorizontal,dwColor,iWeight,bUCp)) To bOk
72993>>>>>>>
72993>>>>>>>        if not bOk Begin
72995>>>>>>>            Error DFERR_WINPRINT DFPrintError956
72996>>>>>>>>
72996>>>>>>>        End
72996>>>>>>>>
72996>>>>>>>    End_Procedure
72997>>>>>>>
72997>>>>>>>
72997>>>>>>>    //***
72997>>>>>>>    Procedure DFClearPrinter
72999>>>>>>>        Boolean bOk
72999>>>>>>>
72999>>>>>>>        Move (WP_ClearPrinter()) To bOk
73000>>>>>>>
73000>>>>>>>        If not bOk Begin
73002>>>>>>>            Error DFERR_WINPRINT DFPrintError957
73003>>>>>>>>
73003>>>>>>>        End
73003>>>>>>>>
73003>>>>>>>    End_Procedure
73004>>>>>>>
73004>>>>>>>
73004>>>>>>>
73004>>>>>>>    //***
73004>>>>>>>     Function DFGetCurrentDevice Returns String
73006>>>>>>>        Boolean bOk
73006>>>>>>>        String  sDFStr
73006>>>>>>>        Address pDFStr
73006>>>>>>>
73006>>>>>>>        Move (Repeat( Character(0), 255 )) to sDFStr
73007>>>>>>>        GetAddress of sDFStr to pDFStr
73008>>>>>>>
73008>>>>>>>        Move (WP_GetCurrentDevice(pDFStr)) To bOk
73009>>>>>>>
73009>>>>>>>        If not bOk Begin
73011>>>>>>>            Error DFERR_WINPRINT DFPrintError959
73012>>>>>>>>
73012>>>>>>>        End
73012>>>>>>>>
73012>>>>>>>
73012>>>>>>>        Move (CString(sDFStr)) To sDFStr
73013>>>>>>>        Function_Return sDFStr
73014>>>>>>>     End_Function
73015>>>>>>>
73015>>>>>>>
73015>>>>>>>    // Note: DfGetCurrentPort and DFGetCurrentDriver do not exist in winprint2. Trying to
73015>>>>>>>    //       use these will result in a runtime error (which is good - don't use them)
73015>>>>>>>
73015>>>>>>>
73015>>>>>>>    //***
73015>>>>>>>     Function DFGetPrintDialogFlags Returns Dword
73017>>>>>>>        Dword dwRetVal
73017>>>>>>>
73017>>>>>>>        Move (WP_GetPrintDialogFlags()) To dwRetVal
73018>>>>>>>
73018>>>>>>>        Function_Return dwRetVal
73019>>>>>>>     End_Function
73020>>>>>>>
73020>>>>>>>
73020>>>>>>>    //***
73020>>>>>>>    //*** Returns PRN_TRUE=  if the flag is set     (1)
73020>>>>>>>    //*** Returns PRN_FALSE= If the flag not is set (0)
73020>>>>>>>    //***
73020>>>>>>>     Function DFCheckPrintDialogFlag Dword dwPDFlag Returns Boolean
73022>>>>>>>        Boolean bIsSet
73022>>>>>>>
73022>>>>>>>        Move (WP_IsPrintDialogFlagSet(dwPDFlag)) To bIsSet
73023>>>>>>>
73023>>>>>>>        Function_Return bIsSet
73024>>>>>>>     End_Function
73025>>>>>>>
73025>>>>>>>
73025>>>>>>>    //***
73025>>>>>>>     Procedure DFSetSpecPrintFlag Dword dwPDFlag
73027>>>>>>>        Boolean bOk
73027>>>>>>>
73027>>>>>>>        Move (WP_SetSpecificPrintDialogFlag(dwPDFlag)) To bOk
73028>>>>>>>
73028>>>>>>>        If not bOk Begin
73030>>>>>>>            Error DFERR_WINPRINT DFPrintError961
73031>>>>>>>>
73031>>>>>>>        End
73031>>>>>>>>
73031>>>>>>>     End_Procedure
73032>>>>>>>
73032>>>>>>>
73032>>>>>>>    //***
73032>>>>>>>     Function DFGetUserDefinedLength Returns Number
73034>>>>>>>        Integer iRetVal
73034>>>>>>>        Number  nRetVal
73034>>>>>>>
73034>>>>>>>        Move (WP_GetUserDefinedPapersize()) To iRetVal
73035>>>>>>>
73035>>>>>>>        If (iRetVal=0) Begin
73037>>>>>>>            Error DFERR_WINPRINT DFPrintError962
73038>>>>>>>>
73038>>>>>>>            Function_Return 0
73039>>>>>>>        End
73039>>>>>>>>
73039>>>>>>>
73039>>>>>>>        Move (Hi(iRetVal)) To nRetVal
73040>>>>>>>        move (nRetVal/100) To nRetVal //Returns CM
73041>>>>>>>
73041>>>>>>>        Function_Return nRetVal
73042>>>>>>>     End_Function
73043>>>>>>>
73043>>>>>>>
73043>>>>>>>    //***
73043>>>>>>>     Function DFGetUserDefinedWidth Returns Number
73045>>>>>>>        Integer iRetVal
73045>>>>>>>        Number  nRetVal
73045>>>>>>>
73045>>>>>>>        Move (WP_GetUserDefinedPapersize()) To iRetVal
73046>>>>>>>
73046>>>>>>>        If (iRetVal=0) Begin
73048>>>>>>>            Error DFERR_WINPRINT DFPrintError963
73049>>>>>>>>
73049>>>>>>>            Function_Return 0
73050>>>>>>>        End
73050>>>>>>>>
73050>>>>>>>
73050>>>>>>>        Move (Low(iRetVal)) To nRetVal
73051>>>>>>>        Move (nRetVal/100) To nRetVal //Returns CM
73052>>>>>>>
73052>>>>>>>        Function_Return nRetVal
73053>>>>>>>     End_Function
73054>>>>>>>
73054>>>>>>>
73054>>>>>>>    //*** To be set in CM
73054>>>>>>>     Procedure DFSetUserDefinedPapersize Number nLength Number nWidth
73056>>>>>>>        Integer bOk
73056>>>>>>>        Integer iLength iWidth iSize
73056>>>>>>>
73056>>>>>>>        move (nLength*100) To iLength
73057>>>>>>>        move (nWidth*100)  To iWidth
73058>>>>>>>        move ((iLength*65536)+iWidth) To iSize
73059>>>>>>>
73059>>>>>>>        Move (WP_SetUserDefinedPapersize(iSize)) To bOk
73060>>>>>>>
73060>>>>>>>        If not bOk Begin
73062>>>>>>>            Error DFERR_WINPRINT DFPrintError964
73063>>>>>>>>
73063>>>>>>>        End
73063>>>>>>>>
73063>>>>>>>     End_Procedure
73064>>>>>>>
73064>>>>>>>     Procedure DFSetNumberOfCopies Integer iNrOfCopies
73066>>>>>>>        Boolean bOk
73066>>>>>>>
73066>>>>>>>        Move (WP_SetNumberOfPrintCopies(iNrOfCopies)) to bOk
73067>>>>>>>
73067>>>>>>>        If not bOk Begin
73069>>>>>>>            Error DFERR_WINPRINT DFPrintError965
73070>>>>>>>>
73070>>>>>>>        end
73070>>>>>>>>
73070>>>>>>>     End_Procedure
73071>>>>>>>
73071>>>>>>>
73071>>>>>>>
73071>>>>>>>
73071>>>>>>>    //*************************************************************
73071>>>>>>>    //*** This procedures and functions are used when building  ***
73071>>>>>>>    //*** complex graphics when you need to change value of the ***
73071>>>>>>>    //*** current diagram, so you can mix diagrams within each  ***
73071>>>>>>>    //*** other.                                                ***
73071>>>>>>>    //*************************************************************
73071>>>>>>>
73071>>>>>>>
73071>>>>>>>    Function DFGetCurrentDiagram Returns Integer
73073>>>>>>>        Integer iRetVal
73073>>>>>>>        Get DFCurrent_Diagram To iRetVal
73074>>>>>>>        Function_Return iRetVal
73075>>>>>>>    End_Function
73076>>>>>>>
73076>>>>>>>    Procedure DFSetCurrentDiagram Integer iDiagram
73078>>>>>>>        Set DFCurrent_Diagram To iDiagram
73079>>>>>>>    End_Procedure
73080>>>>>>>
73080>>>>>>>    Procedure DFSetDiagramList Integer iItem Integer iDiagram
73082>>>>>>>        Set Value of oDiagramArray iItem To iDiagram
73083>>>>>>>    End_Procedure
73084>>>>>>>
73084>>>>>>>    Function DFGetDiagramList Integer iItem Returns Integer
73086>>>>>>>        Integer iRetVal
73086>>>>>>>        Get Value of oDiagramArray iItem To iRetVal
73087>>>>>>>        Function_Return iRetVal
73088>>>>>>>    End_Function
73089>>>>>>>
73089>>>>>>>    Procedure DFClearDiagramList
73091>>>>>>>        Send Delete_Data To oDiagramArray
73092>>>>>>>    End_Procedure
73093>>>>>>>
73093>>>>>>>
73093>>>>>>>    Function DFGetColor Integer iColor Returns Dword
73095>>>>>>>        Dword   dwRetVal
73095>>>>>>>        Get Value of oDFColorArray iColor To dwRetVal
73096>>>>>>>        Function_Return dwRetVal
73097>>>>>>>    End_Function
73098>>>>>>>
73098>>>>>>>    Function DFGetCurrentColor Returns Dword
73100>>>>>>>        Dword   dwRetVal
73100>>>>>>>        Integer iCurrColor
73100>>>>>>>
73100>>>>>>>        Get DFCurrent_Color To iCurrColor
73101>>>>>>>        Get DFGetColor iCurrColor To dwRetVal
73102>>>>>>>
73102>>>>>>>        Function_Return dwRetVal
73103>>>>>>>    End_Function
73104>>>>>>>
73104>>>>>>>    Procedure DFEndDocument
73106>>>>>>>        integer iVoid
73106>>>>>>>        Move (WP_EndDocument()) To iVoid
73107>>>>>>>        Send DfSuspendGui False
73108>>>>>>>    End_procedure
73109>>>>>>>
73109>>>>>>>    Procedure DFClosePreview
73111>>>>>>>        integer iVoid
73111>>>>>>>        Move (WP_ClosePreview()) To iVoid
73112>>>>>>>        Send DfSuspendGui False
73113>>>>>>>    End_procedure
73114>>>>>>>
73114>>>>>>>    Procedure SetProgressCaption string sCaption
73116>>>>>>>        integer iVoid
73116>>>>>>>        Move (ToAnsi(sCaption)) to sCaption
73117>>>>>>>        Move (WP_SetProgressCaption(sCaption)) To iVoid
73118>>>>>>>    End_procedure
73119>>>>>>>
73119>>>>>>>    Procedure SetReportTitle string sTitle
73121>>>>>>>        integer iVoid
73121>>>>>>>        Move (ToAnsi(sTitle)) to sTitle
73122>>>>>>>        Move (WP_SetReportTitle(sTitle)) To iVoid
73123>>>>>>>    End_procedure
73124>>>>>>>
73124>>>>>>>    Function PreviewYesNoBox string sCaption string sText returns integer
73126>>>>>>>        integer eResult
73126>>>>>>>        Move (ToAnsi(sCaption)) to sCaption
73127>>>>>>>        Move (ToAnsi(sText))    to sText
73128>>>>>>>        Move (WP_DisplayMessageBox(sCaption, sText)) To eResult
73129>>>>>>>        Function_return eResult
73130>>>>>>>    end_function
73131>>>>>>>
73131>>>>>>>    // internal function, used to extract different printer flags ranges based on
73131>>>>>>>    // the print flag integer. These flags use a decimal style of packing information
73131>>>>>>>    // where different printer options (paper, bin, etc) use different ranges and
73131>>>>>>>    // different steps. Everything above iTopVal is removed and everything that is not
73131>>>>>>>    // within the iStep range is removed.
73131>>>>>>>    Function PrintFlagRange integer iTopVal integer iStep returns integer
73133>>>>>>>        integer iFgs iFg
73133>>>>>>>        Get DFGetPrintDialogFlags to iFg
73134>>>>>>>        Move (mod(iFg,iTopVal) / iStep * iStep ) to iFg
73135>>>>>>>        function_return iFg
73136>>>>>>>    end_Function
73137>>>>>>>
73137>>>>>>>    Procedure DFSetPrinterPaper integer ePaperType
73139>>>>>>>        Send DFSetSpecPrintFlag ePaperType
73140>>>>>>>    End_Procedure
73141>>>>>>>
73141>>>>>>>    Function DFGetPrinterPaper returns integer //ePaperType
73143>>>>>>>        integer ePaperType
73143>>>>>>>        Get PrintFlagRange 500 10 to ePaperType // 10-490 in steps of 10
73144>>>>>>>        function_return ePaperType
73145>>>>>>>    End_Function
73146>>>>>>>
73146>>>>>>>
73146>>>>>>>    Procedure DFSetPrinterBin integer eBinType
73148>>>>>>>        Send DFSetSpecPrintFlag eBinType
73149>>>>>>>    End_Procedure
73150>>>>>>>
73150>>>>>>>    Function DFGetPrinterBin returns integer //eBinType
73152>>>>>>>        integer eBinType
73152>>>>>>>        Get PrintFlagRange 10000 500 to eBinType // 1000-9000 steps 500
73153>>>>>>>        function_return eBinType
73154>>>>>>>    End_Function
73155>>>>>>>
73155>>>>>>>
73155>>>>>>>    Procedure DFSetPrinterResolution integer eResType
73157>>>>>>>        Send DFSetSpecPrintFlag eResType
73158>>>>>>>    End_Procedure
73159>>>>>>>
73159>>>>>>>    Function DFGetPrinterResolution returns integer //eResType
73161>>>>>>>        integer eResType
73161>>>>>>>        Get PrintFlagRange 50000 10000 to eResType // 10000-500000 steps 10000
73162>>>>>>>        function_return eResType
73163>>>>>>>    End_Function
73164>>>>>>>
73164>>>>>>>
73164>>>>>>>    Procedure DFSetLandscape boolean bIsLandscape
73166>>>>>>>        Send DFSetSpecPrintFlag (If(bIsLandscape,DF_Landscape,DF_Portrait))
73167>>>>>>>    End_Procedure
73168>>>>>>>
73168>>>>>>>    Function DFGetLandscape returns boolean // bIsLandscape
73170>>>>>>>        boolean bIsLandscape
73170>>>>>>>        Get DFCheckPrintDialogFlag DF_Landscape to bIsLandscape
73171>>>>>>>        function_return bIsLandscape
73172>>>>>>>    End_Function
73173>>>>>>>
73173>>>>>>>    Function RGBToWPColor integer iRgb returns integer
73175>>>>>>>        integer iRed iGreen iBlue
73175>>>>>>>        integer iWPColor
73175>>>>>>>        Move (R_from_rgb(iRGB)) to iRed
73176>>>>>>>        Move (G_from_rgb(iRGB)) to iGreen
73177>>>>>>>        Move (B_from_rgb(iRGB)) to iBlue
73178>>>>>>>        Get DfGetDfColor iRed iGreen iBlue to iWPColor
73179>>>>>>>        function_Return iWPColor
73180>>>>>>>    end_function
73181>>>>>>>
73181>>>>>>>
73181>>>>>>>
73181>>>>>>>End_Class
73182>>>>>>>
73182>>>>>>>Global_Variable Integer ghoWinPrint2
73182>>>>>>>
73182>>>>>>>Get Create of desktop U_cWinPrint2 to ghoWinPrint2
73183>>>>>>>
73183>>>>>>>
73183>>>>>Use Winprint_Commands.pkg  // commands used by this class
73183>>>>>
73183>>>>>Class cWinReport2 is a BasicReport
73184>>>>>
73184>>>>>    Procedure Construct_Object
73186>>>>>        Forward send construct_object
73188>>>>>
73188>>>>>        Date Today
73188>>>>>        Sysdate Today
73189>>>>>
73189>>>>>        // should use built in DF function CurrentDateTime()
73189>>>>>        Property Date  RptToday    Today
73190>>>>>
73190>>>>>        Object RptTotal is an Array
73192>>>>>        End_Object
73193>>>>>
73193>>>>>        // If true, report is output upon completion. Either preview
73193>>>>>        // or printer depending on output_device_mode
73193>>>>>        Property Boolean AutoOutput_State True
73194>>>>>
73194>>>>>        // When a new page is created (DFNew_Page) and the number
73194>>>>>        // of columns is not passed, this is used.
73194>>>>>        Property Integer Print_Columns 0
73195>>>>>
73195>>>>>        // This determines if a DFNew_Page should be executed when the
73195>>>>>        // report starts. In some rare cases, you would not want this to
73195>>>>>        // occur until a subheader
73195>>>>>        Property Boolean AutoNew_Page_State True
73196>>>>>
73196>>>>>        // Output device (print or preview). Normally this is delegated to
73196>>>>>        // the report view.
73196>>>>>        //
73196>>>>>
73196>>>>>        Property Integer Private.Output_Device_Mode PRINT_TO_UNDEFINED
73197>>>>>
73197>>>>>        Property Handle phoWinPrint  ghoWinPrint2 // the report engine to use.
73198>>>>>
73198>>>>>        // JJT: For now this is for testing.
73198>>>>>        Property boolean pbModalViewer False
73199>>>>>
73199>>>>>        Property boolean pbMultiReports False
73200>>>>>
73200>>>>>        Property boolean pbFirstPagePrinted false
73201>>>>>
73201>>>>>    End_Procedure
73202>>>>>
73202>>>>>    // returns the current status of Winprint Document object. dsNotStarted, dsStarted, dsFinished
73202>>>>>    // note that the status can reflect a status from a different report. The winprint object is global.
73202>>>>>    Function DocumentStatus returns Boolean
73204>>>>>        integer iStatus
73204>>>>>        Get DocumentStatus of (phoWinprint(self)) to iStatus
73205>>>>>        function_return iStatus
73206>>>>>    End_function
73207>>>>>
73207>>>>>    Function IsViewerActive Returns Boolean
73209>>>>>        Boolean bIsActive
73209>>>>>        Get IsViewerActive of (phoWinPrint(Self)) to bIsActive
73210>>>>>        Function_Return bIsActive
73211>>>>>    End_Function
73212>>>>>
73212>>>>>    Function IsPrinterValid Returns Boolean
73214>>>>>        Function_Return (WP_IsPrinterValid()<>0)
73215>>>>>    End_Function
73216>>>>>
73216>>>>>    Function ArePrintersInstalled Returns Boolean
73218>>>>>        Function_Return (WP_ArePrintersInstalled()<>0)
73219>>>>>    End_Function
73220>>>>>
73220>>>>>
73220>>>>>    // All subtotal commands use the outer main report. This makes it easier to keep
73220>>>>>    // track of these numbers
73220>>>>>
73220>>>>>    Procedure Add_SubTotal Integer iCounter Number nData
73222>>>>>        Number nValue
73222>>>>>        Integer iObj
73222>>>>>        Move (RptTotal(Main_Report_Id(Self))) to iObj
73223>>>>>        Get Number_Value of iObj iCounter To nValue
73224>>>>>        Add nData To nValue
73225>>>>>        Set Array_Value of iObj iCounter To nValue
73226>>>>>    End_Procedure
73227>>>>>
73227>>>>>    Procedure Clr_SubTotal Integer iCounter
73229>>>>>        Set Array_Value of (RptTotal(Main_Report_Id(Self))) iCounter To 0
73230>>>>>    End_Procedure
73231>>>>>
73231>>>>>    Procedure Clr_AllSubTotals
73233>>>>>        Send Delete_Data of (RptTotal(Main_Report_Id(Self)))
73234>>>>>    End_Procedure
73235>>>>>
73235>>>>>    Function Sum_SubTotal Integer iTotal Returns Number
73237>>>>>        Number nRetVal
73237>>>>>        Get Number_Value of (RptTotal(Main_Report_Id(Self))) iTotal To nRetVal
73238>>>>>        Function_Return nRetVal
73239>>>>>    End_Function
73240>>>>>
73240>>>>>    //Return sub-total and clear accumulator
73240>>>>>    //
73240>>>>>    Function SubTotal Integer iTotal Returns Number
73242>>>>>        Number nRetVal
73242>>>>>        Get Sum_SubTotal  iTotal to nRetVal
73243>>>>>        Send Clr_SubTotal iTotal
73244>>>>>        Function_Return nRetVal
73245>>>>>    End_Function
73246>>>>>
73246>>>>>
73246>>>>>    // Note: Cols is optional. If no argument is passed it will use
73246>>>>>    //       the object's property Print_Columns (0 by default)
73246>>>>>    //
73246>>>>>    Procedure DFNew_Page Integer Cols
73248>>>>>        Integer PageNumber Columns
73248>>>>>        Boolean bFirstPagePrinted
73248>>>>>        // If no args passed used default setting
73248>>>>>        If (Num_Arguments=0) ;           Move (Print_Columns(Main_Report_id(Self))) to Columns
73251>>>>>        Else ;           Move Cols to Columns
73253>>>>>        Set Page_Feed   to -2   // No FormFeed
73254>>>>>        If (Child_Rpt_State(self)) ;            Send DFNew_Page of (Main_Report_Id(Self)) Columns
73257>>>>>        Else Begin
73258>>>>>            // we only want to print report_header once. When report starts
73258>>>>>            // this is set true, after the first print it is false. You can set
73258>>>>>            // this to true before and explicit dfNew_page to force a header
73258>>>>>            Get pbFirstPagePrinted to bFirstPagePrinted
73259>>>>>            Get  DFNewPage of (phoWinPrint(self)) Columns To PageNumber
73260>>>>>            If (PageNumber<>0) begin // if 0, it failed
73262>>>>>                Set No_PageCheck_State to True
73263>>>>>
73263>>>>>                //Top section
73263>>>>>                Send Page_Top
73264>>>>>                If Not bFirstPagePrinted Send Report_Header
73267>>>>>                Send Page_Header
73268>>>>>                Send Page_Title
73269>>>>>
73269>>>>>                Set New_Page_State to False
73270>>>>>                Set Page_End_State to False
73271>>>>>                Set No_PageCheck_State to False        // No longer Paging
73272>>>>>                Set pbFirstPagePrinted to True
73273>>>>>            End
73273>>>>>>
73273>>>>>        End
73273>>>>>>
73273>>>>>
73273>>>>>        // Footer section
73273>>>>>        //
73273>>>>>        // DO NOT CHANGE THE ORDER OF BOTTOM SECTIONS !!!!!
73273>>>>>        //
73273>>>>>
73273>>>>>        Send Page_Bottom
73274>>>>>
73274>>>>>        // in WinPrint it is not possible to replace Page_Footer
73274>>>>>        // with Report_Footer. If you use Report_Footer you will
73274>>>>>        // have both Page_Footer and Report_Footer
73274>>>>>        //
73274>>>>>        //If LastTime eq 0 Send Page_Footer
73274>>>>>        //else             Send Report_Footer
73274>>>>>
73274>>>>>        Send Page_Footer
73275>>>>>        Send Page_Total
73276>>>>>    End_Procedure
73277>>>>>
73277>>>>>    Procedure Ending_Main_Report
73279>>>>>        Boolean bCancel bMultiReports
73279>>>>>
73279>>>>>        Get Cancelled_state to bCancel
73280>>>>>        Get pbMultiReports to bMultiReports
73281>>>>>
73281>>>>>        Forward Send Ending_Main_Report
73283>>>>>
73283>>>>>        If bCancel Begin
73285>>>>>            Send DFEndDocument
73286>>>>>            Send DFClearDoc // this will also close the previewer
73287>>>>>        end
73287>>>>>>
73287>>>>>        Else Begin
73288>>>>>            Send Report_Footer
73289>>>>>
73289>>>>>            // if multi-reports, we don't do an end of report yet. The programmer must
73289>>>>>            // manually end the report by sending EndMultiReport
73289>>>>>            If (not(bMultiReports)) begin
73291>>>>>                Send EndWinPrintReport
73292>>>>>            end
73292>>>>>>
73292>>>>>
73292>>>>>        end
73292>>>>>>
73292>>>>>
73292>>>>>    End_Procedure
73293>>>>>
73293>>>>>    // This must get called when you are running multiple reports (pbMultiReport).
73293>>>>>    // Send this when the last report is complete.
73293>>>>>    Procedure EndMultiReport
73295>>>>>        Send EndWinPrintReport
73296>>>>>    End_procedure
73297>>>>>
73297>>>>>
73297>>>>>    Procedure EndWinPrintReport
73299>>>>>        Boolean bAutoOutput
73299>>>>>        integer iStatus eMode
73299>>>>>        Get DocumentStatus to iStatus
73300>>>>>        If (iStatus<>dsStarted) procedure_return
73303>>>>>
73303>>>>>        // this tells winprint that the report is complete
73303>>>>>        Send DFEndDocument
73304>>>>>        // if auto-output we print or display automatically.
73304>>>>>        // for winprint2, if in preview mode you must do this so the previewer can enter
73304>>>>>        // a modal state (which it may or may not need to do).
73304>>>>>        Get AutoOutput_state to bAutoOutput
73305>>>>>        Get Output_device_mode to eMode
73306>>>>>        If (bAutoOutput or eMode=PRINT_TO_WINDOW) begin
73308>>>>>            Send PrintReport
73309>>>>>            // if auto output, we assume that you are done when it is all over
73309>>>>>            // we only can do this with the modal viewer
73309>>>>>            If (bAutoOutput and pbModalViewer(self)) begin
73311>>>>>                Send DFClearDoc
73312>>>>>            end
73312>>>>>>
73312>>>>>        end
73312>>>>>>
73312>>>>>
73312>>>>>    End_Procedure
73313>>>>>
73313>>>>>
73313>>>>>    Function Setup_Report Returns Integer
73315>>>>>        Integer iErr iStatus eMode
73315>>>>>        Boolean bActiveViewer bChildReport bMultiReports bOk
73315>>>>>
73315>>>>>        Get Child_rpt_state to bChildReport
73316>>>>>
73316>>>>>        If not bChildReport Begin
73318>>>>>
73318>>>>>            // This makes sure that we are pointing to the new winprint2 engine object.
73318>>>>>            // normally this will be the new winprint, but it can be redirected
73318>>>>>            Get phoWinPrint to WinPrintID
73319>>>>>
73319>>>>>            // winprint must have installed printer. If not installed, generate error and stop the report
73319>>>>>            Get ArePrintersInstalled to bOk
73320>>>>>            If not bOk Begin
73322>>>>>                Error DFERR_WINPRINT C_$NoInstalledPrinters
73323>>>>>>
73323>>>>>                Function_Return 1
73324>>>>>            End
73324>>>>>>
73324>>>>>
73324>>>>>            // check if selected printer is valid. If not, generate error and stop the report
73324>>>>>            Get IsPrinterValid to bOk
73325>>>>>            If not bOk Begin
73327>>>>>                Error DFERR_WINPRINT DFPrintError936    // Could not select a valid printer
73328>>>>>>
73328>>>>>                Function_Return 1
73329>>>>>            End
73329>>>>>>
73329>>>>>
73329>>>>>            // make sure it is ok to start a new report but try to be smart about it.
73329>>>>>            // if a report is active (dsstarted or dsFinished) check to see if it is
73329>>>>>            // finished w/ no viewer. If so, assume the user closed the report and is done
73329>>>>>            // so just clear the report. If a viewer is present, declare an error.
73329>>>>>            Get DocumentStatus to iStatus
73330>>>>>            Get pbMultiReports to bMultiReports
73331>>>>>            // multi-report only in-progress is multi and it is started
73331>>>>>            Move (bMultiReports and iStatus=dsStarted) to bMultiReports
73332>>>>>            If not bMultiReports Begin
73334>>>>>                If (iStatus<>dsNotStarted) Begin
73336>>>>>                    Get IsViewerActive to bActiveViewer
73337>>>>>                    If (iStatus=dsFinished and not(bActiveViewer)) Begin
73339>>>>>                        Send DfClearDoc
73340>>>>>                    End
73340>>>>>>
73340>>>>>                    Else Begin
73341>>>>>                        Error DFERR_WINPRINT DFPrintError967
73342>>>>>>
73342>>>>>                        Function_Return 1
73343>>>>>                    End
73343>>>>>>
73343>>>>>                End
73343>>>>>>
73343>>>>>
73343>>>>>                // all new reports by default allow printing from viewer and they have the print job set up when you select print
73343>>>>>                // if you need to change these defaults, you can change these inside of Starting_main_report
73343>>>>>                // We only do this with non-multi-reports.
73343>>>>>                Send DFSetPrintDlgInPreview      True
73344>>>>>                Send DFSetEnablePrintFromPreview True
73345>>>>>
73345>>>>>            End
73345>>>>>>
73345>>>>>
73345>>>>>            // In the new winprint, this message is not needed and is a stub. For
73345>>>>>            // now it is in here for compatibility purposes
73345>>>>>            //You MUST always start a new report with this procedure
73345>>>>>            Send DFZeroCounters of (phoWinPrint(Self))
73346>>>>>            Send Clr_AllSubTotals
73347>>>>>
73347>>>>>        End
73347>>>>>>
73347>>>>>
73347>>>>>        Forward Get Setup_report to iErr
73349>>>>>
73349>>>>>        If (iErr=0) Begin
73351>>>>>            If not bChildReport Begin
73353>>>>>                // if part of a multi-report we don't do a new doc
73353>>>>>                If not bMultiReports Begin
73355>>>>>                    Get Output_Device_Mode to eMode
73356>>>>>                    Send DFNewDoc of (phoWinPrint(Self))  (eMode = PRINT_TO_WINDOW) // pass True of display while printing
73357>>>>>                End
73357>>>>>>
73357>>>>>                // Do new page if not part of a multi-report and we say don't do a new page
73357>>>>>                If (not(bMultiReports) or AutoNew_Page_State(Self)) Begin
73359>>>>>                    Set pbFirstPagePrinted to False // tells new page that this is the first time for this report
73360>>>>>                    Send DFNew_page
73361>>>>>                End
73361>>>>>>
73361>>>>>            End
73361>>>>>>
73361>>>>>        End
73361>>>>>>
73361>>>>>        Function_Return iErr
73362>>>>>    End_Function
73363>>>>>
73363>>>>>
73363>>>>>
73363>>>>>    // Cancel RO behavior - there is no device to close
73363>>>>>    //
73363>>>>>    Procedure Close_Output_Device
73365>>>>>    End_Procedure
73366>>>>>
73366>>>>>    // Cancel RO Behavior
73366>>>>>    //
73366>>>>>    Procedure Initialize_Output_Device
73368>>>>>    End_procedure
73369>>>>>
73369>>>>>
73369>>>>>    Function Output_Device_Mode Returns Integer
73371>>>>>        Integer hoId
73371>>>>>        String DevMode
73371>>>>>        Get Private.Output_Device_Mode to DevMode
73372>>>>>        If (DevMode=PRINT_TO_UNDEFINED) Begin
73374>>>>>            Get Report_View_Id to hoId
73375>>>>>            If hoID ;                Get OutPut_Device_Mode of hoID to DevMode
73378>>>>>            If (DevMode=PRINT_TO_UNDEFINED) ;                Move PRINT_TO_WINDOW to DevMode
73381>>>>>        End
73381>>>>>>
73381>>>>>        Function_Return DevMode
73382>>>>>    End_Function // Output_Destination
73383>>>>>
73383>>>>>    Procedure Set Output_Device_Mode Integer DevMode
73385>>>>>        Set Private.Output_Device_Mode to DevMode
73386>>>>>    End_Procedure // Set Output_Device
73387>>>>>
73387>>>>>    // displays a metric ruler in .5 increments. This can be
73387>>>>>    // sent to make it easy to see how fields and labels should
73387>>>>>    // be moved for alignment.
73387>>>>>    //
73387>>>>>    Procedure ShowRuler
73389>>>>>        integer i
73389>>>>>        number n
73389>>>>>        for i from 0 to 30
73395>>>>>>
73395>>>>>            Send DFWritePos of (phoWinPrint(self)) (String(i)) FONT_DEFAULT i -1 0
73396>>>>>            Move (i+.5) to n
73397>>>>>            Send DFWritePos of (phoWinPrint(self)) "." FONT_DEFAULT n -1 0
73398>>>>>        Loop
73399>>>>>>
73399>>>>>        Send DFWriteln of (phoWinPrint(self)) ''  FONT_DEFAULT FONT_DEFAULT -1
73400>>>>>    End_procedure
73401>>>>>
73401>>>>>      // status panel related agumentations to handle the auto-previewer
73401>>>>>
73401>>>>>      Procedure Update_Status string sVal
73403>>>>>         Integer eMode
73403>>>>>         Get Output_device_mode to eMode
73404>>>>>         If (eMode=PRINT_TO_WINDOW) Begin
73406>>>>>            Send SetProgressCaption  of (phoWinPrint(self)) sVal
73407>>>>>         End
73407>>>>>>
73407>>>>>         Else Begin
73408>>>>>            forward Send Update_Status sVal
73410>>>>>         end
73410>>>>>>
73410>>>>>      End_Procedure
73411>>>>>
73411>>>>>      Procedure Start_Status
73413>>>>>         Integer eMode
73413>>>>>         string sTitle sCaption
73413>>>>>         Get Output_device_mode to eMode
73414>>>>>         If (eMode=PRINT_TO_WINDOW) Begin
73416>>>>>            Get Report_Caption to sCaption
73417>>>>>            Get Report_Title to sTitle
73418>>>>>            If (sTitle<>"" and sCaption<>"") begin
73420>>>>>                Move ( sCaption- ":" * sTitle) to sTitle
73421>>>>>            end
73421>>>>>>
73421>>>>>            else begin
73422>>>>>                Move (sCaption - sTitle) to sTitle
73423>>>>>            end
73423>>>>>>
73423>>>>>            Send SetReportTitle of (phoWinPrint(self)) sTitle
73424>>>>>         End
73424>>>>>>
73424>>>>>         Else Begin
73425>>>>>            forward Send Start_status
73427>>>>>         end
73427>>>>>>
73427>>>>>      End_Procedure
73428>>>>>
73428>>>>>      Procedure Resume_Status
73430>>>>>         Integer eMode
73430>>>>>         Get Output_device_mode to eMode
73431>>>>>         If (eMode=PRINT_TO_WINDOW) Begin
73433>>>>>            Send DfPreviewNoWait of (phoWinPrint(self))
73434>>>>>         End
73434>>>>>>
73434>>>>>         Else Begin
73435>>>>>            forward Send Resume_Status
73437>>>>>         end
73437>>>>>>
73437>>>>>      End_Procedure
73438>>>>>
73438>>>>>      Procedure End_Status
73440>>>>>         Integer eMode
73440>>>>>         Get Output_device_mode to eMode
73441>>>>>         If (error_processing_state(self)) Begin
73443>>>>>            Send DFClosePreview
73444>>>>>         end
73444>>>>>>
73444>>>>>         If (eMode=PRINT_TO_WINDOW) Begin
73446>>>>>         End
73446>>>>>>
73446>>>>>         Else Begin
73447>>>>>            forward Send End_Status
73449>>>>>         end
73449>>>>>>
73449>>>>>      End_Procedure
73450>>>>>
73450>>>>>    Function Report_Interrupt Returns Integer
73452>>>>>         integer eStat
73452>>>>>         String sMess
73452>>>>>         Boolean bActiveViewer
73452>>>>>         Get IsViewerActive to bActiveViewer
73453>>>>>         If (Error_Check_State(self)) begin
73455>>>>>            Move C_$AnErrorWishToCancel to sMess
73456>>>>>         end
73456>>>>>>
73456>>>>>         Else begin
73457>>>>>            Move  C_$CancelThisReport to sMess
73458>>>>>         end
73458>>>>>>
73458>>>>>         If bActiveViewer Begin
73460>>>>>            Get PreviewYesNoBox of (phoWinPrint(self)) C_$ReportInterrupt sMess to eStat
73461>>>>>         end
73461>>>>>>
73461>>>>>         Else Begin
73462>>>>>            Get YesNo_Box sMess C_$ReportInterrupt to eStat
73463>>>>>         End
73463>>>>>>
73463>>>>>
73463>>>>>         Function_Return (eStat=MBR_YES)
73464>>>>>
73464>>>>>  End_Function
73465>>>>>
73465>>>>>  Function Test_KeyPressed Returns Integer
73467>>>>>     Boolean bStop bError bActiveViewer
73467>>>>>     integer eMode
73467>>>>>     // winreport will do this also, but this makes sure that this gets called
73467>>>>>     // for each body loop -- even if the body loop prints nothing
73467>>>>>     Send PumpMsgQueue of (phoWinPrint(self)) // permit painting
73468>>>>>     Get IsViewerActive to bActiveViewer
73469>>>>>     Get Output_device_mode to eMode
73470>>>>>     If bActiveViewer Begin
73472>>>>>        Get ViewerWantsToClose of (phoWinPrint(self)) to bStop
73473>>>>>        Get Error_Check_State to bError
73474>>>>>        if (bStop or bError) begin
73476>>>>>            Get Report_Interrupt to bStop
73477>>>>>        end
73477>>>>>>
73477>>>>>     end
73477>>>>>>
73477>>>>>     Else Begin
73478>>>>>        Forward Get Test_KeyPressed to bStop
73480>>>>>        If (eMode=PRINT_TO_WINDOW and not(bStop)) Begin
73482>>>>>            Send DfPreviewNoWait
73483>>>>>        end
73483>>>>>>
73483>>>>>     End
73483>>>>>>
73483>>>>>
73483>>>>>     Function_Return bStop
73484>>>>>  End_Function
73485>>>>>
73485>>>>>    Procedure OnClosingView
73487>>>>>        Send DFClearDoc
73488>>>>>    end_procedure
73489>>>>>
73489>>>>>
73489>>>>>    // Attempt to make this as intuitive as possible. You cannot invoke this when a
73489>>>>>    // report is active. If a report is not finished, you cannot do this.
73489>>>>>    // If a report is finsihed it may or may not have a viewer present.
73489>>>>>    // If a viewer is not present, we will clear the exising report (making the assumption
73489>>>>>    // that a modeless viewer was closed and the report will not be invoked again). If a viewer
73489>>>>>    // is active, we will pass this through to the winprint object which will show an error
73489>>>>>
73489>>>>>    Function DFPrintSetupDialog Returns Boolean// invoke printer setup dialog
73491>>>>>        Integer iStatus
73491>>>>>        Boolean bActiveViewer bOk
73491>>>>>        // we must have printers installed for this to work
73491>>>>>        Get ArePrintersInstalled to bOk
73492>>>>>        If not bOk Begin
73494>>>>>            Error DFERR_WINPRINT C_$NoInstalledPrinters
73495>>>>>>
73495>>>>>        End
73495>>>>>>
73495>>>>>        Else Begin
73496>>>>>            Get DocumentStatus to iStatus
73497>>>>>            If (iStatus=dsFinished) Begin
73499>>>>>                Get IsViewerActive to bActiveViewer
73500>>>>>                If not bActiveViewer Begin
73502>>>>>                    Send DfClearDoc
73503>>>>>                End
73503>>>>>>
73503>>>>>            End
73503>>>>>>
73503>>>>>            // the winprint object will generate an error if the status is not dsNotStarted.
73503>>>>>            // we want those errors
73503>>>>>            Get DFPrintSetupDialog of (phoWinPrint(Self)) to bOk
73504>>>>>        End
73504>>>>>>
73504>>>>>        Function_Return bOk
73505>>>>>    End_Procedure
73506>>>>>
73506>>>>>    // It is better to use DFPrintSetupDialog which tells you if the dialog was canceled
73506>>>>>    Procedure DFPrintSetup // invoke printer setup dialog
73508>>>>>        Boolean bOk
73508>>>>>        Get DFPrintSetupDialog to bOk
73509>>>>>    End_Procedure
73510>>>>>
73510>>>>>    Procedure DFClearDoc // clear document, remove viewer
73512>>>>>        Send DFClearDoc of (phoWinPrint(self))
73513>>>>>    end_procedure
73514>>>>>
73514>>>>>    Procedure DFEndDocument // tell winprint that the report is complete
73516>>>>>        Send DfEndDocument of (phoWinPrint(self))
73517>>>>>    end_procedure
73518>>>>>
73518>>>>>    Procedure DFClosePreview //close the previewer, does not clear the document
73520>>>>>        Send DfClosePreview of (phoWinPrint(self))
73521>>>>>    end_procedure
73522>>>>>
73522>>>>>    Procedure DFPrintDialog // popup print job dialog
73524>>>>>        Send DFPrintDialog of (phoWinPrint(self))
73525>>>>>    End_procedure
73526>>>>>
73526>>>>>    Procedure DFPrint // print with printer dialog
73528>>>>>        Send DFPrint of (phoWinPrint(self))
73529>>>>>    End_procedure
73530>>>>>
73530>>>>>    Procedure DFPrintDoc // print without printer dialog
73532>>>>>        Send DFPrintDoc of (phoWinPrint(self))
73533>>>>>    End_Procedure
73534>>>>>
73534>>>>>    Procedure DFPreviewWait // invoke previewer in modal mode
73536>>>>>       Send DFPreviewWait of (phoWinPrint(self))
73537>>>>>    End_Procedure
73538>>>>>
73538>>>>>    Procedure DFPreviewNoWait // invoke previwer in modeless mode
73540>>>>>       Send DFPreviewNoWait of (phoWinPrint(self))
73541>>>>>    End_Procedure
73542>>>>>
73542>>>>>    Procedure DFPreview // invokde previewer based on pbModalViewer property
73544>>>>>       Boolean bModalViewer
73544>>>>>       Get pbModalViewer to bModalViewer
73545>>>>>       If bModalViewer Begin
73547>>>>>           Send DFPreviewWait
73548>>>>>       end
73548>>>>>>
73548>>>>>       else Begin
73549>>>>>           Send DFPreviewNoWait
73550>>>>>       end
73550>>>>>>
73550>>>>>   End_Procedure
73551>>>>>
73551>>>>>    // Print report to appropriate device (printer, preview) based
73551>>>>>    // on output_device_mode
73551>>>>>    //
73551>>>>>    Procedure PrintReport
73553>>>>>        Integer eMode
73553>>>>>        Get OutPut_Device_Mode to eMode
73554>>>>>        If ((eMode=PRINT_TO_WINDOW) or (eMode=DEFERRED_PRINT_TO_WINDOW)) Begin
73556>>>>>           Send DFPreview
73557>>>>>        end
73557>>>>>>
73557>>>>>        Else If (eMode=PRINT_TO_PRINTER_NO_DIALOG) Begin
73560>>>>>           Send DFPrintDoc // print, no print job dialog
73561>>>>>        end
73561>>>>>>
73561>>>>>        Else Begin // (eMode=PRINT_TO_PRINTER)
73562>>>>>           Send DFPrint // print with print job dialog
73563>>>>>        end
73563>>>>>>
73563>>>>>    End_Procedure
73564>>>>>
73564>>>>>
73564>>>>>    Procedure DFSetPrinterPaper integer ePaperType
73566>>>>>        Send DFSetPrinterPaper of (phoWinPrint(self)) ePaperType
73567>>>>>    End_Procedure
73568>>>>>
73568>>>>>    Function DFGetPrinterPaper returns integer //ePaperType
73570>>>>>        integer ePaperType
73570>>>>>        Get DFGetPrinterPaper of (phoWinPrint(self)) to ePaperType
73571>>>>>        Function_return ePaperType
73572>>>>>    end_function
73573>>>>>
73573>>>>>
73573>>>>>    Procedure DFSetPrinterBin integer eBinType
73575>>>>>        Send DFSetPrinterBin of (phoWinPrint(self)) eBinType
73576>>>>>    End_Procedure
73577>>>>>
73577>>>>>    Function DFGetPrinterBin returns integer //eBinType
73579>>>>>        integer eBinType
73579>>>>>        Get DFGetPrinterBin of (phoWinPrint(self)) to eBinType
73580>>>>>        Function_return eBinType
73581>>>>>    end_function
73582>>>>>
73582>>>>>
73582>>>>>    Procedure DFSetPrinterResolution integer eResType
73584>>>>>        Send DFSetPrinterResolution of (phoWinPrint(self)) eResType
73585>>>>>    End_Procedure
73586>>>>>
73586>>>>>    Function DFGetPrinterResolution returns integer //eResType
73588>>>>>        Boolean eResType
73588>>>>>        Get DFGetPrinterResolution of (phoWinPrint(self)) to eResType
73589>>>>>        Function_return eResType
73590>>>>>    end_function
73591>>>>>
73591>>>>>
73591>>>>>    Procedure DFSetLandscape boolean bIsLandscape
73593>>>>>        Send DFSetLandscape of (phoWinPrint(self)) bIsLandscape
73594>>>>>    End_Procedure
73595>>>>>
73595>>>>>    Function DFGetLandscape returns boolean // bIsLandscape
73597>>>>>        Boolean bIsLandscape
73597>>>>>        Get DFGetLandscape of (phoWinPrint(self)) to bIsLandscape
73598>>>>>        Function_return bIsLandscape
73599>>>>>    end_function
73600>>>>>
73600>>>>>    Procedure DFSetMetrics integer eType
73602>>>>>        Send DFSetMetrics of (phoWinPrint(self)) eType
73603>>>>>    End_Procedure
73604>>>>>
73604>>>>>    Function DFGetMetrics returns integer
73606>>>>>        integer eType
73606>>>>>        Get DFGetMetrics of (phoWinPrint(self)) to eType
73607>>>>>        Function_return eType
73608>>>>>    end_function
73609>>>>>
73609>>>>>
73609>>>>>    Procedure DFSetPrintDlgInPreview boolean bShowDialog
73611>>>>>        Set PrintDlgInPreview of (phoWinPrint(self)) to bShowDialog
73612>>>>>    End_Procedure
73613>>>>>
73613>>>>>    Function DFGetPrintDlgInPreview returns boolean
73615>>>>>        boolean bShowDialog
73615>>>>>        Get PrintDlgInPreview of (phoWinPrint(self)) to bShowDialog
73616>>>>>        Function_return bShowDialog
73617>>>>>    end_function
73618>>>>>
73618>>>>>
73618>>>>>    Procedure DFSetEnablePrintFromPreview boolean bEnablePrint
73620>>>>>        Set EnablePrintFromPreview of (phoWinPrint(self)) to bEnablePrint
73621>>>>>    End_Procedure
73622>>>>>
73622>>>>>    Function DFGetEnablePrintFromPreview returns boolean
73624>>>>>        boolean bEnablePrint
73624>>>>>        Get EnablePrintFromPreview of (phoWinPrint(self)) to bEnablePrint
73625>>>>>        Function_return bEnablePrint
73626>>>>>    end_function
73627>>>>>
73627>>>>>
73627>>>>>
73627>>>>>    Procedure DFSetMargins number nLeft number nTop number nRight number nBottom
73629>>>>>        Send DFSetMargins of (phoWinPrint(self)) nLeft nTop nRight nBottom
73630>>>>>    End_Procedure
73631>>>>>
73631>>>>>    Procedure DFSetTopBottom number nTop number nBottom Boolean bAllPages
73633>>>>>        Send DFSetTopBottom of (phoWinPrint(self)) nTop nBottom bAllPages
73634>>>>>    End_Procedure
73635>>>>>
73635>>>>>
73635>>>>>    Procedure DFSetDevice string sPrinterName
73637>>>>>        Send DFSetDevice of (phoWinPrint(self)) sPrinterName
73638>>>>>    End_Procedure
73639>>>>>
73639>>>>>    Function DFGetCurrentDevice returns string // sPrinterName
73641>>>>>        String sPrinterName
73641>>>>>        Get DFGetCurrentDevice of (phoWinPrint(self)) to sPrinterName
73642>>>>>        Function_return sPrinterName
73643>>>>>    end_function
73644>>>>>
73644>>>>>
73644>>>>>    Procedure DFSetUserDefinedPapersize number nLength number nWidth
73646>>>>>        Send DFSetUserDefinedPapersize of (phoWinPrint(self)) nLength nWidth
73647>>>>>    End_Procedure
73648>>>>>
73648>>>>>    Function DFGetUserDefinedLength returns number
73650>>>>>        number nSize
73650>>>>>        Get DFGetUserDefinedLength of (phoWinPrint(self)) to nSize
73651>>>>>        Function_return nSize
73652>>>>>    end_function
73653>>>>>
73653>>>>>    Function DFGetUserDefinedWidth returns number
73655>>>>>        number nSize
73655>>>>>        Get DFGetUserDefinedWidth of (phoWinPrint(self)) to nSize
73656>>>>>        Function_return nSize
73657>>>>>    end_function
73658>>>>>
73658>>>>>
73658>>>>>    Procedure DFSetNumberOfCopies integer iCopies
73660>>>>>        Send DFSetNumberOfCopies of (phoWinPrint(self)) iCopies
73661>>>>>    End_Procedure
73662>>>>>
73662>>>>>    Procedure DFPrinterBinFirstPage integer eBinType
73664>>>>>        Send DFPrinterBinFirstPage of (phoWinPrint(self)) eBinType
73665>>>>>    End_Procedure
73666>>>>>
73666>>>>>    Procedure DFClearPrinter
73668>>>>>        Send DFClearPrinter of (phoWinPrint(self))
73669>>>>>    End_Procedure
73670>>>>>
73670>>>>>    Function DFGetDFColor integer iRed integer iGreen integer iBlue returns integer
73672>>>>>        integer iWPColor
73672>>>>>        Get DFGetDFColor of (phoWinPrint(self)) iRed iGreen iBlue to iWPColor
73673>>>>>        Function_return iWPColor
73674>>>>>    end_function
73675>>>>>
73675>>>>>    Function RGBToWPColor integer iRgb returns integer
73677>>>>>        integer iWPColor
73677>>>>>        Get RGBToWPColor of (phoWinPrint(self)) iRGB to iWPColor
73678>>>>>        Function_return iWPColor
73679>>>>>    end_function
73680>>>>>
73680>>>>>
73680>>>>>End_Class
73681>>>Use Windows.pkg
73681>>>
73681>>>Use cCustomerDataDictionary.dd
73681>>>
73681>>>ACTIVATE_VIEW Activate_oCustomerReport FOR oCustomerReport
73691>>>>
73691>>>Object oCustomerReport is a ReportView
73693>>>    Set Location to 6 6
73694>>>    Set Size to 60 202
73695>>>    Set Label To "Customer Listing (WinPrint 2)"
73696>>>
73696>>>
73696>>>    Object oCustomer_DD is a cCustomerDataDictionary
73698>>>    End_Object // oCustomer_DD
73699>>>
73699>>>    Set Main_DD To oCustomer_DD
73700>>>
73700>>>
73700>>>
73700>>>
73700>>>    Object oPrintTo is a RadioGroup
73702>>>        Set Size to 38 118
73703>>>        Set Location to 10 12
73704>>>        Set Label to "Send Report to"
73705>>>
73705>>>        Object oRadio1 is a Radio
73707>>>            Set Label to "Report Viewer"
73708>>>            Set Size to 10 61
73709>>>            Set Location to 12 6
73710>>>            Set Status_Help to "Prints the report to screen"
73711>>>        End_Object // oRadio1
73712>>>
73712>>>        Object oRadio2 is a Radio
73714>>>            Set Label to "Printer"
73715>>>            Set Size to 10 42
73716>>>            Set Location to 24 6
73717>>>            Set Status_Help to "Prints the report to printer"
73718>>>        End_Object // oRadio2
73719>>>
73719>>>
73719>>>        Function IsToPrinter Returns boolean
73722>>>            integer iRadio
73722>>>            Get Current_radio to iRadio
73723>>>            Function_return (iRadio=1)
73724>>>        End_Function // IsToPrinter
73725>>>
73725>>>    End_Object // oPrintTo
73726>>>
73726>>>    Object oBtnPrint is a Button
73728>>>        Set Label to "Print"
73729>>>        Set Location to 5 140
73730>>>        Set Status_Help to "Print the Selected report"
73731>>>        Set Default_State to TRUE
73732>>>        Procedure OnClick
73735>>>            Send StartReport
73736>>>        End_Procedure
73737>>>    End_Object // oBtnPrint
73738>>>
73738>>>    Object oBtnPrinterSetup is a Button
73740>>>        Set Label to "Printer Setup"
73741>>>        Set Location to 22 140
73742>>>        Set Status_Help to "Set up printer for report"
73743>>>        Procedure OnClick
73746>>>            Send DFPrintSetup of oReport
73747>>>        End_Procedure
73748>>>    End_Object // oBtnPrinterSetup
73749>>>
73749>>>    Object oBtnCancel is a Button
73751>>>        Set Label to "Cancel"
73752>>>        Set Location to 39 140
73753>>>        Set Status_Help to "Close this Panel"
73754>>>        Procedure OnClick
73757>>>            Send Close_Panel
73758>>>        End_Procedure
73759>>>    End_Object // oBtnCancel
73760>>>
73760>>>
73760>>>
73760>>>    Object oReport is a cWinReport2
73762>>>
73762>>>        Set Report_Title to "Customer Listing (WinPrint 2)"
73763>>>
73763>>>        // Set DDO, Index and breaks for the report
73763>>>        Set Server to oCustomer_DD
73764>>>        Set Ordering to 1
73765>>>        // Report_Breaks file.field // no breaks in this report
73765>>>
73765>>>        Function Starting_Main_Report Returns Integer
73768>>>            Boolean bErr
73768>>>            Send DFSetMetrics wpm_cm
73769>>>            Send DFSetmargins 1 1 1 1
73770>>>            //Send DFSetLandscape false // This can be used to force a page orientation
73770>>>            Forward Get Starting_Main_Report to bErr
73772>>>            Function_return bErr
73773>>>        End_Function // Starting_Main_Report
73774>>>
73774>>>        // Page_Top is printed first at the top margin of each page
73774>>>        Procedure Page_Top 
73777>>>            string  sFont
73777>>>            integer iFontSize
73777>>>
73777>>>            Move "arial" to sFont
73778>>>            Move 8 to iFontSize
73779>>>
73779>>>            DFFont sFont
73780>>>            DFFontSize iFontSize
73781>>>            DFBeginHeader DFPageTop
73782>>>                DFHeaderFrame Hdr_NoFrame
73783>>>                DFHeaderPos   Hdr_Left
73784>>>                DFWriteLn ("Page:" * "#pagecount#") (Font_Right)
73785>>>            DFEndHeader
73787>>>
73787>>>        End_Procedure // Page_Top
73788>>>
73788>>>        // Report_Header is printed once in a report after Page_Top
73788>>>        //Procedure Report_Header
73788>>>        //    string  sFont
73788>>>        //    integer iFontSize
73788>>>        //    Move "arial" to sFont
73788>>>        //    Move 8 to iFontSize
73788>>>        //    DFFont sFont
73788>>>        //    DFFontSize iFontSize
73788>>>        //    DFBeginHeader  DFReportHeader
73788>>>        //        DFHeaderFrame  Hdr_Margins 0.01
73788>>>        //        DFHeaderPos    Hdr_Left
73788>>>        //        DFHeaderMargin Hm_BottomOuter 0.08
73788>>>        //        DFWrite     "Report_Header" (Font_Bold+Font_Center)
73788>>>        //    DFEndHeader
73788>>>        //End_Procedure
73788>>>
73788>>>        Procedure Page_Header 
73791>>>            integer iFill iBorder iStyle
73791>>>            string  sFont sReportTitle
73791>>>            integer iFontSize
73791>>>
73791>>>            Move "arial" to sFont
73792>>>            Move 16 to iFontSize
73793>>>            Move (Font_bold + rgb_White) to iStyle
73794>>>            Move (rgb_dGrey) to iFill
73795>>>            Move (rgb_dGrey) to iBorder
73796>>>            Get Report_Title to sReportTitle
73797>>>
73797>>>            DFFont sFont
73798>>>            DFFontSize iFontSize
73799>>>            DFBeginHeader DFPageHeader
73800>>>                DFHeaderPos   Hdr_Left
73801>>>                DFHeaderFrame Hdr_Margins 0.01 iBorder iFill
73802>>>                DFWritelnPos sReportTitle 0.1 iStyle
73803>>>                DFHeaderMargin HM_BottomOuter 0.08
73804>>>            DFEndHeader
73806>>>
73806>>>        End_Procedure // Page_Header
73807>>>
73807>>>        Procedure Page_Title 
73810>>>            string  sFont 
73810>>>            integer iFontSize iHeaderStyle iFill iBorder
73810>>>
73810>>>            Move "arial" to sFont
73811>>>            Move 8 to iFontSize
73812>>>            Move (Font_Bold + rgb_dBlue) to iHeaderStyle
73813>>>            Move (rgb_Grey) to iFill
73814>>>            Move (rgb_Grey) to iBorder
73815>>>
73815>>>            DFFont sFont
73816>>>            DFFontSize iFontSize
73817>>>            DFBeginHeader DFPageTitle
73818>>>                DFHeaderPos   Hdr_Left
73819>>>                DFHeaderFrame Hdr_Margins 0.01 iBorder iFill
73820>>>                DFHeaderMargin HM_TopInner    0.04
73821>>>                DFHeaderMargin HM_BottomInner 0.04
73822>>>                DFHeaderMargin HM_BottomOuter 0.08
73823>>>
73823>>>                DFWritePos "Customer Number"              (0.08 + 3.07) (iHeaderStyle + Font_Right) -1 3.07
73824>>>                DFWritePos "Name"                         3.23 iHeaderStyle -1 5.11
73825>>>                DFWritePos "Address"                      8.42 iHeaderStyle -1 5.11
73826>>>                DFWritePos "City"                         13.61 iHeaderStyle -1 2.38
73827>>>                DFWritePos "State"                        16.07 iHeaderStyle -1 1.02
73828>>>                DFWritePos "Zip"                          17.17 iHeaderStyle -1 1.7
73829>>>                DFWriteLn
73830>>>            DFEndHeader
73832>>>
73832>>>        End_Procedure // Page_Title
73833>>>
73833>>>        Procedure Body 
73836>>>            string  sFont 
73836>>>            integer iFontSize iStyle
73836>>>
73836>>>            Move "arial" to sFont
73837>>>            Move 8 to iFontSize
73838>>>            Move (font_default) to iStyle
73839>>>
73839>>>            DFFont sFont
73840>>>            DFFontSize iFontSize
73841>>>
73841>>>            DFWritePos Customer.Customer_Number       (0.08 + 3.07) (iStyle + Font_Right) 0 3.07
73842>>>            DFWritePos Customer.Name                  3.23 iStyle -1 5.11
73843>>>            DFWritePos Customer.Address               8.42 iStyle -1 5.11
73844>>>            DFWritePos Customer.City                  13.61 iStyle -1 2.38
73845>>>            DFWritePos Customer.State                 16.07 iStyle -1 1.02
73846>>>            DFWritePos Customer.Zip                   17.17 iStyle -1 1.7
73847>>>            DFWriteLn
73848>>>
73848>>>        End_Procedure // Body
73849>>>
73849>>>        // Totals appear at the end of the report before Report_Footer
73849>>>        //Procedure Total
73849>>>        //    string  sFont
73849>>>        //    integer iFontSize
73849>>>        //    Move "arial" to sFont
73849>>>        //    Move 8 to iFontSize
73849>>>        //    DFFont sFont
73849>>>        //    DFFontSize iFontSize
73849>>>        //    DFBeginHeader  DFTotal
73849>>>        //        DFHeaderFrame  Hdr_Margins 0.01
73849>>>        //        DFHeaderPos    Hdr_Left
73849>>>        //        DFHeaderMargin Hm_BottomOuter 0.08
73849>>>        //        DFWrite     "Total" (Font_Bold+Font_Center)
73849>>>        //    DFEndHeader
73849>>>        //End_Procedure
73849>>>
73849>>>        // Report_Footer is printed once on the last page before Page_Footer
73849>>>        //Procedure Report_Footer
73849>>>        //    string  sFont
73849>>>        //    integer iFontSize
73849>>>        //    Move "arial" to sFont
73849>>>        //    Move 8 to iFontSize
73849>>>        //    DFFont sFont
73849>>>        //    DFFontSize iFontSize
73849>>>        //    DFBeginHeader DFReportFooter
73849>>>        //        DFHeaderFrame  Hdr_Margins 0.01
73849>>>        //        DFHeaderPos    Hdr_Left
73849>>>        //        DFHeaderMargin Hm_BottomOuter 0.08
73849>>>        //        DFWrite     "Report_Footer" (Font_Bold+Font_Center)
73849>>>        //    DFEndHeader
73849>>>        //End_Procedure
73849>>>
73849>>>        // // Page_Footer is printed on each page before Page_Bottom
73849>>>        //Procedure Page_Footer
73849>>>        //    string  sFont
73849>>>        //    integer iFontSize
73849>>>        //    Move "arial" to sFont
73849>>>        //    Move 8 to iFontSize
73849>>>        //    DFFont sFont
73849>>>        //    DFFontSize iFontSize
73849>>>        //    DFBeginHeader DFPageFooter
73849>>>        //        DFHeaderFrame  Hdr_Margins 0.01
73849>>>        //        DFHeaderPos    Hdr_Left
73849>>>        //        DFHeaderMargin Hm_BottomOuter 0.08
73849>>>        //        DFWrite     "Page_Footer" (Font_Bold+Font_Center)
73849>>>        //    DFEndHeader
73849>>>        //End_Procedure
73849>>>
73849>>>
73849>>>        // Page_Bottom is printed last at the bottom margin of each page
73849>>>        Procedure Page_Bottom 
73852>>>            string sFont
73852>>>            integer iFontSize iBorder iStyle
73852>>>            DateTime dtDT
73852>>>
73852>>>            Move (CurrentDateTime()) to dtDT
73853>>>
73853>>>            Move "arial" to sFont
73854>>>            Move 8 to iFontSize
73855>>>            Move (font_default) to iStyle
73856>>>            Move (rgb_dGrey) to iBorder
73857>>>
73857>>>            DFFont sFont
73858>>>            DFFontSize iFontSize
73859>>>            DFBeginHeader DFPageBottom
73860>>>                DFHeaderFrame Hdr_Margins 0.01 iBorder
73861>>>                DFHeaderPos Hdr_Left
73862>>>                DFWriteln ("Report Printed on" * string(dtDT)) (iStyle+Font_Center)
73863>>>            DFEndHeader
73865>>>
73865>>>        End_Procedure // Page_Bottom
73866>>>
73866>>>        // Returns string with description of selection ranges
73866>>>        // Pass: Selection title, start value and end value. Return: description
73866>>>        Function SelectionCriteraDescription string sTitle string sStart string sStop returns String
73869>>>            string sText
73869>>>            If (sStart=""  AND sStop="")  function_return ""
73872>>>            If (sStart="0" AND sStop="0") function_return ""
73875>>>            If (sStart<>"" AND sStop<>"") begin
73877>>>                Move ("between" * sStart * "and" * sStop) to sText
73878>>>            end
73878>>>>
73878>>>            Else if (sStart > "") begin
73881>>>                Move ("starting at" * sStart) to sText
73882>>>            end
73882>>>>
73882>>>            Else if (sStop > "") begin
73885>>>                Move ("up to" * sStop) to sText
73886>>>            End
73886>>>>
73886>>>            function_return (sTitle * sText)
73887>>>        End_Function
73888>>>
73888>>>    End_Object // oReport
73889>>>
73889>>>    Procedure StartReport 
73892>>>        Boolean bToPrinter
73892>>>
73892>>>        // determine if direct print
73892>>>        Get IsToPrinter of oPrintTo to bToPrinter
73893>>>        Set OutPut_Device_Mode of oReport to (If(bToPrinter, PRINT_TO_PRINTER, PRINT_TO_WINDOW))
73894>>>
73894>>>        // run the report
73894>>>        Send Run_Report of oReport
73895>>>
73895>>>    End_Procedure // StartReport
73896>>>
73896>>>End_Object // oCustomerReport
73897>
73897>        Procedure Activate_About
73900>            Send DoAbout "" "" "" "" ""
73901>        End_Procedure
73902>
73902>    End_Object
73903>
73903>End_Object
73904>
73904>Start_UI
73905>
Summary
Memory Available: 2147483647
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 41422
Total Resources: 0
Total Commands : 73904
Total Windows  : 1
Total Pages    : 1
Static Data    : 453109
Message area   : 518957
Total Blocks   : 26453
